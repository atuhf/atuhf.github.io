<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Golang数据库标准库开发</title>
      <link href="/post/493eb596.html"/>
      <url>/post/493eb596.html</url>
      
        <content type="html"><![CDATA[<h1 id="数据库标准库开发"><a href="#数据库标准库开发" class="headerlink" title="数据库标准库开发"></a>数据库标准库开发</h1><h2 id="驱动"><a href="#驱动" class="headerlink" title="驱动"></a>驱动</h2><p>连接数据库是典型的CS编程，服务器端被动等待客户端建立TCP连接，并在此连接上进行特定的应用层 协议。但一般用户并不需要了解这些细节，这些都被打包到了驱动库当中，只需要简单的调用打开就可 以指定协议连接到指定的数据库。</p><p>数据库的种类和产品太多，协议太多，Go官方很难提供针对不同数据库的驱动程序，往往由各数据库官方或第三方给出不同开发语言的驱动库。但是，为了Go语言可以提前定义操作一个数据库的所有行为（接口）和数据（结构体）的规范，这些定义在database&#x2F;sql下。</p><p>MySQL驱动：</p><ul><li><a href="https://github.com/go-sql-driver/mysql">https://github.com/go-sql-driver/mysql</a> 支持 database&#x2F;sql, <strong>推荐使用</strong></li><li><a href="https://github.com/ziutek/mymysql">https://github.com/ziutek/mymysql</a> 支持 database&#x2F;sql，支持自定义接口</li><li><a href="https://github.com/Philio/GoMySQL">https://github.com/Philio/GoMySQL</a> 不支持 database&#x2F;sql，支持自定义接口</li></ul><p>安装MySQL的Go驱动</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ go get -u github.com/go-sql-driver/mysql</span><br></pre></td></tr></table></figure><p>导入包</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span> <span class="comment">// 具体实现，可以不调用，加载一下就行。网络连接、通信协议 init中注册了mysql这个名字</span></span><br></pre></td></tr></table></figure><p>注册驱动</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 在github.com/go-sql-driver/mysql/driver.go 源码中是有注册MySQL驱动的</span></span><br><span class="line"><span class="comment">// 大概在源码的83行左右有init方法来注册MySQL驱动</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">    sql.Register(<span class="string">&quot;mysql&quot;</span>, &amp;MySQLDriver&#123;&#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="利用驱动来连接数据库"><a href="#利用驱动来连接数据库" class="headerlink" title="利用驱动来连接数据库"></a>利用驱动来连接数据库</h3><p>连接字符串示例：<a href="https://github.com/go-sql-driver/mysql#examples">https://github.com/go-sql-driver/mysql#examples</a></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 连接字符串格式</span></span><br><span class="line">[username[:password]@][protocol[(address)]]/dbname[?param1=value1&amp;...&amp;paramN=valueN]</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">connstr := <span class="string">&quot;zhang:zhangg@tcp(127.0.0.1:3306)/test?loc=Local&amp;parseTime=true&amp;charset=utf8mb4&quot;</span> <span class="comment">// 这里的loc=Local是可以不写的，这个约定得看你写入数据库的时间是UTC时区还是CST时区了，是要跟个数据库的时间对应的时区要对应，不然会乱套</span></span><br><span class="line">connstr := <span class="string">&quot;zhang:zhangg@tcp/test&quot;</span></span><br><span class="line">connstr := <span class="string">&quot;zhang:zhangg@/test&quot;</span> <span class="comment">// 当[protocol[(address)]]不写的话是默认去tcp(127.0.0.1:3306)</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;database/sql&quot;</span></span><br><span class="line">    _ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span> <span class="comment">// 具体实现，可以不调用，加载一下就行。网络连接、通信协议 init中注册了mysql这个名字</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *sql.DB</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// mysql是完全实现了官方</span></span><br><span class="line">    <span class="comment">// 连接字符串</span></span><br><span class="line">    <span class="comment">// parseTime=true 是指的将输出类型更改成time.Time类型而不是其他的类型</span></span><br><span class="line">    connstr := <span class="string">&quot;root:Mysql@2023zg@tcp(10.0.0.111:3306)/test?parseTime=true&amp;charset=utf8mb4&quot;</span> <span class="comment">// ip或域名，端口，用户名，密码，协议，库 默认会连127.0.0.1:3306</span></span><br><span class="line">    <span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">    db, err = sql.Open(<span class="string">&quot;mysql&quot;</span>, connstr) <span class="comment">// 接口库的方法，指定使用的数据库种类，名称就要找到该名称对应的数据库的驱动</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Panic(err)</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    db.SetConnMaxLifetime(time.Minute * <span class="number">30</span>) <span class="comment">// 连接超时时间</span></span><br><span class="line">    db.SetMaxOpenConns(<span class="number">0</span>)                   <span class="comment">// 最大上限连接  0表示没有限制</span></span><br><span class="line">    db.SetMaxIdleConns(<span class="number">10</span>)                  <span class="comment">// 最大闲置连接</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>db的类型是*sql.DB，也就是一个操作数据库的一个句柄，底层是一个多协程的一个安全的连接池。</p><h3 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;database/sql&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    _ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span> <span class="comment">// 具体实现，可以不调用，加载一下就行。网络连接、通信协议 init中注册了mysql这个名字</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *sql.DB</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// mysql是完全实现了官方</span></span><br><span class="line">    <span class="comment">// 连接字符串</span></span><br><span class="line">    <span class="comment">// parseTime=true 是指的将输出类型更改成time.Time类型而不是其他的类型</span></span><br><span class="line">    connstr := <span class="string">&quot;root:Mysql@2023zg@tcp(10.0.0.111:3306)/test?parseTime=true&amp;charset=utf8mb4&quot;</span> <span class="comment">// ip或域名，端口，用户名，密码，协议，库 默认会连127.0.0.1:3306</span></span><br><span class="line">    <span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">    db, err = sql.Open(<span class="string">&quot;mysql&quot;</span>, connstr) <span class="comment">// 接口库的方法，指定使用的数据库种类，名称就要找到该名称对应的数据库的驱动</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Panic(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fmt.Println(db)                         // db数据库操作句柄</span></span><br><span class="line">    db.SetConnMaxLifetime(time.Second * <span class="number">30</span>) <span class="comment">// 连接超时时间</span></span><br><span class="line">    db.SetMaxOpenConns(<span class="number">0</span>)                   <span class="comment">// 最大上限连接数  0表示没有限制</span></span><br><span class="line">    db.SetMaxIdleConns(<span class="number">10</span>)                  <span class="comment">// 最大闲置连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义结构体</span></span><br><span class="line"><span class="comment">// 结构体的属性与数据库中的字段并已顺序对应</span></span><br><span class="line"><span class="keyword">type</span> Emp <span class="keyword">struct</span> &#123;</span><br><span class="line">    EmpNo     <span class="type">int</span></span><br><span class="line">    BirthDate <span class="type">string</span></span><br><span class="line">    FirstName <span class="type">string</span></span><br><span class="line">    LastName  <span class="type">string</span></span><br><span class="line">    Gender    <span class="type">int</span></span><br><span class="line">    HireDate  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 单行查询</span></span><br><span class="line">    <span class="comment">// 定义一个容器来存储查询的数据</span></span><br><span class="line">    <span class="keyword">var</span> emp = Emp&#123;&#125;</span><br><span class="line">    row := db.QueryRow(<span class="string">&quot;select emp_no,birth_date,first_name,last_name from employees where emp_no = ?&quot;</span>, <span class="number">10015</span>) <span class="comment">// 查询的时候使用*来表示的话是不好的习惯，在业务中是需要啥就查啥字段</span></span><br><span class="line">    <span class="comment">//row := db.QueryRow(&quot;select emp_no,birth_date,first_name,last_name from employees where emp_no =&quot; + &quot;10015 or 1=1&quot;) // 这行的话就改变了你想要查的数据，也就是SQL的注入，取的是10001这行的数据，为了防止SQL注入我们应该使用参数化</span></span><br><span class="line">    <span class="keyword">if</span> row.Err() != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(row.Err().Error())</span><br><span class="line">    &#125;</span><br><span class="line">    err := row.Scan(&amp;emp.EmpNo, &amp;emp.BirthDate, &amp;emp.FirstName, &amp;emp.LastName, &amp;emp.Gender, &amp;emp.HireDate) <span class="comment">// 这里的字段是需要和你要查的字段所对应</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(emp)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 批量查询</span></span><br><span class="line">    <span class="comment">// 方法一（db.Query）</span></span><br><span class="line">    <span class="comment">//rows, err := db.Query(&quot;select emp_no,birth_date,first_name,last_name from employees where emp_no = &quot; + &quot;10015 or 1=1&quot;) // 使用Query批量查询时没有使用参数化查询的话，别人利用字符串拼接的话可能会让其查到所有的数据,所以建议使用参数化查询</span></span><br><span class="line">    <span class="comment">//rows, err := db.Query(&quot;select emp_no,birth_date,first_name,last_name from employees where emp_no = ? &quot;, 10015) // 参数化取emp_no = 10015的相关信息</span></span><br><span class="line">    <span class="comment">//if err != nil &#123;</span></span><br><span class="line">    <span class="comment">//log.Fatal(err)</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//for rows.Next() &#123; // Next波动到当前行，Scan获取当前行</span></span><br><span class="line">    <span class="comment">//err = rows.Scan(&amp;emp.EmpNo, &amp;emp.BirthDate, &amp;emp.FirstName, &amp;emp.LastName, &amp;emp.Gender, &amp;emp.HireDate)</span></span><br><span class="line">    <span class="comment">//if err != nil &#123;</span></span><br><span class="line">    <span class="comment">//log.Fatal(err)</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//fmt.Println(emp)</span></span><br><span class="line">    <span class="comment">////fmt.Printf(&quot;%T %[1]v\n&quot;, emp.BirthDate)</span></span><br><span class="line">    <span class="comment">//t, err := time.Parse(&quot;2006-01-02T15:04:05Z&quot;, emp.BirthDate) // 时间解析</span></span><br><span class="line">    <span class="comment">//if err != nil &#123;</span></span><br><span class="line">    <span class="comment">//log.Fatal(err)</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line">    <span class="comment">//fmt.Printf(&quot;%T %[1]v\n&quot;, t)</span></span><br><span class="line">    <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 方法二（db.Prepare）预编译 推荐使用这个</span></span><br><span class="line">    stmt, err := db.Prepare(<span class="string">&quot;select emp_no,birth_date,first_name,last_name from employees where emp_no &gt; ? &quot;</span>) <span class="comment">// 使用db.Prepare在加上参数化查询的话可以减少SQL注入</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    rows, err := stmt.Query(<span class="number">10018</span>)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Fatal(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> rows.Next() &#123;</span><br><span class="line">        err = rows.Scan(&amp;emp.EmpNo, &amp;emp.BirthDate, &amp;emp.FirstName, &amp;emp.LastName, &amp;emp.Gender, &amp;emp.HireDate)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(emp)</span><br><span class="line">        t, err := time.Parse(<span class="string">&quot;2006-01-02T15:04:05Z&quot;</span>, emp.BirthDate)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            log.Fatal(err)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%T %[1]v\n&quot;</span>, t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="插入、修改、删除"><a href="#插入、修改、删除" class="headerlink" title="插入、修改、删除"></a>插入、修改、删除</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;database/sql&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    _ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span> <span class="comment">// 具体实现，可以不调用，加载一下就行。网络连接、通信协议 init中注册了mysql这个名字</span></span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> db *sql.DB</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">init</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// mysql是完全实现了官方</span></span><br><span class="line">    <span class="comment">// 连接字符串</span></span><br><span class="line">    <span class="comment">// parseTime=true 是指的将输出类型更改成time.Time类型而不是其他的类型</span></span><br><span class="line">    connstr := <span class="string">&quot;root:Mysql@2023zg@tcp(10.0.0.111:3306)/test?parseTime=true&amp;charset=utf8mb4&quot;</span> <span class="comment">// ip或域名，端口，用户名，密码，协议，库 默认会连127.0.0.1:3306</span></span><br><span class="line">    <span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">    db, err = sql.Open(<span class="string">&quot;mysql&quot;</span>, connstr) <span class="comment">// 接口库的方法，指定使用的数据库种类，名称就要找到该名称对应的数据库的驱动</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Panic(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fmt.Println(db)                         // db数据库操作句柄</span></span><br><span class="line">    db.SetConnMaxLifetime(time.Second * <span class="number">30</span>) <span class="comment">// 连接超时时间</span></span><br><span class="line">    db.SetMaxOpenConns(<span class="number">0</span>)                   <span class="comment">// 最大上限连接数  0表示没有限制</span></span><br><span class="line">    db.SetMaxIdleConns(<span class="number">10</span>)                  <span class="comment">// 最大闲置连接数</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义结构体</span></span><br><span class="line"><span class="comment">// 结构体的属性与数据库中的字段并已顺序对应</span></span><br><span class="line"><span class="keyword">type</span> Emp <span class="keyword">struct</span> &#123;</span><br><span class="line">    EmpNo     <span class="type">int</span></span><br><span class="line">    BirthDate <span class="type">string</span></span><br><span class="line">    FirstName <span class="type">string</span></span><br><span class="line">    LastName  <span class="type">string</span></span><br><span class="line">    Gender    <span class="type">int</span></span><br><span class="line">    HireDate  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">  <span class="comment">// 插入数据</span></span><br><span class="line">  result, err := db.Exec(<span class="string">&quot;insert into employees(emp_no,birth_date,first_name,last_name,gender,hire_date) values(10023,&#x27;1980-01-01&#x27;,&#x27;John&#x27;,&#x27;tom&#x27;,1,&#x27;2006-01-02&#x27;)&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Panicln(err)</span><br><span class="line">  &#125;</span><br><span class="line">  fmt.Println(result)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 删除数据</span></span><br><span class="line">  stmt, err1 := db.Prepare(<span class="string">&quot;delete from titles where emp_no=?&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> errs != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Panicln(err1)</span><br><span class="line">  &#125;</span><br><span class="line">  result, err2 := stmt.Exec(<span class="number">10016</span>)</span><br><span class="line">  <span class="keyword">if</span> err2 != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Panicln(err2)</span><br><span class="line">  &#125;</span><br><span class="line">  fmt.Println(result)</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 修改</span></span><br><span class="line">  result, err3 := db.Exec(<span class="string">&quot;update titles set title = ? where emp_no=?&quot;</span>, <span class="string">&quot;hhh&quot;</span>, <span class="number">10014</span>)</span><br><span class="line">  <span class="keyword">if</span> err3 != <span class="literal">nil</span> &#123;</span><br><span class="line">    log.Fatal(err3)</span><br><span class="line">  &#125;</span><br><span class="line">  fmt.Println(result)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>总结：</strong></p><ul><li>驱动安装和导入</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ go get -u github.com/go-sql-driver/mysql</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 导入</span></span><br><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;github.com/go-sql-driver/mysql&quot;</span></span><br></pre></td></tr></table></figure><ul><li>连接数据库</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql.Open(<span class="string">&quot;mysql&quot;</span>, <span class="string">&quot;root:Mysql@2023zg@tcp(10.0.0.111:3306)/test?parseTime=true&amp;charset=utf8mb4&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>可以使用db提供的接口函数来实现一些操作</li><li>我们使用db.Prepare进行预编译并使用参数化查询<ul><li>这样可以对预编译的SQL语句进行缓存，省去了每次去解析优化该SQL语句的过程</li><li>这样的话也可以防止别人的SQL注入</li><li>可以使用sql.Stmt来操作数据库</li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang的日志管理</title>
      <link href="/post/9ffa8998.html"/>
      <url>/post/9ffa8998.html</url>
      
        <content type="html"><![CDATA[<h1 id="日志"><a href="#日志" class="headerlink" title="日志"></a>日志</h1><h2 id="标准库中的log包"><a href="#标准库中的log包" class="headerlink" title="标准库中的log包"></a>标准库中的log包</h2><p>Go标准库中有log包，提供了简单的日志功能。</p><table><thead><tr><th>输出</th><th>格式输出</th><th>换行输出</th><th></th></tr></thead><tbody><tr><td>log.Print()</td><td>log.Printf()</td><td>log.Println()</td><td>类似于fmt.Print*</td></tr><tr><td>log.Fatal()</td><td>log.Fatalf()</td><td>log.Fatalln()</td><td>相当于log.Print* + os.Exit(1)</td></tr><tr><td>log.Panic()</td><td>log.Panicf()</td><td>log.Panicln()</td><td>相当于log.Print* + panic()</td></tr></tbody></table><p>日志输出需要使用日志记录器Logger</p><p>log包中提供了一个缺省的Logger即std。std是小写的，所以在包外是不可见的，之所以就提供了一个Default()方法返回std给包外使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 大约在源码log.go文件的第90行左右</span></span><br><span class="line"><span class="keyword">var</span> std = New(os.Stderr, <span class="string">&quot;&quot;</span>, LstdFlags)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Default returns the standard logger used by the package-level output functions.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Default</span><span class="params">()</span></span> *Logger &#123; <span class="keyword">return</span> std &#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    Ldate         = <span class="number">1</span> &lt;&lt; <span class="literal">iota</span>     <span class="comment">// 1 当前时区的日期: 2009/01/23</span></span><br><span class="line">    Ltime                         <span class="comment">// 2 当前时区的时间: 01:23:23</span></span><br><span class="line">    Lmicroseconds                 <span class="comment">// 4 微秒: 01:23:23.123123.  assumes Ltime.</span></span><br><span class="line">    Llongfile                     <span class="comment">// 8 绝对路径和行号: /a/b/c/d.go:23</span></span><br><span class="line">    Lshortfile                    <span class="comment">// 16 文件名和行号: d.go:23. overrides Llongfile</span></span><br><span class="line">    LUTC                          <span class="comment">// 32 使用UTC（GMT），而不是本地时区</span></span><br><span class="line">    Lmsgprefix                    <span class="comment">// 64 默认加了前缀是放在行首的，这个标记把前缀prefix放到消息message之前</span></span><br><span class="line">    LstdFlags     = Ldate | Ltime <span class="comment">// 3 initial values for the standard logger</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>上面表中列出的方法底层都是使用std.Outpuut输出日志内容。而std的本质上是使用了标准错误输出、无前缀、LstdFlags标准标记的记录器Logger实例。</p><h3 id="std的使用"><a href="#std的使用" class="headerlink" title="std的使用"></a>std的使用</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 使用缺省的Logger</span></span><br><span class="line">    log.Print(<span class="string">&quot;我来了！\n&quot;</span>)</span><br><span class="line">    log.Printf(<span class="string">&quot;%s\n&quot;</span>, <span class="string">&quot;我跑过来了！&quot;</span>)</span><br><span class="line">    log.Println(<span class="string">&quot;我要冲过来的！&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">//log.Fatal(&quot;我要退出了！&quot;) // ==&gt; log.Print(&quot;我要退出了！&quot;);os.Exit(1)</span></span><br><span class="line"></span><br><span class="line">    log.Panicln(<span class="string">&quot;我已经恐慌了！&quot;</span>) <span class="comment">// ==&gt; log.Println(&quot;我已经恐慌了！&quot;);panic()</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="自定义的Logger"><a href="#自定义的Logger" class="headerlink" title="自定义的Logger"></a>自定义的Logger</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 裁剪与标准库中的log.go文件</span></span><br><span class="line"><span class="comment">// A Logger represents an active logging object that generates lines of</span></span><br><span class="line"><span class="comment">// output to an io.Writer. Each logging operation makes a single call to</span></span><br><span class="line"><span class="comment">// the Writer&#x27;s Write method. A Logger can be used simultaneously from</span></span><br><span class="line"><span class="comment">// multiple goroutines; it guarantees to serialize access to the Writer.</span></span><br><span class="line"><span class="keyword">type</span> Logger <span class="keyword">struct</span> &#123;</span><br><span class="line">    mu        sync.Mutex  <span class="comment">// ensures atomic writes; protects the following fields</span></span><br><span class="line">    prefix    <span class="type">string</span>      <span class="comment">// prefix on each line to identify the logger (but see Lmsgprefix)</span></span><br><span class="line">    flag      <span class="type">int</span>         <span class="comment">// properties</span></span><br><span class="line">    out       io.Writer   <span class="comment">// destination for output</span></span><br><span class="line">    buf       []<span class="type">byte</span>      <span class="comment">// for accumulating text to write</span></span><br><span class="line">    isDiscard atomic.Bool <span class="comment">// whether out == io.Discard</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// New creates a new Logger. The out variable sets the</span></span><br><span class="line"><span class="comment">// destination to which log data will be written.</span></span><br><span class="line"><span class="comment">// The prefix appears at the beginning of each generated log line, or</span></span><br><span class="line"><span class="comment">// after the log header if the Lmsgprefix flag is provided.</span></span><br><span class="line"><span class="comment">// The flag argument defines the logging properties.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(out io.Writer, prefix <span class="type">string</span>, flag <span class="type">int</span>)</span></span> *Logger &#123;</span><br><span class="line">    l := &amp;Logger&#123;out: out, prefix: prefix, flag: flag&#125;</span><br><span class="line">    <span class="keyword">if</span> out == io.Discard &#123;</span><br><span class="line">        l.isDiscard.Store(<span class="literal">true</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果觉得缺省的Logger std不满意的话，我们可以使用New构建一个自定义的Logger并指定前缀、Flags</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 使用自定义的Logger</span></span><br><span class="line">    infoLogger := log.New(os.Stdout, <span class="string">&quot;Info：&quot;</span>, log.LstdFlags|log.Lmsgprefix)</span><br><span class="line">    infoLogger.Println(<span class="string">&quot;这是我自定义的Logger有info前缀的消息！&quot;</span>) <span class="comment">// 使用stdout输出</span></span><br><span class="line"></span><br><span class="line">    errLogger := log.New(os.Stderr, <span class="string">&quot;Error：&quot;</span>, log.LstdFlags)</span><br><span class="line">    errLogger.Println(<span class="string">&quot;这是我自定义的Logger是Error前缀的的消息！&quot;</span>) <span class="comment">// log.Lmsgprefix 这里没有使用这个的话默认的前缀跑到前面去了，使用的话就会在消息的前面 这里用的stderr（标准错误输出）</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写入日志文件"><a href="#写入日志文件" class="headerlink" title="写入日志文件"></a>写入日志文件</h3><p>要注意New方法签名 <span style="background-color:gray">New(out io.Writer, prefix string, flag int) *Logger</span> 中的out参数提供Writer接口即可，那么我们就可以提供一个可写文件对象。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// os.Open是只读打开文件，而OpenFile的话就是按照定义方式来操作文件</span></span><br><span class="line">    <span class="comment">// os.O_WRONLY 只写 os.O_CREATE 文件不存在即创建 os.O_APPEND 追加</span></span><br><span class="line">    <span class="comment">// os.ModePerm Unix 权限位 0o777</span></span><br><span class="line">    f, err := os.OpenFile(<span class="string">&quot;E:/test.log&quot;</span>, os.O_WRONLY|os.O_CREATE|os.O_APPEND, os.ModePerm)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Panicln(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> f.Close() <span class="comment">// 不用了要记得关闭</span></span><br><span class="line">    l := log.New(f, <span class="string">&quot;Info: &quot;</span>, log.LstdFlags|log.Lmsgprefix) <span class="comment">// 前缀在消息的前面</span></span><br><span class="line">    l.Println(<span class="string">&quot;我就是出来逛逛，没啥其他意思！&quot;</span>)</span><br><span class="line"></span><br><span class="line">    l1 := log.New(f, <span class="string">&quot;Error: &quot;</span>, log.LstdFlags) <span class="comment">// 默认给的前缀是在最前面</span></span><br><span class="line">    l1.Println(<span class="string">&quot;我要准备回家了，气死我了！&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="zerolog包"><a href="#zerolog包" class="headerlink" title="zerolog包"></a>zerolog包</h2><p>在Go标准库中的log模块是有点简陋的，在实际使用上并不是很方便。</p><p>我们就可以使用第三方的log库：</p><ul><li>logrus库是有日志级别、Hook机制、日志格式输出，很好用</li><li>zap是Uber的开源高性能日志库</li><li>zerolog更注重开发的体验，高性能、有日志级别、链式API，json格式输出日志记录，号称0内存分配</li></ul><p>zerolog官网：<a href="https://zerolog.io/">https://zerolog.io/</a></p><p>安装zerolog模块：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ go get -u github.com/rs/zerolog/log</span><br></pre></td></tr></table></figure><h3 id="缺省的Logger"><a href="#缺省的Logger" class="headerlink" title="缺省的Logger"></a>缺省的Logger</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    log.Print(<span class="string">&quot;你好！&quot;</span>) <span class="comment">// 这里是使用的全局缺省logger 默认产生debug级别的消息</span></span><br><span class="line">    <span class="comment">// &#123;&quot;level&quot;:&quot;debug&quot;,&quot;time&quot;:&quot;2023-07-24T19:55:16+08:00&quot;,&quot;message&quot;:&quot;你好！&quot;&#125;</span></span><br><span class="line">    log.Printf(<span class="string">&quot;%s&quot;</span>, <span class="string">&quot;不要啊！&quot;</span>)</span><br><span class="line">    <span class="comment">// &#123;&quot;level&quot;:&quot;debug&quot;,&quot;time&quot;:&quot;2023-07-24T19:55:16+08:00&quot;,&quot;message&quot;:&quot;不要啊！&quot;&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Logger is the global logger. 在源码第14行，定义了一个全局导出的缺省Logger</span></span><br><span class="line"><span class="keyword">var</span> Logger = zerolog.New(os.Stderr).With().Timestamp().Logger() <span class="comment">// 链式调用</span></span><br><span class="line"><span class="comment">// 缺省Logger是使用的标准错误输出</span></span><br></pre></td></tr></table></figure><p>log.Print()、log.Printf()这些方法使用方式和标准库的log模块是类似的。</p><h3 id="级别"><a href="#级别" class="headerlink" title="级别"></a>级别</h3><p>zerolog模块是有提供以下级别的（从高到低）：</p><ul><li>panic(zerolog.PanicLevel,5)</li><li>fatal(zerolog.FatalLevel,4)</li><li>error(zerolog.ErrorLevel,3)</li><li>warn(zerolog.WarnLevel,2)</li><li>info(zerolog.InfoLevel,1)</li><li>debug(zerolog.DebugLevel,0)</li><li>trace(zerolog.TraceLevel,-1)</li></ul><p>级别又有：</p><ul><li>gLevel全局的级别<ul><li>zerolog.SetGlobalLevel(级别数字或常量) 来设置全局级别，一般都不会去修改全局的级别</li><li>zerolog.GlobalLevel() 获取当前的全局级别</li></ul></li><li>每个Logger的级别</li><li>消息的级别</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    zerolog.TimeFieldFormat = <span class="string">&quot;2006-01-02 15:04:05 -0700&quot;</span>     <span class="comment">// 设置全局的gLevel时间格式</span></span><br><span class="line">    fmt.Println(zerolog.GlobalLevel(), log.Logger.GetLevel()) <span class="comment">// 默认全局的gLevel级别为trace，缺省logger的级别为trace</span></span><br><span class="line">    log1 := log.Level(<span class="number">2</span>)                                      <span class="comment">// 创建一个子Logger级别为WarnLevel级别，给子Logger设置消息级别与其他Logger无关</span></span><br><span class="line">    fmt.Println(log1.GetLevel())                              <span class="comment">// warn</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    log.Trace().Msg(<span class="string">&quot;我是缺省Logger的trace级别的消息&quot;</span>) <span class="comment">// 正常输出</span></span><br><span class="line">    log.Debug().Msg(<span class="string">&quot;我是缺省Logger的debug级别的消息&quot;</span>) <span class="comment">// 正常输出</span></span><br><span class="line">    log.Info().Msg(<span class="string">&quot;我是缺省Logger的info级别的消息&quot;</span>)   <span class="comment">// 正常输出</span></span><br><span class="line">    log.Warn().Msg(<span class="string">&quot;我是缺省Logger的warn级别的消息&quot;</span>)   <span class="comment">// 正常输出</span></span><br><span class="line">    log.Error().Msg(<span class="string">&quot;我是缺省Logger的error级别的消息&quot;</span>) <span class="comment">// 正常输出</span></span><br><span class="line">    log1.Info().Msg(<span class="string">&quot;我是log1的info级别消息&quot;</span>)       <span class="comment">// 输出不了，消息级别低于Logger级别</span></span><br><span class="line">    log1.Warn().Msg(<span class="string">&quot;我是log1的warn级别消息&quot;</span>)       <span class="comment">// 正常输出</span></span><br><span class="line">    log1.Error().Msg(<span class="string">&quot;我是log1的error级别消息&quot;</span>)     <span class="comment">// 正常输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从上面代码可以看出我们设置一个新的Logger，但是会发现不会影响缺省的Logger，缺省log的级别消息还是可以全部输出，但是设置的新的Logger并设置了级别，会发现低于设置新的Logger级别的消息会输出不了。</p><p>这里因为是有<strong>消息级别</strong>和<strong>Logger级别</strong>。</p><p>分析上面代码，log1的级别是warn(2)，而log1.Info()要输出的消息级别为info(1)，这时的消息级别就小于log1的级别，所以输出不了；而log1.Warn()、log1.Error()输出的消息级别是warn和error，这两个的消息级别是大于或等于log1级别的，因此它们的消息就可以正常输出。</p><p>因为缺省的Logger的级别是trace，任何的消息级别都大于等于log的级别，因此都可以输出。</p><p>这时我们去修改一下全局的级别看看结果</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    zerolog.TimeFieldFormat = <span class="string">&quot;2006-01-02 15:04:05 -0700&quot;</span>     <span class="comment">// 设置全局的gLevel时间格式</span></span><br><span class="line">    fmt.Println(zerolog.GlobalLevel(), log.Logger.GetLevel()) <span class="comment">// 默认全局的gLevel级别为trace，缺省logger的级别为trace</span></span><br><span class="line">    zerolog.SetGlobalLevel(<span class="number">3</span>)                                 <span class="comment">// 修改全局的gLevel级别 error</span></span><br><span class="line">    log1 := log.Level(<span class="number">2</span>)                                      <span class="comment">// 创建一个子Logger级别为WarnLevel级别，给子Logger设置消息级别与其他Logger无关</span></span><br><span class="line">    fmt.Println(zerolog.GlobalLevel(), log1.GetLevel())       <span class="comment">// error warn</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    log.Trace().Msg(<span class="string">&quot;我是缺省Logger的trace级别的消息&quot;</span>) <span class="comment">// 输出不了</span></span><br><span class="line">    log.Debug().Msg(<span class="string">&quot;我是缺省Logger的debug级别的消息&quot;</span>) <span class="comment">// 输出不了</span></span><br><span class="line">    log.Info().Msg(<span class="string">&quot;我是缺省Logger的info级别的消息&quot;</span>)   <span class="comment">// 输出不了</span></span><br><span class="line">    log.Warn().Msg(<span class="string">&quot;我是缺省Logger的warn级别的消息&quot;</span>)   <span class="comment">// 输出不了</span></span><br><span class="line">    log.Error().Msg(<span class="string">&quot;我是缺省Logger的error级别的消息&quot;</span>) <span class="comment">// 正常输出</span></span><br><span class="line">    log1.Info().Msg(<span class="string">&quot;我是log1的info级别消息&quot;</span>)       <span class="comment">// 输出不了</span></span><br><span class="line">    log1.Warn().Msg(<span class="string">&quot;我是log1的warn级别消息&quot;</span>)       <span class="comment">// 输出不了</span></span><br><span class="line">    log1.Error().Msg(<span class="string">&quot;我是log1的error级别消息&quot;</span>)     <span class="comment">// 正常输出</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面是我修改了全局的gLevel级别，这时会发现缺省的logger和log1都只能输出error级别的输出，这就说明了将gLevel调整到error级别后，所有的logger输出的消息级别都要必须大于等于gLevel级别。</p><p><strong>这里要特别注意，zerolog.SetGlobalLevel() 设置的是全局的gLevel，这样会影响所有的logger。</strong></p><p>所以我们可以得出，日志消息是否能输出，应该满足该要求 消息级别 &gt;&#x3D; max(gLevel, 当前的logger级别)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">zerolog.SetGlobalLevel(<span class="number">7</span>) <span class="comment">// zerolog.SetGlobalLevel(zerolog.Disable)</span></span><br><span class="line"><span class="comment">// 没有消息级别可以大于等于7的了，这个就是相当于禁用了所有的Logger，这样也就不能输出日志了</span></span><br></pre></td></tr></table></figure><h3 id="上下文"><a href="#上下文" class="headerlink" title="上下文"></a>上下文</h3><p>zerolog是按照json格式来输出的，还可以自定义一些键值来对字段增加到上下文中以输出。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    zerolog.TimeFieldFormat = <span class="string">&quot;2006-01-02 15:04:05 -0700&quot;</span> <span class="comment">// 设置全局的gLevel时间格式</span></span><br><span class="line">    f, err := os.OpenFile(<span class="string">&quot;E:/test.log&quot;</span>, os.O_CREATE|os.O_WRONLY|os.O_APPEND, os.ModePerm)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Panic().Err(err).Send()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> f.Close()</span><br><span class="line">    multiLevelWriter := zerolog.MultiLevelWriter(f, os.Stderr)                                                 <span class="comment">// 多分支写</span></span><br><span class="line">    l1 := zerolog.New(multiLevelWriter).With().Bool(<span class="string">&quot;Success&quot;</span>, <span class="literal">false</span>).Str(<span class="string">&quot;Reason&quot;</span>, <span class="string">&quot;File Not Found&quot;</span>).Logger() <span class="comment">// 从上下文返回Logger</span></span><br><span class="line">    l1.Info().Msg(<span class="string">&quot;我就是出来瞅瞅！&quot;</span>)</span><br><span class="line">    l1.Info().Send() <span class="comment">// Send is equivalent to calling Msg(&quot;&quot;)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// zerolog.TimeFieldFormat = &quot;2006-01-02 15:04:05 -0700&quot; // 设置全局的gLevel的time字段时间格式</span></span><br><span class="line">    zerolog.TimeFieldFormat = zerolog.TimeFormatUnix <span class="comment">// 自定义time字段时间的格式 TimeFormatUnix的时间戳</span></span><br><span class="line">    <span class="comment">// zerolog.ErrorFieldName = &quot;err&quot; // 指的是修改输出日志json中的缺省字段名error</span></span><br><span class="line">    <span class="comment">// 定义错误日志</span></span><br><span class="line">    err := errors.New(<span class="string">&quot;这是我自定义的一个错误&quot;</span>)</span><br><span class="line">    log.Error().Err(err).Send() <span class="comment">// Error()指的是错误级别的消息、Err(err)指的是error字段，错误消息的内容、Send()这个的话是用于已经有错误消息了，这里的message字段就可以省略了</span></span><br><span class="line">    log.Fatal().Err(err).Send() <span class="comment">// 这里的消息级别是fatal级别了</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="全局的Logger"><a href="#全局的Logger" class="headerlink" title="全局的Logger"></a>全局的Logger</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局默认的Logger定义如下</span></span><br><span class="line"><span class="comment">// Logger is the global logger.</span></span><br><span class="line"><span class="keyword">var</span> Logger = zerolog.New(os.Stderr).With().Timestamp().Logger()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 也是可以覆盖全局的Logger</span></span><br><span class="line"><span class="comment">// 修改全局的日期格式</span></span><br><span class="line">zerolog.TimeFieldFormat = <span class="string">&quot;2006-01-02 15:04:05 -0700&quot;</span> <span class="comment">// 自定义的时间格式</span></span><br><span class="line">zerolog.TimeFieldFormat = zerolog.TimeFormatUnix <span class="comment">// Unix时间戳</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 可以使用.With()来创建一个全局Logger的子logger</span></span><br><span class="line">zerolog.TimeFieldFormat = zerolog.TimeFormatUnix <span class="comment">// 设置全局的gLevel的time字段时间格式，Unix时间戳</span></span><br><span class="line">log.Logger = log.Logger.With().</span><br><span class="line">    Str(<span class="string">&quot;school&quot;</span>, <span class="string">&quot;小张测试&quot;</span>).</span><br><span class="line">    Strs(<span class="string">&quot;mytest&quot;</span>, []<span class="type">string</span>&#123;<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;gui&quot;</span>&#125;).</span><br><span class="line">    Logger() <span class="comment">// 这里的话是把全局的Logger给覆盖了，这样会影响到其他人用全局的Logger</span></span><br><span class="line">log.Info().Msg(<span class="string">&quot;我就是出来看看有不有人在内卷！&quot;</span>)</span><br><span class="line">log.Warn().Send()</span><br><span class="line"><span class="comment">//&#123;&quot;level&quot;:&quot;info&quot;,&quot;school&quot;:&quot;小张测试&quot;,&quot;mytest&quot;:[&quot;zhang&quot;,&quot;gui&quot;],&quot;time&quot;:1690458723,&quot;message&quot;:&quot;我就是出来看看有不有人在内卷！&quot;&#125;</span></span><br><span class="line"><span class="comment">//&#123;&quot;level&quot;:&quot;warn&quot;,&quot;school&quot;:&quot;小张测试&quot;,&quot;mytest&quot;:[&quot;zhang&quot;,&quot;gui&quot;],&quot;time&quot;:1690458723&#125;</span></span><br></pre></td></tr></table></figure><h3 id="自定义Logger"><a href="#自定义Logger" class="headerlink" title="自定义Logger"></a>自定义Logger</h3><h4 id="基于全局Logger自定义"><a href="#基于全局Logger自定义" class="headerlink" title="基于全局Logger自定义"></a>基于全局Logger自定义</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    zerolog.TimeFieldFormat = zerolog.TimeFormatUnix <span class="comment">// 设置全局的gLevel的time字段时间格式</span></span><br><span class="line">    l1 := log.With().                                <span class="comment">// log.Logger.With()中间的Logger是可以省略的，返回的是基于全局Logger的子logger</span></span><br><span class="line">                                Str(<span class="string">&quot;school&quot;</span>, <span class="string">&quot;小张测试&quot;</span>).</span><br><span class="line">                                Strs(<span class="string">&quot;mytest&quot;</span>, []<span class="type">string</span>&#123;<span class="string">&quot;zhang&quot;</span>, <span class="string">&quot;gui&quot;</span>&#125;).</span><br><span class="line">                                Caller(). <span class="comment">// 这里是增加了日志调用的位置信息字段，指的是哪里的代码包调用了日志</span></span><br><span class="line">                                Logger()  <span class="comment">// 返回Logger</span></span><br><span class="line">    l1.Info().Send()</span><br><span class="line">    <span class="comment">// &#123;&quot;level&quot;:&quot;info&quot;,&quot;school&quot;:&quot;小张测试&quot;,&quot;mytest&quot;:[&quot;zhang&quot;,&quot;gui&quot;],&quot;time&quot;:1690459129,&quot;caller&quot;:&quot;E:/mycode/main.go:15&quot;&#125;</span></span><br><span class="line">    log.Info().Send()</span><br><span class="line">    <span class="comment">// &#123;&quot;level&quot;:&quot;info&quot;,&quot;time&quot;:1690459129&#125; 全局Logger</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="重新构建新的Logger"><a href="#重新构建新的Logger" class="headerlink" title="重新构建新的Logger"></a>重新构建新的Logger</h4><p>注意使用zerolog.New()方法重新构建一个新的Logger是想要输出time的字段的话是需要加上 <span style="background-color:gray">Timestamp()</span> 的方法。不然是没有time字段打印出来的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    zerolog.TimeFieldFormat = zerolog.TimeFormatUnix <span class="comment">// 设置全局的gLevel的time字段时间格式</span></span><br><span class="line">    l1 := zerolog.New(os.Stdout).                    <span class="comment">// 这里是重新构造出一个新的Logger，而不是基于全局的Logger了,os.Stdout是标准输出</span></span><br><span class="line">                                With().Int(<span class="string">&quot;h1&quot;</span>, <span class="number">10</span>).</span><br><span class="line">                                Ints(<span class="string">&quot;h1s&quot;</span>, []<span class="type">int</span>&#123;<span class="number">666</span>, <span class="number">999</span>&#125;).</span><br><span class="line">                                Caller(). <span class="comment">// 调用者信息：增加日志函数调用的位置信息字段</span></span><br><span class="line">                                Logger().</span><br><span class="line">                                Level(<span class="number">2</span>) <span class="comment">// 重新定义这个Logger的级别为warn，在返回Logger</span></span><br><span class="line">    fmt.Println(l1.GetLevel())</span><br><span class="line">    l1.Info().Send() <span class="comment">// 这行会输出不出来，消息级别低于Logger级别</span></span><br><span class="line">    l1.Error().Send() <span class="comment">// &#123;&quot;level&quot;:&quot;error&quot;,&quot;h1&quot;:10,&quot;h1s&quot;:[666,999],&quot;caller&quot;:&quot;E:/mycode/main.go:20&quot;&#125;</span></span><br><span class="line"></span><br><span class="line">    log.Info().Send() <span class="comment">// 全局Logger</span></span><br><span class="line">    <span class="comment">//&#123;&quot;level&quot;:&quot;info&quot;,&quot;time&quot;:1690459972&#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="写入日志文件-1"><a href="#写入日志文件-1" class="headerlink" title="写入日志文件"></a>写入日志文件</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/rs/zerolog/log&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    zerolog.TimeFieldFormat = zerolog.TimeFormatUnix <span class="comment">// 设置全局的gLevel的time字段时间格式</span></span><br><span class="line">    f, err := os.OpenFile(<span class="string">&quot;E:/test.log&quot;</span>, os.O_CREATE|os.O_WRONLY|os.O_APPEND, os.ModePerm)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        log.Panic().Err(err)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">defer</span> f.Close()</span><br><span class="line">    multi := zerolog.MultiLevelWriter(f, os.Stderr)                                 <span class="comment">// 多分支写，指的是可以输出到文件或控制台多处</span></span><br><span class="line">    l1 := zerolog.New(multi).With().Str(<span class="string">&quot;test&quot;</span>, <span class="string">&quot;hello world&quot;</span>).Timestamp().Logger() <span class="comment">// 这里的Timestamp()为这个全新的Logger增加了时间戳输出</span></span><br><span class="line">    l1.Info().Msg(<span class="string">&quot;我可以兵分两路去输出，一是输出到日志文件，二还可以输出到控制台&quot;</span>)</span><br><span class="line">    l1.Warn().Send()</span><br><span class="line">    l1.Error().Msg(<span class="string">&quot;l1 error msg &quot;</span>)</span><br><span class="line">    l1.Err(errors.New(<span class="string">&quot;这是我自定义的一个错误是error字段的&quot;</span>)).Send() <span class="comment">// 这里使用Err方法的话，输出的日志默认是error级别的</span></span><br><span class="line">    l1.Fatal().Err(errors.New(<span class="string">&quot;阿萨阿萨&quot;</span>)).Send()         <span class="comment">// 这个将默认输出的error级别改成fatal级别</span></span><br><span class="line">    <span class="comment">//l2.Info().Stack() // 栈上面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果只输出到日志文件里面的话可以直接使用 <span style="background-color:gray">zerolog.New(f).With().Str(“test”, “hello world”).Timestamp().Logger()</span> </p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang的包管理</title>
      <link href="/post/76497256.html"/>
      <url>/post/76497256.html</url>
      
        <content type="html"><![CDATA[<h1 id="模块化"><a href="#模块化" class="headerlink" title="模块化"></a>模块化</h1><p>用任何语言来开发，如果软件规模扩大，会编写大量的函数、结构体、接口等代码。这些代码不可能写在一个文件中，这就会产生大量的文件。如果这些文件杂乱无章，就会造成名称冲突、重复定义、难以检索、无法引用、共享不便、版本管理等一系列问题。有一些功能模块如何复用，如何共享方便其他项目使用。所以，一定要有模块化管理，解决以上诸多问题。</p><h2 id="包"><a href="#包" class="headerlink" title="包"></a>包</h2><ul><li>包由多个文件和目录组成</li><li>使用 <span style="background-color:gray">package &lt;包名&gt; </span> 来定义包名</li><li>包名一般都会采用小写，符合标识符要求</li><li>当前目录名和 <span style="background-color:gray">package &lt;包名&gt; </span> 中的包名可以不一致，但是为了保险最好是保持一致</li><li><strong>同级文件归属于一个包</strong>，也就是每个包目录的当前目录中，只能统一使用同一个package的包名，否则的话会出现编译错误</li></ul><p>在一般情况来说，开发项目时，可以把相关功能的代码集中放在某个包里面，例如在main包目录中新建一个calc包，将所有的计算函数都放在其中，以供别的代码调用。</p><p>同一个目录就是同一个包，该包内go文件里的变量、函数、结构体互相可见，可以直接使用。</p><p>跨目录就是挎包，使用时需要导入别的包，导入时需要指定该包的路径。</p><h2 id="包管理"><a href="#包管理" class="headerlink" title="包管理"></a>包管理</h2><h3 id="GOPATH"><a href="#GOPATH" class="headerlink" title="GOPATH"></a>GOPATH</h3><p>在Go的1.11版本之前，项目依赖包存在于GOPATH。GOPATH是一个环境变量，指向一个目录，其中存放项目依赖包的源码。</p><p>GOPATH的缺省值是 <span style="background-color:gray">家目录&#x2F;go</span> 。</p><p>开发的代码放在 <span style="background-color:gray">GOPATH&#x2F;src</span> 的目录中，编译这个目录的代码，生成的二进制文件放到 <span style="background-color:gray">GOPATH&#x2F;bin</span> 目录下面</p><p>这样的话还是会有下面的问题：</p><ul><li>GOPATH不区分项目，代码中如何import的路径均从GOPATH作为根目录开始，如果有多个项目依赖不同库的不同版本，这样就很难解决了；</li><li>所有项目的依赖都放在GOPATH中，很难知道当前项目的依赖项有哪些</li></ul><h3 id="GOPATH-vendor机制"><a href="#GOPATH-vendor机制" class="headerlink" title="GOPATH + vendor机制"></a>GOPATH + vendor机制</h3><p>在Go的1.5版本引入vendor机制。</p><p>vendor：将项目依赖包复制到项目下的vendor目录，在编译时使用项目下的vendor目录的包进行编译。</p><p>依然不能解决不同项目依赖不同版本的问题</p><p>包搜索的顺序</p><ul><li>在当前包vendor目录查找</li><li>向上级目录查找，直到GOPATH&#x2F;src&#x2F;vendor目录</li><li>在GOPATH目录查找</li><li>在GOROOT目录查找标准库</li></ul><h3 id="Go-Modules"><a href="#Go-Modules" class="headerlink" title="Go Modules"></a>Go Modules</h3><p>Go Modules是从Go的1.11版本引入，到1.13版本之后已经成熟，Go Modules成为官方的依赖包管理解决方案。</p><p>优势：</p><ul><li>不受GOPATH限制，代码可放在任意目录</li><li>自动管理和下载依赖，且可以控制使用版本</li><li>不允许使用相对导入</li></ul><p><strong>GO111MODULE配置</strong></p><p>GO111MODULE控制Go Modele模式是否开启，有off、on、auto（默认）三个值，auto是默认值。</p><ul><li><span style="background-color:gray">GO111MODULE&#x3D;on</span>，支持模块，Go会忽略GOPATH和vendor目录，只根据go.mod下载依赖，在 <strong>$GOPATH&#x2F;pkg&#x2F;mod</strong> 目录搜索依赖包。<ul><li>在Go 1.13后就默认开启了</li><li>目前开发已经使用了1.17+版本，可以不配置，默认直接开启</li></ul></li><li><span style="background-color:gray">GO111MODULE&#x3D;off</span>，不支持模块，Go会从GOPATH和vendor目录寻找包</li><li><span style="background-color:gray">GO111MODULE&#x3D;auto</span>，在 <span style="background-color:gray">$GOPATH&#x2F;src</span> 外面构建项目且根目录有go.mod文件时，开启模块支持。否则使用GOPATH和vendor机制</li></ul><p>GOPROXY环境变量可以指定包下载镜像（镜像地址有时会变化，请参照官方最新文档）</p><ul><li>GOPROXY&#x3D;<a href="https://goproxy.cn,direct/">https://goproxy.cn,direct</a></li><li>GOPROXY&#x3D;<a href="https://mirrors.aliyun.com/goproxy/,direct">https://mirrors.aliyun.com/goproxy/,direct</a></li><li>GOPROXY&#x3D;<a href="https://mirrors.huaweicloud.com/repository/goproxy/,direct">https://mirrors.huaweicloud.com/repository/goproxy/,direct</a></li><li>GOPROXY&#x3D;<a href="https://mirrors.cloud.tencent.com/go/,direct">https://mirrors.cloud.tencent.com/go/,direct</a></li></ul><h2 id="Module模式"><a href="#Module模式" class="headerlink" title="Module模式"></a>Module模式</h2><h3 id="go-mod命令"><a href="#go-mod命令" class="headerlink" title="go mod命令"></a>go mod命令</h3><p>在Go 1.11开始引入，可以在任何目录使用go.mod创建项目</p><ul><li>init 当前文件夹下初始化一个新的module, 创建go.mod文件</li><li>tidy 自动分析依赖，下载缺失的模块，移除未使用的模块，并更新go.mod文件</li></ul><p><span style="background-color:gray">go mod vendor</span> 把第三方依赖包复制到项目的vendor目录中，就可以离线使用该依赖包编译。</p><h3 id="构建Module模式项目"><a href="#构建Module模式项目" class="headerlink" title="构建Module模式项目"></a>构建Module模式项目</h3><p>构建项目根目录zhang-test，并初始化模块 <span style="background-color:gray">go mod init starszg.com&#x2F;zhang-test</span> ，会产生go.mod文件，内容如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">module starszg.com/zhang-test</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="number">1.20</span></span><br></pre></td></tr></table></figure><ul><li>module指的是模块名称</li><li>go指定当前模块使用的Go版本</li></ul><p>在根目录下面新建main.go，内容如下：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello 星辰&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>package 指定包名，同一个目录包名必须相同</li><li>import 导入包。这里是绝对导入，且fmt是标准库中的包<ul><li>标准库搜索 $GOROOT&#x2F;src</li></ul></li><li>main函数，必须在main包中，且只能有一个main函数。如果要编译成可执行文件，必须要有main函数</li></ul><h2 id="导入子包"><a href="#导入子包" class="headerlink" title="导入子包"></a>导入子包</h2><p>构建本地子包calc，在其目录下面创建calc.go文件</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> calc</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Add首字母大写导出</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Add</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;x and y in calc.Add：%d, %d\n&quot;</span>, x, y)</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如何在main.go中使用子包的函数Add呢？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;./calc&quot;</span> <span class="comment">// 相对导入的话，不推荐使用，这样会发生错误</span></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;starszg.com/zhang-test/calc&quot;</span> <span class="comment">// 正确，Local Package本地包需要使用Module名/子包路径</span></span><br></pre></td></tr></table></figure><p>如果在calc下载创建minus&#x2F;minus.go</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> minus</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Minus</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;x and y in calc/minus.Minus: %d, %d\n&quot;</span>, x, y)</span><br><span class="line">    <span class="keyword">return</span> x - y</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么在main.go中就要如下导入</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;starszg.com/zhang-test/calc&quot;</span></span><br><span class="line">    <span class="string">&quot;starszg.com/zhang-test/calc/minus&quot;</span></span><br><span class="line">    <span class="comment">// m &quot;starszg.com/zhang-test/calc/minus&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(calc.Add(<span class="number">1</span>, <span class="number">99</span>))</span><br><span class="line">    fmt.Println(minus.Minus(<span class="number">99</span>, <span class="number">88</span>))</span><br><span class="line">    <span class="comment">// fmt.Println(m.Minus(99, 88))</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello 星辰&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>项目目录结构</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">📦zhang-test</span><br><span class="line">┣ 📂calc</span><br><span class="line">┃ ┣ 📂minus</span><br><span class="line">┃ ┃ ┗ 📜minus.go</span><br><span class="line">┃ ┗ 📜calc.go</span><br><span class="line">┣ 📜go.mod</span><br><span class="line">┗ 📜main.go</span><br></pre></td></tr></table></figure><h2 id="import关键字"><a href="#import关键字" class="headerlink" title="import关键字"></a>import关键字</h2><ol><li>绝对导入</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;starszg.com/zhang-test/calc&quot;</span></span><br><span class="line">    <span class="string">&quot;starszg.com/zhang-test/calc/minus&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用举例</span></span><br><span class="line">calc.Add(<span class="number">1</span>, <span class="number">99</span>)</span><br><span class="line">minus.Minus(<span class="number">99</span>, <span class="number">88</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>别名导入</li></ol><p>如果有两个导入的包冲突了，我们这时就可以重命名来避免冲突</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> m <span class="string">&quot;starszg.com/zhang-test/calc/minus&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用举例</span></span><br><span class="line">m.Minus(<span class="number">99</span>, <span class="number">88</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>相对导入</li></ol><p>不建议使用</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> <span class="string">&quot;./calc&quot;</span></span><br></pre></td></tr></table></figure><ol start="4"><li>点导入</li></ol><p>不推荐使用。</p><p>把包内所有导出成员直接导入到本地。很少使用，很有可能导入的标识符导致冲突。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> . <span class="string">&quot;starszg.com/zhang-test/calc/minus&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 使用举例</span></span><br><span class="line">Minus()</span><br></pre></td></tr></table></figure><p>go-staticcheck对于点导入会有警告， <span style="background-color:gray">should not use dot imports (ST1001)go-staticcheck</span> 。参看 should not use dot imports (ST1001)go-staticcheck。</p><ol start="5"><li>匿名导入</li></ol><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> _ <span class="string">&quot;starszg.com/zhang-test/calc/minus&quot;</span></span><br></pre></td></tr></table></figure><p>使用下划线作为别名，就意味着无法使用了，那其目的何在？</p><p>这种情况下，只能执行导入的包内的所有init函数了。主要作用是做包的初始化用。</p><h2 id="init函数"><a href="#init函数" class="headerlink" title="init函数"></a>init函数</h2><ul><li>init函数，无参无返回值，不能被其他函数调用</li><li>包中的init函数将在main函数之前自动执行</li><li>每个包中init函数可以有多个，且可以位于不同的文件中</li><li>一个文件中至多有一个init函数</li><li>同一个包中的init函数没有明确的执行顺序，不可预期</li><li>不同包的init函数的执行顺序由导入顺序决定</li></ul><p>init函数主要是做一些初始化工作。但是由于同一个包里面init函数执行顺序不可预期，所以，除非有必要，不要在同一个包里面定义多个init。init和main函数不一定在同一个文件中。</p><p><span style="background-color:gray">import _ “xxx”</span> 作用是什么？只执行该包的init函数，无法使用包内资源。</p><p><span style="background-color:gray">import “xxx”</span> 作用是什么？也会执行该包的init函数，但也可以使用包内资源。</p><h2 id="导入第三方包"><a href="#导入第三方包" class="headerlink" title="导入第三方包"></a>导入第三方包</h2><p>在 <a href="https://pkg.go.dev/">https://pkg.go.dev/</a> 查找包Beego</p><p>下载包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ go get -u github.com/astaxie/beego</span><br><span class="line">$ go mod tidy</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/astaxie/beego&quot;</span></span><br><span class="line">    <span class="string">&quot;starszg.com/zhang-test/calc&quot;</span></span><br><span class="line">    <span class="string">&quot;starszg.com/zhang-test/calc/minus&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(calc.Add(<span class="number">1</span>, <span class="number">99</span>))</span><br><span class="line">    fmt.Println(minus.Minus(<span class="number">99</span>, <span class="number">88</span>))</span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello 星辰&quot;</span>)</span><br><span class="line"></span><br><span class="line">    beego.Run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第三方依赖包搜索 <span style="background-color:gray">$GOPATH&#x2F;pkg&#x2F;mod</span></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">require github.com/astaxie/beego v1<span class="number">.12</span><span class="number">.3</span></span><br><span class="line"></span><br><span class="line">省略很多的间接依赖</span><br></pre></td></tr></table></figure><p>拉取模块依赖后，会发现多出了一个 go.sum 文件，其详细罗列了当前项目直接或间接依赖的所有模块版本，并写明了那些模块版本的 SHA-256 哈希值以备 Go 在今后的操作中保证项目所依赖的那些模块版本不会被篡改。</p><p>指令说明</p><ul><li>参考 <a href="https://golang.google.cn/ref/mod#go-mod-file-require">https://golang.google.cn/ref/mod#go-mod-file-require</a></li><li>require：用于设置一个特定的模块版本<ul><li>&#x2F;&#x2F; indirect：该注释表示该模块为间接依赖，也就是在当前应用程序中的 import 语句中，并没有发现这个模块的明确引用，有可能是你先手动 go get 拉取下来的，也有可能是你所依赖的模块所依赖的</li></ul></li><li>exclude：用于从使用中排除一个特定的模块版本</li><li>replace：用于将一个模块版本替换为另外一个模块版本</li></ul><h2 id="导入本地其他项目"><a href="#导入本地其他项目" class="headerlink" title="导入本地其他项目"></a>导入本地其他项目</h2><p>把calc包挪到本地其它目录中，如何导入呢？例如把calc包挪到E:&#x2F;calc，同时在calc目录使用 go mod init ccc ，打开增加的go.mod，内容如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">module ccc</span><br><span class="line"><span class="keyword">go</span> <span class="number">1.20</span></span><br></pre></td></tr></table></figure><p>在main.go中导入和使用，如下</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    c <span class="string">&quot;zhang-test1/aaa&quot;</span> <span class="comment">// 这里随便写一个包路径</span></span><br><span class="line">  <span class="comment">// 由于包路径的最后一段是aaa，而calc/calc.go里面的package calc,路径和包名不一样，所以要用别名</span></span><br><span class="line">    <span class="string">&quot;zhang-test1/aaa/minus&quot;</span> <span class="comment">// 上面的子包</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(c.Add(<span class="number">1</span>, <span class="number">99</span>))</span><br><span class="line">    fmt.Println(minus.Minus(<span class="number">99</span>, <span class="number">88</span>))</span><br><span class="line">    fmt.Println(<span class="string">&quot;Hello 星辰&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>但是我们还需要在go.mod文件修改如下内容</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module starszg.com/zhang-test</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="number">1.20</span></span><br><span class="line"></span><br><span class="line">require (</span><br><span class="line">    zhang-test1/aaa v0<span class="number">.0</span><span class="number">.0</span> <span class="comment">// 指定伪版本号，满足格式要求</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">replace  zhang-test1/aaa =&gt; <span class="string">&quot;e:/calc&quot;</span> <span class="comment">// replace指令指定包搜索路径，而不是去GOPATH/pkg/mod</span></span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 如果报错 <span style="background-color:gray">reading o:\calc\go.mod: open o:\calc\go.mod: The system cannot find the file specified.</span> ，说明calc中没有go.mod文件，只需要打开calc目录，使用 <span style="background-color:gray">go mod init xxx</span> 即可。</p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang对时间的操作</title>
      <link href="/post/de86600d.html"/>
      <url>/post/de86600d.html</url>
      
        <content type="html"><![CDATA[<h1 id="时间"><a href="#时间" class="headerlink" title="时间"></a>时间</h1><p>时间是非常重要的，离开了时间，几乎没有那个生产环境数据能够有意义。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    t := time.Now()</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, t)       <span class="comment">// time.Time 2023-03-11 10:07:44.5286011 +0800 CST m=+0.001098001</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %#[1]v\n&quot;</span>, t)       <span class="comment">// time.Time time.Date(2023, time.March, 11, 10, 07, 44, 528601100, time.Local)</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, t.UTC()) <span class="comment">// GMT时间 time.Time 2023-03-11 10:07:44.5286011 +0000 UTC</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>m&#x3D;+0.001098001这个是单调时间，是利用的是晶体振荡器的间隔时间，很多时间函数计算都舍弃了它，如果不是非常精准的时间间隔计算，我们可以忽略它。</p><h2 id="时间格式化"><a href="#时间格式化" class="headerlink" title="时间格式化"></a>时间格式化</h2><p>在Go语言中没有采用%Y%m%d这样的格式化符号，它很特别。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> t = time.Now()</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T, %[1]v\n&quot;</span>,t)</span><br><span class="line">fmt.Println(t.Format(<span class="string">&quot;0102 030405 06 pm -0700&quot;</span>))</span><br><span class="line">fmt.Println(t.Format(<span class="string">&quot;0102 030405 06 pm&quot;</span>))</span><br></pre></td></tr></table></figure><p>记住一个字符串”010203040506pm-0700”，即 1月2日下午3点4分5秒06年西7区 ，改成我们习惯的格式符 2006&#x2F;01&#x2F;02 15:04:05 -0700 ，也不是特别好记，那就背下来吧。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">https://pkg.go.dev/time#pkg-constants</span><br><span class="line">Year: &quot;2006&quot; &quot;06&quot;</span><br><span class="line">Month: &quot;Jan&quot; &quot;January&quot; &quot;01&quot; &quot;1&quot;</span><br><span class="line">Day of the week: &quot;Mon&quot; &quot;Monday&quot;</span><br><span class="line">Day of the month: &quot;2&quot; &quot;_2&quot; &quot;02&quot; 2不补位；_2补空格；02不够补0</span><br><span class="line">Day of the year: &quot;__2&quot; &quot;002&quot;</span><br><span class="line">Hour: &quot;15&quot; &quot;3&quot; &quot;03&quot; (PM or AM) 如果写3或03显示为12小时制；15显示为24小时制</span><br><span class="line">Minute: &quot;4&quot; &quot;04&quot;</span><br><span class="line">Second: &quot;5&quot; &quot;05&quot;</span><br><span class="line">AM/PM mark: &quot;PM&quot;</span><br><span class="line"></span><br><span class="line">&quot;-0700&quot; ±hhmm 时区</span><br><span class="line"></span><br><span class="line">0或9匹配小数部分</span><br><span class="line">    格式化时，0或9表示小数部分位数，0超出部分补0,9超出部分不补0</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> t = time.Now()</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T, %[1]v\n&quot;</span>,t)</span><br><span class="line">fmt.Println(t.Format(<span class="string">&quot;2006/01/02 15:04:05 -0700&quot;</span>)) <span class="comment">// 带时区</span></span><br><span class="line">fmt.Println(t.Format(<span class="string">&quot;2006/01/02 15:04:05.0000&quot;</span>)) <span class="comment">// 不带时区</span></span><br></pre></td></tr></table></figure><h2 id="时间解析"><a href="#时间解析" class="headerlink" title="时间解析"></a>时间解析</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">timeStr := <span class="string">&quot;2023-03-11 10:07:40&quot;</span></span><br><span class="line">t, err := time.Parse(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>, timeStr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(t)</span><br></pre></td></tr></table></figure><p>带小数部分解析</p><ul><li>.0 解析时，0的位数必须和字符串中的小数部分位数完全一致，否则失败</li><li>.9 解析时，可以匹配任意位数小数部分，包括没有小数部分</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .0解析</span></span><br><span class="line">timeStr := <span class="string">&quot;2023-03-11 10:07:40.5286011 +0800&quot;</span></span><br><span class="line">t, err := time.Parse(<span class="string">&quot;2006-01-02 15:04:05.0000000 -0700&quot;</span>, timeStr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(t)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// .9解析</span></span><br><span class="line">timeStr := <span class="string">&quot;2023-03-11 10:07:40.5286011 +0800&quot;</span></span><br><span class="line">t, err := time.Parse(<span class="string">&quot;2006-01-02 15:04:05.9 -0700&quot;</span>, timeStr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(t)</span><br></pre></td></tr></table></figure><h2 id="时间属性"><a href="#时间属性" class="headerlink" title="时间属性"></a>时间属性</h2><ul><li>月份定义</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// A Month specifies a month of the year (January = 1, ...).</span></span><br><span class="line"><span class="keyword">type</span> Month <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    January Month = <span class="number">1</span> + <span class="literal">iota</span></span><br><span class="line">    February</span><br><span class="line">    March</span><br><span class="line">    April</span><br><span class="line">    May</span><br><span class="line">    June</span><br><span class="line">    July</span><br><span class="line">    August</span><br><span class="line">    September</span><br><span class="line">    October</span><br><span class="line">    November</span><br><span class="line">    December</span><br><span class="line">)</span><br><span class="line"><span class="comment">// 从上面可以看出月份是1到12的整数</span></span><br></pre></td></tr></table></figure><ul><li>定义星期</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// A Weekday specifies a day of the week (Sunday = 0, ...).</span></span><br><span class="line"><span class="keyword">type</span> Weekday <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">    Sunday Weekday = <span class="literal">iota</span></span><br><span class="line">    Monday</span><br><span class="line">    Tuesday</span><br><span class="line">    Wednesday</span><br><span class="line">    Thursday</span><br><span class="line">    Friday</span><br><span class="line">    Saturday</span><br><span class="line">)</span><br><span class="line"><span class="comment">// 周天用0表示</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    timeStr := <span class="string">&quot;2023-03-10 16:07:53 +0800&quot;</span> <span class="comment">// 时间字符串</span></span><br><span class="line">    t, err := time.Parse(<span class="string">&quot;2006-01-02 15:04:05 -0700&quot;</span>, timeStr)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(t) <span class="comment">// 2023-03-10 16:07:53 +0800 CST</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 时间戳</span></span><br><span class="line">    fmt.Println(t.Unix(), t.UnixMilli(), t.UnixMicro(), t.UnixNano()) <span class="comment">// t的时间经过unix的秒数、毫秒、微秒及纳秒</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 年月日</span></span><br><span class="line">    fmt.Println(</span><br><span class="line">        t.Year(),</span><br><span class="line">        t.Month(),</span><br><span class="line">        t.Month().String(), <span class="comment">// 英文月份 和上面行代码结果是一样的，默认就是用的String方法</span></span><br><span class="line">        <span class="type">int</span>(t.Month()),     <span class="comment">// 数字月份</span></span><br><span class="line">        t.Day(),            <span class="comment">// 日</span></span><br><span class="line">        t.YearDay(),        <span class="comment">// 输出时间字符串是今年的第几天</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 时分秒</span></span><br><span class="line">    fmt.Println(</span><br><span class="line">        t.Hour(),       <span class="comment">// 小时</span></span><br><span class="line">        t.Minute(),     <span class="comment">// 分钟</span></span><br><span class="line">        t.Second(),     <span class="comment">// 秒</span></span><br><span class="line">        t.Nanosecond(), <span class="comment">// 纳秒</span></span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 星期</span></span><br><span class="line">    fmt.Println(</span><br><span class="line">        t.Weekday(),      <span class="comment">// 英文星期</span></span><br><span class="line">        <span class="type">int</span>(t.Weekday()), <span class="comment">// 数字星期</span></span><br><span class="line">    )</span><br><span class="line">    fmt.Println(t.ISOWeek()) <span class="comment">// 今年的第几周</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="时区"><a href="#时区" class="headerlink" title="时区"></a>时区</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">timeStr := <span class="string">&quot;2023-02-10 10:07:40&quot;</span></span><br><span class="line">t, err := time.Parse(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>, timeStr)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(t)         <span class="comment">// 2023-02-10 10:07:40 +0000 UTC</span></span><br><span class="line">fmt.Println(t.Local()) <span class="comment">// 2023-02-10 18:07:40 +0800 CST</span></span><br></pre></td></tr></table></figure><p>如果没有时区就默认表示UTC，也可以简单认为是零时区的时间。</p><p>要注意，这里很容易导致时间错误，给出的时间想着是东八区的时间，但是Go语言认为是零时区的时间，如果这时在转换到东八区，这时就差了8个小时了。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tz, _ := time.LoadLocation(<span class="string">&quot;Asia/Shanghai&quot;</span>)</span><br><span class="line">timeStr := <span class="string">&quot;2023-02-10 10:07:40&quot;</span></span><br><span class="line">t, err := time.ParseInLocation(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>, timeStr, tz)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">    <span class="built_in">panic</span>(err)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(t)         <span class="comment">// 2023-02-10 10:07:40 +0800 CST</span></span><br><span class="line">fmt.Println(t.Local()) <span class="comment">// 2023-02-10 10:07:40 +0800 CS</span></span><br></pre></td></tr></table></figure><h2 id="时间运算"><a href="#时间运算" class="headerlink" title="时间运算"></a>时间运算</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">时间 + 时间 = ？</span><br><span class="line">时间 - 时间 = 时间差、时间增量</span><br><span class="line">时间 ± 时间增量 = 时间</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    tz, _ := time.LoadLocation(<span class="string">&quot;Asia/Shanghai&quot;</span>)</span><br><span class="line">    timeStr := <span class="string">&quot;2023-02-10 10:07:40&quot;</span></span><br><span class="line">    t1, err := time.ParseInLocation(<span class="string">&quot;2006-01-02 15:04:05&quot;</span>, timeStr, tz)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(t1)         <span class="comment">// 2023-02-10 10:07:40 +0800 CST</span></span><br><span class="line">    fmt.Println(t1.Local()) <span class="comment">// 2023-02-10 18:07:40 +0800 CST</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    t2 := time.Now()</span><br><span class="line">    d := t2.Sub(t1) <span class="comment">// t2与t1的时间差</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]v\n&quot;</span>, d)</span><br><span class="line">    fmt.Println(d.Hours(), d.Seconds()) <span class="comment">// 共差多少小时 共差多少秒</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    t3 := t1.Add(<span class="number">2</span> * time.Hour * <span class="number">24</span>) <span class="comment">// 在时间t1的基础上增加时间</span></span><br><span class="line">    fmt.Println(t3)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Println(t3.After(t1)) <span class="comment">// t3是否在t1之后吗? true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang的序列化与反序列化</title>
      <link href="/post/24787617.html"/>
      <url>/post/24787617.html</url>
      
        <content type="html"><![CDATA[<h1 id="序列化与反序列化"><a href="#序列化与反序列化" class="headerlink" title="序列化与反序列化"></a>序列化与反序列化</h1><p>内存中的map、slice、array等等各种对象，如何保存到一个文件中？如果是自己定义的结构体的实例，又如何保存到一个文件中？</p><p>我们又如何从文件中读取数据，并让它们在内存中再次恢复成自己对应的类型的实例？</p><p>这里就要设计一套<strong>协议</strong>，按照某种规则，把内存中数据保存到文件中。文件是一个字节序列，所以必须把数据转换成字节序列，输出到文件。这就是<strong>序列化</strong>。反之，从文件的字节序列恢复到内存并且还是<strong>原来的</strong>类型，就是<strong>反序列化</strong>。</p><p><strong>序列化</strong>：不管你是什么类型的实例，我都要把你变成字节序列</p><p><strong>反序列化</strong>：把 字节序列 能够还原成 原来的类型 的实例</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><ul><li>serialization 序列化：将内存中对象存储下来，把它变成一个个字节。转为二进制数据</li><li>deserialization 反序列化：将文件的一个个字节恢复成内存中的对象。从二进制数据中恢复</li></ul><p>序列化保存到文件就是持久化。</p><p>可以将数据序列化后持久化，或者网络传输；也可以将从文件中或者网络接收到的字节序列反序列化。</p><p>我们可以把数据和二进制序列之间的相互转换称为二进制序列化、反序列化，把数据和字符序列之间的相互转换称为字符序列化、反序列化。</p><p>字符序列化：JSON、XML等等</p><p>二进制序列化：Protocol Buffers、MessagePack等等</p><h2 id="JSON"><a href="#JSON" class="headerlink" title="JSON"></a>JSON</h2><p>JSON（JavaScript Object Notation，JS对象标记）是一种轻量级的数据交换格式。它基于1999年发布的ES3（ECMAScript是w3c组织制定的JavaScript规范）的一个子集，采用完全独立于变成语言的<strong>文本</strong>格式来存储和表示数据。应该说，目前JSON是得到了几乎所有浏览器的支持。</p><p>官方文档：<a href="https://www.json.org/">https://www.json.org/</a></p><h3 id="JSON的数据类型"><a href="#JSON的数据类型" class="headerlink" title="JSON的数据类型"></a>JSON的数据类型</h3><h4 id="值"><a href="#值" class="headerlink" title="值"></a>值</h4><p><strong>双引号</strong>引起来的字符串、数值、true和false、null、对象、数组，这些结构可以嵌套。</p><p><img src="/images/json-value.png"></p><h4 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h4><p>由<strong>双引号</strong>包围起来的任意字符的组合，里面可以有转义字符。</p><h4 id="数值"><a href="#数值" class="headerlink" title="数值"></a>数值</h4><p>有正负、有整数、浮点数</p><h4 id="对象"><a href="#对象" class="headerlink" title="对象"></a>对象</h4><p><img src="/images/json-obj.png"></p><h4 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h4><p>有序的值的集合 格式：[v1,v2,…,vn]</p><p><img src="/images/json-arr.png" alt="Alt text"></p><p>示例：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;person&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;tom&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">18</span></span><br><span class="line">    <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;jerry&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;age&quot;</span><span class="punctuation">:</span> <span class="number">16</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;total&quot;</span><span class="punctuation">:</span> <span class="number">2</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><b style="color:red;">特别注意：JSON是字符串，是文本</b>。JavaScript引擎可以将这种字符串解析成某种类型的数据。</p><h3 id="json包"><a href="#json包" class="headerlink" title="json包"></a>json包</h3><p>Go语言标准库中提供了 encoding&#x2F;json 包，内部使用了反射技术，效率较为低下。</p><p>参看官方文档：<a href="https://go.dev/blog/json">https://go.dev/blog/json</a></p><ul><li><span style="background-color:gray">json.Marshal(v any) ([]byte, error)</span>，将v序列化成字节序列，这个过程为Encode。</li><li><span style="background-color:gray">json.Unmarshal(data []byte, v any) error</span>，将字符序列data反序列化为v，这个过程为Decode。</li></ul><h4 id="基本类型序列化"><a href="#基本类型序列化" class="headerlink" title="基本类型序列化"></a>基本类型序列化</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    <span class="keyword">var</span> data = []any&#123;</span><br><span class="line">        <span class="number">123</span>, <span class="string">&quot;abc&quot;</span>, <span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">nil</span>, <span class="number">8.28</span>, <span class="comment">// Go语言的基本类型</span></span><br><span class="line">        [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">11</span>, <span class="number">111</span>&#125;,                 <span class="comment">// Go array ==&gt; JS array</span></span><br><span class="line">        []<span class="type">int</span>&#123;<span class="number">2</span>, <span class="number">22</span>, <span class="number">222</span>&#125;,                  <span class="comment">// Go slice ==&gt; JS array</span></span><br><span class="line">        <span class="keyword">map</span>[<span class="type">int</span>]<span class="type">string</span>&#123;<span class="number">1</span>: <span class="string">&quot;aaa&quot;</span>, <span class="number">2</span>: <span class="string">&quot;ccc&quot;</span>&#125;, <span class="comment">// Go map ==&gt; JS object strconv.Itoa(1)</span></span><br><span class="line">    &#125;</span><br><span class="line">    target := <span class="built_in">make</span>([][]<span class="type">byte</span>, <span class="number">0</span>, <span class="built_in">len</span>(data))</span><br><span class="line">    <span class="keyword">for</span> i, datum := <span class="keyword">range</span> data &#123; <span class="comment">// 一个个单独序列化，看变化</span></span><br><span class="line">        m, err := json.Marshal(datum) <span class="comment">// Marshal(v any) ([]byte, error) 是有两个返回值的</span></span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;Error:&quot;</span>, err)</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%d: %T %[2]v ==&gt; %T %[3]v, %s\n&quot;</span>, i, datum, m, <span class="type">string</span>(m))</span><br><span class="line">        target = <span class="built_in">append</span>(target, m)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// fmt.Println(target)</span></span><br><span class="line">    <span class="comment">// fmt.Println(json.Marshal(data)) // 这里也是可以对target、data进行序列化的</span></span><br><span class="line">    <span class="comment">// m, _ := json.Marshal(data) // 这里我将err的值就没有取，通过 _ 来接替它</span></span><br><span class="line">    <span class="comment">// fmt.Println(string(m)) // [123,&quot;abc&quot;,true,false,null,8.28,[1,11,111],[2,22,222],&#123;&quot;1&quot;:&quot;aaa&quot;,&quot;2&quot;:&quot;ccc&quot;&#125;]</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="keyword">for</span> i, bytes := <span class="keyword">range</span> target &#123; <span class="comment">// 一个一个字节序列单独反序列化，看结果</span></span><br><span class="line">        <span class="keyword">var</span> t any <span class="comment">// type any = interface&#123;&#125; 空接口类型</span></span><br><span class="line">        err := json.Unmarshal(bytes, &amp;t)</span><br><span class="line">        <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">            fmt.Println(<span class="string">&quot;Error: &quot;</span>, err) <span class="comment">// error 接口默认不是调用Stringer的String方法，而是优先使用Error</span></span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%d: %T %[2]v ==&gt; %T %[3]v\n&quot;</span>, i, bytes, t)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述代码运行结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">序列化结果：</span><br><span class="line">0: int 123 ==&gt; []uint8 [49 50 51], 123         </span><br><span class="line">1: string abc ==&gt; []uint8 [34 97 98 99 34], <span class="string">&quot;abc&quot;</span></span><br><span class="line">2: bool <span class="literal">true</span> ==&gt; []uint8 [116 114 117 101], <span class="literal">true</span></span><br><span class="line">3: bool <span class="literal">false</span> ==&gt; []uint8 [102 97 108 115 101], <span class="literal">false</span></span><br><span class="line">4: &lt;nil&gt; &lt;nil&gt; ==&gt; []uint8 [110 117 108 108], null</span><br><span class="line">5: float64 8.28 ==&gt; []uint8 [56 46 50 56], 8.28 </span><br><span class="line">6: [3]int [1 11 111] ==&gt; []uint8 [91 49 44 49 49 44 49 49 49 93], [1,11,111]</span><br><span class="line">7: []int [2 22 222] ==&gt; []uint8 [91 50 44 50 50 44 50 50 50 93], [2,22,222]</span><br><span class="line">8: map[int]string map[1:aaa 2:ccc] ==&gt; []uint8 [123 34 49 34 58 34 97 97 97 34 44 34 50 34 58 34 99 99 99 34 125], &#123;<span class="string">&quot;1&quot;</span>:<span class="string">&quot;aaa&quot;</span>,<span class="string">&quot;2&quot;</span>:<span class="string">&quot;ccc&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line"></span><br><span class="line">反序列化结果：</span><br><span class="line">0: []uint8 [49 50 51] ==&gt; float64 123</span><br><span class="line">1: []uint8 [34 97 98 99 34] ==&gt; string abc</span><br><span class="line">2: []uint8 [116 114 117 101] ==&gt; bool <span class="literal">true</span></span><br><span class="line">3: []uint8 [102 97 108 115 101] ==&gt; bool <span class="literal">false</span></span><br><span class="line">4: []uint8 [110 117 108 108] ==&gt; &lt;nil&gt; &lt;nil&gt;</span><br><span class="line">5: []uint8 [56 46 50 56] ==&gt; float64 8.28</span><br><span class="line">6: []uint8 [91 49 44 49 49 44 49 49 49 93] ==&gt; []interface &#123;&#125; [1 11 111]</span><br><span class="line">7: []uint8 [91 50 44 50 50 44 50 50 50 93] ==&gt; []interface &#123;&#125; [2 22 222]</span><br><span class="line">8: []uint8 [123 34 49 34 58 34 97 97 97 34 44 34 50 34 58 34 99 99 99 34 125] ==&gt; map[string]interface &#123;&#125; map[1:aaa 2:ccc]</span><br></pre></td></tr></table></figure><p>从上述运行结果发现序列化后将各种类型序列化成了字节序列，也可以说转换成了字符串。剩下的就交给JS引擎吧。<strong>序列化转换的结果都是字符串</strong>。</p><p>反序列化就是将前面序列化的字符串（字节序列）反序列化为Go的某类型数据。因为从浏览器发来的数据都是字符串。</p><p>这里要注意的是在JSON字符串中，会将数值转换成Go的float64的类型，true、false会转成bool型，null的话会转成nil，字符串会转成string，数组会被转成[]interface{}。</p><h4 id="结构体序列化"><a href="#结构体序列化" class="headerlink" title="结构体序列化"></a>结构体序列化</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    data := Person&#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">23</span>&#125;</span><br><span class="line">    b, err := json.Marshal(data)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, data)                 <span class="comment">// 这是Person实例</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]v %s\n&quot;</span>, b, <span class="type">string</span>(b)) <span class="comment">// 这里已经转换成字节序列了，可以理解为是字符串了</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    b1 := []<span class="type">byte</span>(<span class="string">`&#123;&quot;Name&quot;:&quot;Tom&quot;,&quot;Age&quot;:23&#125;`</span>) <span class="comment">// 字符串，增加了些空格，js中的对象也就是键值对</span></span><br><span class="line">    <span class="keyword">var</span> p Person                            <span class="comment">// 指定目标类型</span></span><br><span class="line">    err = json.Unmarshal(b1, &amp;p)            <span class="comment">// 通过指针来填充结构体</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不知道要转换的类型</span></span><br><span class="line">    <span class="keyword">var</span> t <span class="keyword">interface</span>&#123;&#125; <span class="comment">// 空接口类型 这里将interface&#123;&#125;换成any也是可以的，any是interface&#123;&#125;的一个别名</span></span><br><span class="line">    err = json.Unmarshal(b, &amp;t)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, t) <span class="comment">// 这里的t是any类型的，这时就会被理解成键值对 map[string]interface &#123;&#125; map[Age:23 Name:Tom]</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="自定义类型的切片序列化"><a href="#自定义类型的切片序列化" class="headerlink" title="自定义类型的切片序列化"></a>自定义类型的切片序列化</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;encoding/json&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    data := []Person&#123;</span><br><span class="line">        &#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">23</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;Jerry&quot;</span>, <span class="number">30</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    b, err := json.Marshal(data)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, data)                 <span class="comment">// 这是Person实例</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]v %s\n&quot;</span>, b, <span class="type">string</span>(b)) <span class="comment">// 这里已经转换成字节序列了，可以理解为是字符串了</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="keyword">var</span> p []Person              <span class="comment">// 指定目标类型</span></span><br><span class="line">    err = json.Unmarshal(b, &amp;p) <span class="comment">// 通过指针来填充结构体</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;1 %T %+[1]v\n&quot;</span>, p)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 不知道要转换的类型</span></span><br><span class="line">    <span class="keyword">var</span> t <span class="keyword">interface</span>&#123;&#125; <span class="comment">// 空接口类型 这里将interface&#123;&#125;换成any也是可以的，any是interface&#123;&#125;的一个别名</span></span><br><span class="line">    err = json.Unmarshal(b, &amp;t)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;2 %T %+[1]v\n&quot;</span>, t)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="字段标签设置"><a href="#字段标签设置" class="headerlink" title="字段标签设置"></a>字段标签设置</h4><p>结构体的字段可以增加标签tag，是在序列化、反序列化中使用。</p><ul><li>在字段类型后面，可以跟反引号引起来的一个标签，用json为key，value用双引号引起来写，key与value之间使用冒号，这个标签中不要加入多余的空格，否则会出现语法错误<ul><li><span style="background-color:gray">Name string `json:”name”`</span>，这个示例序列化后得到的属性名为name<ul><li>json表示json库使用</li><li>双引号内第一个参数用来指定字段转换使用的名称，多个参数使用逗号隔开</li></ul></li><li><span style="background-color:gray">Name string `json:”name,omitempty”`</span>，omitempty是指的为序列化时忽略空值，也就是该字段不序列化<ul><li>空值为false、0、空数组、空切片、空map、空字符串、nil空指针、nil接口值</li><li>空数组、空切片、空字符串、空map，长度len为0，也就是这些容器里面没有元素</li></ul></li></ul></li><li>如果使用了 - ，该字段就会被忽略<ul><li><span style="background-color:gray">Name string `json:”-“`</span>，序列化后就会没有这个字段，反序列化时也不会转换该字段</li><li><span style="background-color:gray">Name string `json:”-,”`</span>，序列化后该字段显示的名字为”-“，反序列化的话这时也会转换该字段</li></ul></li><li>多标签使用空格间隔开<ul><li><span style="background-color:gray">Name string `json:”name,omitempty” msgpack:”myname”`</span></li></ul></li></ul><p>JSON序列化的Go实现效率较低，因此社区和某些公司就提供了大量开源的实现，例如easyjson、jsoniter、sonic等等。可以到GitHub上查看相关项目，基本上使用的方法都是兼容官方实现的。</p><h3 id="json-iterator"><a href="#json-iterator" class="headerlink" title="json-iterator"></a>json-iterator</h3><p>github地址：<a href="https://github.com/json-iterator/go">https://github.com/json-iterator/go</a></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下面包</span></span><br><span class="line">$ go get github.com/json-iterator/go</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    jsoniter <span class="string">&quot;github.com/json-iterator/go&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    <span class="keyword">var</span> p = Person&#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">23</span>&#125;</span><br><span class="line">    b, err := jsoniter.Marshal(p)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v %s\n&quot;</span>, b, <span class="type">string</span>(b))</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="keyword">var</span> p1 Person</span><br><span class="line">    err = jsoniter.Unmarshal(b, &amp;p1)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="MessagePack"><a href="#MessagePack" class="headerlink" title="MessagePack"></a>MessagePack</h3><p>MessagePack是一个基于二进制高效的对象序列化类库，支持跨语言通信，它可以像JSON那样，在许多语言之间蒋欢结构对象，它比JSON更快更轻便，支持多种语言。宣称比Google Protocol Buffers还要快4倍 。</p><p>官网：<a href="https://msgpack.org/">https://msgpack.org/</a></p><p>文档：<a href="https://msgpack.uptrace.dev/">https://msgpack.uptrace.dev/</a></p><p>安装:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ go get github.com/vmihailenco/msgpack/v5</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;github.com/vmihailenco/msgpack/v5&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span> <span class="string">`json:&quot;name&quot; msgpack:&quot;myname&quot;`</span>                   <span class="comment">// 双引号第一参数是字段名,多个参数用逗号隔开，多标签的话使用空格间隔</span></span><br><span class="line">    Age  <span class="type">int</span>    <span class="string">`json:&quot;age,omitempty&quot; msgpack:&quot;myage,omitempty&quot;`</span> <span class="comment">// omitempty忽略空值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 序列化</span></span><br><span class="line">    data := []Person&#123;</span><br><span class="line">        &#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">23</span>&#125;,</span><br><span class="line">        &#123;<span class="string">&quot;Jerry&quot;</span>, <span class="number">45</span>&#125;,</span><br><span class="line">    &#125;</span><br><span class="line">    b, err := msgpack.Marshal(data)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]v %d %s\n&quot;</span>, b, <span class="built_in">len</span>(b), <span class="type">string</span>(b)) <span class="comment">// 二进制</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 反序列化</span></span><br><span class="line">    <span class="keyword">var</span> p []Person                 <span class="comment">// 指定目标类型</span></span><br><span class="line">    err = msgpack.Unmarshal(b, &amp;p) <span class="comment">// 通过指针来填充结构体</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang的面向对象</title>
      <link href="/post/695700aa.html"/>
      <url>/post/695700aa.html</url>
      
        <content type="html"><![CDATA[<h1 id="Go中的面向对象"><a href="#Go中的面向对象" class="headerlink" title="Go中的面向对象"></a>Go中的面向对象</h1><p>面向对象的三要素：</p><ul><li>封装：就是属性（数据）和方法（操作）的封装，提供访问控制，隐藏实现的细节，只需要暴露该暴露的即可；</li><li>继承：就是子类可以从父类直接获取属性和方法，减少重复定义。子类中如果与父类不同的话，也是可以自定义属于自己的属性和方法，也是可以覆盖同名的属性和方法；</li><li>多态：是有前提的就是继承和覆盖，使得子类中虽然使用同一个方法，但是不同子类表现不同，就是不同的态；是借用接口语法来实现的；</li></ul><p>如果实现了上述特征的语言，才能可以成为面向对象编程范式语言。</p><p>严格意义意义来说，Go语言就是不想实现面向对象编程范式。但是面向对象又有一些不错的特性，Go语言就通过组合的方式实现了类似的功能。</p><p>那我们就只能说，Go语言实现了一种非常有自我特征的面向对象。</p><h2 id="封装"><a href="#封装" class="headerlink" title="封装"></a>封装</h2><p>通过结构体，我们可以将数据字段封装在内，还可以为结构体提供方法。</p><p>访问控制：</p><ul><li>属性、方法标识符首字母大写，实现了对包外可见的访问控制</li><li>属性、方法标识符首字母小写，仅包内可见</li><li>这些一定的程度上实现了pubic（公共）、private（私有）的访问控制</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123; <span class="comment">// 这里的Person就可以在包外可见</span></span><br><span class="line">    Name <span class="type">string</span> <span class="comment">// Person中的Name属性也是可以在包外可以看见的</span></span><br><span class="line">    age  <span class="type">uint</span> <span class="comment">// age属性就只能在包内可见</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>在Go语言中没有提供类似C++、Java一样的构造函数、析构函数。在Go语言中用构造结构体实例的函数，这个函数没有特别的要求，只要返回结构体实例或其指针即可（建议返回指针，不然返回值是会拷贝）。习惯上构造函数命名是New或new开头。如果有多个构造函数，可以使用不同的命名函数，因为Go语言也没有函数重载。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    age <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewDefaultPerson</span><span class="params">()</span></span> *Person &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;Person&#123;<span class="string">&quot;nobody&quot;</span>, <span class="number">1</span>&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewPerson</span><span class="params">(name <span class="type">string</span>, age <span class="type">uint</span>)</span></span> *Person &#123;</span><br><span class="line">    <span class="keyword">return</span> &amp;Person&#123;name, age&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过不同的函数名来模拟构造函数重载。</p><h2 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h2><p>在Go语言没有提供继承的语法，实际上需要通过匿名结构体嵌入（组合）来实现类似效果。  </p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Animal <span class="keyword">struct</span> &#123;</span><br><span class="line">    name <span class="type">string</span></span><br><span class="line">    age  <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*Animal)</span></span> run() &#123; <span class="comment">// receiver,给结构体附加方法</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;Animal run~~~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">    Animal <span class="comment">// 匿名结构体嵌入</span></span><br><span class="line">    color  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    c := <span class="built_in">new</span>(Cat)</span><br><span class="line">    c.run()</span><br><span class="line">    c.Animal.run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从上面的代码可以看出使用了匿名结构体嵌入，这样的话子结构体就会拥有了父结构体的属性name、age，和run方法。</p><h2 id="覆盖"><a href="#覆盖" class="headerlink" title="覆盖"></a>覆盖</h2><p>override（覆盖），也称为重写。要注意这里不是重载（overload）</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Animal <span class="keyword">struct</span> &#123;</span><br><span class="line">    name <span class="type">string</span></span><br><span class="line">    age  <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*Animal)</span></span> run() &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Animal run~~~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">    Animal <span class="comment">// 匿名结构体嵌入</span></span><br><span class="line">    color  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*Cat)</span></span> run() &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Cat run~~~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    c := <span class="built_in">new</span>(Cat)</span><br><span class="line">    c.run()</span><br><span class="line">    c.Animal.run()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码为Cat增加了一个run方法，这就是覆盖了父结构体run方法，这是完全覆盖，就是不依赖父结构体的方法，实现重写的功能；如果想要依赖父结构体的方法的话，那就得在子结构体中用显示的方法去调用它。</p><p>这里要注意的就是 c.run() 和 c.Animal.run() 的区别。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Cat)</span></span> run() &#123;</span><br><span class="line">    <span class="comment">//c.run() // 这样写是递归调用了，而这没有边界条件，就出现了无限递归</span></span><br><span class="line">    c.Animal.run() <span class="comment">// 指明用Animal的run方法</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;Cat run~~~&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="多态"><a href="#多态" class="headerlink" title="多态"></a>多态</h2><p>Go语言是不能像Java语言那样使用多态，但是又可以通过引用interface接口来解决这事。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Runner <span class="keyword">interface</span> &#123;</span><br><span class="line">    run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Animal <span class="keyword">struct</span> &#123;</span><br><span class="line">    name <span class="type">string</span></span><br><span class="line">    age  <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*Animal)</span></span> run() &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;Animal run~~~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">    Animal <span class="comment">// 匿名结构体嵌入</span></span><br><span class="line">    color  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(c *Cat)</span></span> run() &#123;</span><br><span class="line">    <span class="comment">//c.run() // 这样写是递归调用了，而这没有边界条件，就出现了无限递归</span></span><br><span class="line">    c.Animal.run() <span class="comment">// 指明用Animal的run方法</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;Cat run~~~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Dog <span class="keyword">struct</span> &#123;</span><br><span class="line">    Animal</span><br><span class="line">    color <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(d *Dog)</span></span> run() &#123;</span><br><span class="line">    d.Animal.run()</span><br><span class="line">    fmt.Println(<span class="string">&quot;Dog run~~~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">test</span><span class="params">(r Runner)</span></span> &#123; <span class="comment">// 多态</span></span><br><span class="line">    r.run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// var a Animal = Cat&#123;&#125; // Go语言做不到这样赋值</span></span><br><span class="line">    <span class="comment">// r.run() // Go无法写出这两行，需要结合接口来解决</span></span><br><span class="line">    c := <span class="built_in">new</span>(Cat)</span><br><span class="line">    c.name = <span class="string">&quot;Garfield&quot;</span></span><br><span class="line">    fmt.Println(c)</span><br><span class="line">    test(c)</span><br><span class="line">    d := <span class="built_in">new</span>(Dog)</span><br><span class="line">    d.name = <span class="string">&quot;Labrador&quot;</span></span><br><span class="line">    fmt.Println(d)</span><br><span class="line">    test(d)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>test使用同一个类型的同一个接口却表现不同，就是多态。</p><p>实现同一种类型的实例（父类的实例），其实都是子类的实例，调用统一调度方法，这些方法在子类中被覆盖了，所以调用统一的方法，表示出不同调度态。</p><h2 id="结构体排序"><a href="#结构体排序" class="headerlink" title="结构体排序"></a>结构体排序</h2><h3 id="排序接口"><a href="#排序接口" class="headerlink" title="排序接口"></a>排序接口</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// An implementation of Interface can be sorted by the routines in this package.</span></span><br><span class="line"><span class="comment">// The methods refer to elements of the underlying collection by integer index.</span></span><br><span class="line"><span class="keyword">type</span> Interface <span class="keyword">interface</span> &#123;</span><br><span class="line">    <span class="comment">// Len is the number of elements in the collection.</span></span><br><span class="line">    Len() <span class="type">int</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Less reports whether the element with index i</span></span><br><span class="line">    <span class="comment">// must sort before the element with index j.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// If both Less(i, j) and Less(j, i) are false,</span></span><br><span class="line">    <span class="comment">// then the elements at index i and j are considered equal.</span></span><br><span class="line">    <span class="comment">// Sort may place equal elements in any order in the final result,</span></span><br><span class="line">    <span class="comment">// while Stable preserves the original input order of equal elements.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Less must describe a transitive ordering:</span></span><br><span class="line">    <span class="comment">//  - if both Less(i, j) and Less(j, k) are true, then Less(i, k) must be true as well.</span></span><br><span class="line">    <span class="comment">//  - if both Less(i, j) and Less(j, k) are false, then Less(i, k) must be false as well.</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">// Note that floating-point comparison (the &lt; operator on float32 or float64 values)</span></span><br><span class="line">    <span class="comment">// is not a transitive ordering when not-a-number (NaN) values are involved.</span></span><br><span class="line">    <span class="comment">// See Float64Slice.Less for a correct implementation for floating-point values.</span></span><br><span class="line">    Less(i, j <span class="type">int</span>) <span class="type">bool</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// Swap swaps the elements with indexes i and j.</span></span><br><span class="line">    Swap(i, j <span class="type">int</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>从上面排序接口定义来看，如果要实现某个类型的排序</p><ul><li>首先的知道多少个元素</li><li>2个指定的索引元素怎么比较大小，索引i的元素小于索引j的值返回true，反之返回false</li><li>如何交换指定索引上的元素</li></ul><p>如果自定义的类型想要排序的话，就需要实现sort包中的这个接口。</p><h3 id="结构体排序-1"><a href="#结构体排序-1" class="headerlink" title="结构体排序"></a>结构体排序</h3><p><strong>示例：</strong> 假设有n个学生，学生有姓名和年龄，这边我想按照年龄排序结构体实例。</p><p>可以参照sort.Ints()来实现。给学生定义一个结构体Student，多个学生就使用切片[]Student.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Ints sorts a slice of ints in increasing order.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Ints</span><span class="params">(x []<span class="type">int</span>)</span></span> &#123; Sort(IntSlice(x)) &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// IntSlice attaches the methods of Interface to []int, sorting in increasing order.</span></span><br><span class="line"><span class="keyword">type</span> IntSlice []<span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x IntSlice)</span></span> Len() <span class="type">int</span>           &#123; <span class="keyword">return</span> <span class="built_in">len</span>(x) &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x IntSlice)</span></span> Less(i, j <span class="type">int</span>) <span class="type">bool</span> &#123; <span class="keyword">return</span> x[i] &lt; x[j] &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x IntSlice)</span></span> Swap(i, j <span class="type">int</span>)      &#123; x[i], x[j] = x[j], x[i] &#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;math/rand&quot;</span></span><br><span class="line">    <span class="string">&quot;sort&quot;</span></span><br><span class="line">    <span class="string">&quot;strconv&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> StudentSlice []Student</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x StudentSlice)</span></span> Len() <span class="type">int</span>           &#123; <span class="keyword">return</span> <span class="built_in">len</span>(x) &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x StudentSlice)</span></span> Swap(i, j <span class="type">int</span>)      &#123; x[i], x[j] = x[j], x[i] &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(x StudentSlice)</span></span> Less(i, j <span class="type">int</span>) <span class="type">bool</span> &#123; <span class="keyword">return</span> x[i].Age &lt; x[j].Age &#125; <span class="comment">// 如果想要降序的话，将小于符号缓存大于符号即可</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//随机生成学生数据</span></span><br><span class="line">    r := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line">    students := <span class="built_in">make</span>([]Student, <span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">6</span>; i++ &#123;</span><br><span class="line">        name := <span class="string">&quot;Tom&quot;</span> + strconv.Itoa(i)</span><br><span class="line">        age := r.Intn(<span class="number">30</span>) + <span class="number">20</span></span><br><span class="line">        students = <span class="built_in">append</span>(students, Student&#123;name, age&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v %[1]T\n&quot;</span>, students)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    sort.Sort(StudentSlice(students)) <span class="comment">// 强制类型转换，就地排序，默认是升序</span></span><br><span class="line">    <span class="comment">//sort.Sort(sort.Reverse(StudentSlice(students))) // 这语法也是可以将默认的升序改成降序，相比上面修改大小于号就可以修改升序或降序的方法较为麻烦一点，但是看个人习惯，想用哪个方法就用那种都可以</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v %[1]T\n&quot;</span>, students)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>上述代码简化如下：</strong></p><p>如果对于切片来说的话，Len、Swap方法实现其实都是一样的，切片中元素排序，就是某种类型的元素之间如果比较不知道而已，在Go中可以用 <span style="background-color:gray">sort.Slice(待排序的切片, less函数)</span> 来实现简化。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;math/rand&quot;</span></span><br><span class="line">    <span class="string">&quot;sort&quot;</span></span><br><span class="line">    <span class="string">&quot;strconv&quot;</span></span><br><span class="line">    <span class="string">&quot;time&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Student <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">//随机生成学生数据</span></span><br><span class="line">    r := rand.New(rand.NewSource(time.Now().UnixNano()))</span><br><span class="line">    students := <span class="built_in">make</span>([]Student, <span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">6</span>; i++ &#123;</span><br><span class="line">        name := <span class="string">&quot;Tom&quot;</span> + strconv.Itoa(i)</span><br><span class="line">        age := r.Intn(<span class="number">30</span>) + <span class="number">20</span></span><br><span class="line">        students = <span class="built_in">append</span>(students, Student&#123;name, age&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v %[1]T\n&quot;</span>, students)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    sort.Slice(students, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> students[i].Age &lt; students[j].Age <span class="comment">// 默认为升序的，想要降序将小于号换成大于号即可</span></span><br><span class="line">    &#125;)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v %[1]T\n&quot;</span>, students)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Map的排序"><a href="#Map的排序" class="headerlink" title="Map的排序"></a>Map的排序</h3><p>map是键值对的集合，是无序的hash表。但是排序输出的是序列，也就是排序所需要的键或值是要存入序列中的，然后才能排序。</p><h4 id="key排序"><a href="#key排序" class="headerlink" title="key排序"></a>key排序</h4><p>思路：首先提取key组成一个包含key元素的切片，利用key排序后在用key映射value将值打印出来</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;sort&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">    m[<span class="string">&quot;a&quot;</span>] = <span class="number">110</span></span><br><span class="line">    m[<span class="string">&quot;f&quot;</span>] = <span class="number">55</span></span><br><span class="line">    m[<span class="string">&quot;b&quot;</span>] = <span class="number">366</span></span><br><span class="line">    m[<span class="string">&quot;z&quot;</span>] = <span class="number">288</span></span><br><span class="line">    m[<span class="string">&quot;k&quot;</span>] = <span class="number">999</span></span><br><span class="line"></span><br><span class="line">    keys := <span class="built_in">make</span>([]<span class="type">string</span>, <span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">    <span class="keyword">for</span> k := <span class="keyword">range</span> m &#123;</span><br><span class="line">        keys = <span class="built_in">append</span>(keys, k)</span><br><span class="line">    &#125;</span><br><span class="line">    sort.Strings(keys)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> _, k := <span class="keyword">range</span> keys &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;key:&quot;</span>, k, <span class="string">&quot;value:&quot;</span>, m[k])</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="value排序"><a href="#value排序" class="headerlink" title="value排序"></a>value排序</h4><p>map是不可以通过value值来查找key值的，我们可以将每一个键值对想象成一个结构体的实例，这样我们在转化成结构体序列排序即可。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;sort&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Entry <span class="keyword">struct</span> &#123;</span><br><span class="line">    key   <span class="type">string</span></span><br><span class="line">    value <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    m := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>)</span><br><span class="line">    m[<span class="string">&quot;a&quot;</span>] = <span class="number">110</span></span><br><span class="line">    m[<span class="string">&quot;f&quot;</span>] = <span class="number">55</span></span><br><span class="line">    m[<span class="string">&quot;b&quot;</span>] = <span class="number">366</span></span><br><span class="line">    m[<span class="string">&quot;z&quot;</span>] = <span class="number">288</span></span><br><span class="line">    m[<span class="string">&quot;k&quot;</span>] = <span class="number">999</span></span><br><span class="line"></span><br><span class="line">    entries := <span class="built_in">make</span>([]Entry, <span class="built_in">len</span>(m)) <span class="comment">// 要注意这里的len(m)是5了，是已经有五个元素占用位置了</span></span><br><span class="line">    i := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> k, v := <span class="keyword">range</span> m &#123;</span><br><span class="line">        entries[i] = Entry&#123;k, v&#125;</span><br><span class="line">        i++</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(entries)</span><br><span class="line"></span><br><span class="line">    sort.Slice(entries, <span class="function"><span class="keyword">func</span><span class="params">(i, j <span class="type">int</span>)</span></span> <span class="type">bool</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> entries[i].value &lt; entries[j].value</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang的错误处理</title>
      <link href="/post/80afc9b1.html"/>
      <url>/post/80afc9b1.html</url>
      
        <content type="html"><![CDATA[<h1 id="错误处理"><a href="#错误处理" class="headerlink" title="错误处理"></a>错误处理</h1><h2 id="异常处理"><a href="#异常处理" class="headerlink" title="异常处理"></a>异常处理</h2><p>Go语言的设计者觉得其他语言的异常处理太消耗资源了，且设计的和处理复杂，导致使用者不能很好的处理错误，甚至觉得异常和错误处理起来很麻烦而忽视、忽略掉，后面从而导致程序崩溃。</p><p>为了解决这个问题，Go语言就将错误处理设计的非常简单。</p><ul><li>函数调用，返回值可以支持多值，一般最后一个值也是返回error接口类型的值<ul><li>如果函数在调用时产生了错误，则这个值是一个error接口类型的错误</li><li>如果函数调用成功，则这个值就是nil</li></ul></li><li>检查函数返回值中的错误是否是nil，如果不是nil，就进行必要的错误处理</li></ul><p>error是Go中声明的接口类型</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> <span class="type">error</span> <span class="keyword">interface</span> &#123;</span><br><span class="line">  Error() <span class="type">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所有实现了 <span style="background-color:gray">Error() string</span> 签名的方法，都可以实现error接口。</p><h2 id="自定义error"><a href="#自定义error" class="headerlink" title="自定义error"></a>自定义error</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> errorString <span class="keyword">struct</span> &#123;</span><br><span class="line">    s <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *errorString)</span></span> Error() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> e.s</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(test <span class="type">string</span>)</span></span> <span class="type">error</span> &#123; <span class="comment">// var e error = &amp;errorString&#123;test&#125;</span></span><br><span class="line">    <span class="comment">//t:=errorString&#123;test&#125;</span></span><br><span class="line">    <span class="comment">//return &amp;t</span></span><br><span class="line">    <span class="keyword">return</span> &amp;errorString&#123;test&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> e = errorString&#123;<span class="string">&quot;错误的理由1&quot;</span>&#125;</span><br><span class="line">    fmt.Println(e, e.Error(), &amp;e, (&amp;e).Error())</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> err = New(<span class="string">&quot;错误的理由2&quot;</span>)</span><br><span class="line">    fmt.Println(err.Error())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>上面代码中的20行中的e是直接通过errorString结构体实例化的一个实例，而23行是通过构造方法返回了一个error接口类型指针，而errorString结构体又实现了error接口（实现了Error方法），所以该errorString类型的实例，既是errorString类型的实例，也可以认为是error接口类型的实例。</strong></p><p>通过errors包的New方法返回一个error接口类型的错误实例， <span style="background-color:gray">errors.New(“错误描述”)</span> 来创建一个新的错误。</p><p>可以看出New方法返回一个实现了Error接口的结构体实例的指针。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;errors&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> ErrDivisionByZero = errors.New(<span class="string">&quot;除零异常&quot;</span>) <span class="comment">// 构造一个错误实例，建议实例名加上Err前缀</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">div</span><span class="params">(a, b <span class="type">int</span>)</span></span> (<span class="type">int</span>, <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> b == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>, ErrDivisionByZero</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> a / b, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">if</span> r, err := div(<span class="number">5</span>, <span class="number">0</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="comment">//fmt.Println(err)</span></span><br><span class="line">        fmt.Println(err.Error())</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fmt.Println(r)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="panic"><a href="#panic" class="headerlink" title="panic"></a>panic</h2><p>panic（恐慌），也有人翻译为宕机。</p><p>panic是不好的，因为当出现了panic的话，往往会造成程序的崩溃、服务的终止等等后果，所以没人需要它的出现，但是在错误发生时，不及时panic而终止重新运行，继续运行程序恐怕造成更大的损失，付出更加惨痛的代价。所以有时候panic导致的程序崩溃实际上是可以及时止损的，只能两害相权取其轻。  </p><p>panic虽然不好，但是也是万不得已的时候，还可以马上暴露问题，这样可以及时发现和纠正问题。</p><p>panic的产生</p><ul><li>runtime运行时错误导致出的panic，比如有数组越界、除零等等。</li><li>手动调用 <span style="background-color:gray">func panic(v any)</span> 函数，这里的any是指的空接口类型，也就是可以是任意类型</li></ul><p>panic的执行</p><ul><li>逆序执行当前已经注册过的goroutine的defer链（recover从这里介入）</li><li>打印错误信息和调用堆栈</li><li>调用exit(2)结束整个进程</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">div</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;start&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(a, b)</span><br><span class="line">    v := a / b <span class="comment">// 这里是可能会出现panic的</span></span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> v</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(div(<span class="number">5</span>, <span class="number">0</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行上面的代码会出现下面的情况</p><p><img src="/images/panic.png"></p><h2 id="recover"><a href="#recover" class="headerlink" title="recover"></a>recover</h2><p>recover的意思就是恢复，defer和recover经常结合起来一起使用，在defer语句中调用recover来实现对错误的捕获和恢复，让代码在发生panic后通过处理能够继续运行。类似于其他语言中的try&#x2F;catch.</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;runtime&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//var ErrDivisionByZero = errors.New(&quot;除零异常&quot;)</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">division</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;1 start&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="number">2</span>, a, b)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        err := <span class="built_in">recover</span>()</span><br><span class="line">        fmt.Printf(<span class="string">&quot;5 %T ---- %[1]v\n&quot;</span>, err) <span class="comment">// 如果没有异常recover就是nil；var err interface&#123;&#125; = xxx</span></span><br><span class="line">        <span class="comment">// 接口类型变量可以断言</span></span><br><span class="line">        <span class="keyword">switch</span> v := err.(<span class="keyword">type</span>) &#123;</span><br><span class="line">        <span class="keyword">case</span> <span class="type">string</span>:</span><br><span class="line">            fmt.Printf(<span class="string">&quot;原因是%T\n&quot;</span>, v)</span><br><span class="line">        <span class="keyword">case</span> <span class="type">int</span>:</span><br><span class="line">            fmt.Printf(<span class="string">&quot;原因是%T\n&quot;</span>, v)</span><br><span class="line">        <span class="keyword">case</span> runtime.Error: <span class="comment">// Error全局导出Error一定实现了error接口</span></span><br><span class="line">            <span class="comment">// Go中的所有错误要求必须实现error接口</span></span><br><span class="line">            fmt.Printf(<span class="string">&quot;原因是%T %#[1]v\n&quot;</span>, v)</span><br><span class="line">        <span class="keyword">case</span> []<span class="type">int</span>:</span><br><span class="line">            fmt.Printf(<span class="string">&quot;原因是%T\n&quot;</span>, v)</span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(<span class="string">&quot;&quot;</span>)</span><br><span class="line">    &#125;()</span><br><span class="line">    r := <span class="number">-1</span></span><br><span class="line">    r = a / b</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        err := <span class="built_in">recover</span>()</span><br><span class="line">        fmt.Println(<span class="number">6</span>, err)</span><br><span class="line">    &#125;()</span><br><span class="line">    fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line">    <span class="built_in">panic</span>(<span class="string">&quot;我自己操作的错误抛出&quot;</span>) <span class="comment">// 手动抛出panic</span></span><br><span class="line">    <span class="keyword">return</span> r <span class="comment">// 前面手动调用了panic，这时这行代码就不会被执行，当在其他函调用时取这个返回值的时因为返回值的类型是int，这时会取到这个返回值类型的零值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;3 main start&quot;</span>)</span><br><span class="line">    fmt.Println(division(<span class="number">5</span>, <span class="number">1</span>))</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;4 main end&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码运行结果如下：</p><p><img src="/images/recover.png"></p><p>上面的示例中，一旦在某个函数中出现panic后，当前函数panic之后的语句将不会被执行，就开始执行defer语句。如果在defer中错误被recover后，就相当于当前函数产生的错误得到了处理。当前函数执行完defer后，当前函数就退出执行，但是程序还可以执行其他的函数。</p><p>我们可以观察到panic和recover的相关关系：</p><ul><li>有panic的时候，就一路往外抛出错误，当没有一处进行recover时，也就是没有地方处理这个错误，这时就会导致程序的崩溃。</li><li>有panic，有recover来捕获时，相当于将错误处理掉了，当前函数defer执行完后，退出当前函数，从当前函数之后再继续执行。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang接口-interface</title>
      <link href="/post/3b0665f1.html"/>
      <url>/post/3b0665f1.html</url>
      
        <content type="html"><![CDATA[<h1 id="接口"><a href="#接口" class="headerlink" title="接口"></a>接口</h1><h2 id="接口定义、实现、嵌套"><a href="#接口定义、实现、嵌套" class="headerlink" title="接口定义、实现、嵌套"></a>接口定义、实现、嵌套</h2><p>接口interface，和Java类似，它是一组<strong>行为规范</strong>的集合，就是定义一组没有实现的函数声明。后面谁要使用接口就参照接口的方法定义去实现就好了。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> 接口名 <span class="keyword">interface</span> &#123;</span><br><span class="line">    方法<span class="number">1</span>(参数列表<span class="number">1</span>) 返回值列表<span class="number">1</span></span><br><span class="line">    方法<span class="number">2</span>(参数列表<span class="number">2</span>) 返回值列表<span class="number">2</span></span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>接口的命名习惯在接口名后面加上er后缀</li><li>参数列表、返回值列表的参数名是可以不写的</li><li>如果要在包外也使用接口，那接口名应该首字母要大写，方法要在包外使用的话，方法名也是要首字母大写</li><li>接口中的方法一个要设计合理，不要过多</li></ul><p>在Go语言中，使用组合实现对象特性的描述。对象内部使用结构体内嵌组合对象应该具有的特性，对外通过接口暴露能使用的特性。</p><p>Go语言的接口设计是非侵入式的，接口编写者无需知道接口被哪些类型实现了。而接口实现者只需要知道要实现什么样子的接口，但无需指明实现哪一个接口。在最后编译器知道使用哪个类型实现哪个接口，或者接口应该由谁来实现。</p><p>接口是约束谁应该具有什么功能，实现某接口发方法，就具有改接口的功能，简而言之就是缺啥补啥。</p><p>接口内的方法全部实现了，才能称为实现了该接口。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Runner <span class="keyword">interface</span> &#123;</span><br><span class="line">    run()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Jumper <span class="keyword">interface</span> &#123;</span><br><span class="line">    jump()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Driver <span class="keyword">interface</span> &#123;</span><br><span class="line">    driver()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Sport <span class="keyword">interface</span> &#123; <span class="comment">// 该接口实现了接口嵌套，里面包括了Runner、Jumper接口，注意这个Sport是由Runner、Jumper接口组成的一个新接口</span></span><br><span class="line">    Runner</span><br><span class="line">    Jumper</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Person)</span></span> run() &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;我可以跑步了~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Person)</span></span> jump() &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;我可以跳了~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Person)</span></span> swim() &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;我可以游泳了~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Person)</span></span> driver() &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;我可以开车兜风了~&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// p := Person&#123;&quot;zg&quot;, 23&#125; // 使用字面量实例化这个结构体</span></span><br><span class="line">    <span class="comment">// 这里的p是Person的实例,但由于Person实现了Sport接口，也是就可以说p是Sport接口的一个实例，这里的p类型即属于Person类型，也属于Sport类型</span></span><br><span class="line">    p := <span class="built_in">new</span>(Person)             <span class="comment">// 使用new方法来实例化该结构体，使用的结构体属性类型的零值, var p *Person = new(Person)</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p) <span class="comment">// main.Person &#123;Name:zg Age:23&#125;</span></span><br><span class="line">    p.run()                      <span class="comment">// 我可以跑步了~</span></span><br><span class="line">    p.jump()                     <span class="comment">// 我可以跳了~</span></span><br><span class="line">    p.swim()                     <span class="comment">// 我可以游泳了~</span></span><br><span class="line">    p.driver()                   <span class="comment">// 我可以开车兜风了~</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// var s = p // 这里类型推导s的类型是*Person</span></span><br><span class="line">    <span class="keyword">var</span> s Sport = p <span class="comment">// 不会报错,因为Person实现Sport接口，而p又是Person的一个实例，间接的也就实现了Sport接口</span></span><br><span class="line">    s.run()</span><br><span class="line">    s.jump()</span><br><span class="line">    <span class="comment">// s.swim() // 在Sport接口类型里面没有swim()方法，所以这里语法是错的，这里的s没法使用swim()方法</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> d Driver = p</span><br><span class="line">    <span class="comment">// d.run() // 在Driver接口类型里面没有run()方法</span></span><br><span class="line">    d.driver()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">*main.Person &amp;&#123;Name: Age:0&#125;</span><br><span class="line">我可以跑步了~</span><br><span class="line">我可以跳了~</span><br><span class="line">我可以游泳了~</span><br><span class="line">我可以开车兜风了~</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">我可以跑步了~</span><br><span class="line">我可以跳了~</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">我可以开车兜风了~</span><br></pre></td></tr></table></figure><h2 id="空接口"><a href="#空接口" class="headerlink" title="空接口"></a>空接口</h2><p>空接口，实际上是空接口类型，写法 <span style="background-color:gray">interface{}</span> 。为了方便使用，Go语言为它定义了一个别名any类型，即 <span style="background-color:gray">type any &#x3D; interface{}</span> 。</p><p>由于空接口里面没有任何方法声明，可以认为任何类型都无需显示实现空接口的方法，因为任何类型都满足这个空接口的要求，那么任何类型的值都可以看做是空接口类型。</p><p>空接口变量可以接受所有类型的实例。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">type</span> Runner <span class="keyword">interface</span> &#123;</span><br><span class="line">        run()</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">type</span> A <span class="keyword">interface</span>&#123;&#125; <span class="comment">// 这说明任何实例都实现了该接口</span></span><br><span class="line">    <span class="comment">// interface&#123;&#125; 空接口类型</span></span><br><span class="line"></span><br><span class="line">    a := <span class="number">666</span> <span class="comment">// 这里的a即是int类型的一个实例，又可以认为a也是空接口类型的实例</span></span><br><span class="line">    <span class="comment">// var b A // 这里的b是空接口类型的变量标识符</span></span><br><span class="line">    <span class="keyword">var</span> b <span class="keyword">interface</span>&#123;&#125; <span class="comment">// b是空接口类型的变量标识符，可以适合接收任意类型的值</span></span><br><span class="line">    <span class="comment">// var b any // 新语法 type any = interface&#123;&#125; 这里的any是interface&#123;&#125;空接口类型的一个别名</span></span><br><span class="line">    b = a                        <span class="comment">// 相当于写成 var b interface&#123;&#125; = a</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, a) <span class="comment">// int 666</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, b) <span class="comment">// int 666 如果把前面的b = a注释掉的话，这里打印出来的就是&lt;nil&gt; &lt;nil&gt;</span></span><br><span class="line"></span><br><span class="line">    c := <span class="string">&quot;pxt&quot;</span></span><br><span class="line">    b = c</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, c) <span class="comment">// string pxt</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, b) <span class="comment">// string pxt</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 假设我有一个切片，想要元素类型都不一样</span></span><br><span class="line">    <span class="comment">// []any</span></span><br><span class="line">    <span class="comment">// s:=[]interface&#123;&#125;&#123;&#x27;a&#x27;&#125; // 要注意空接口类型是interface&#123;&#125;,空接口类型切片就需要写成[]interface&#123;&#125;在后面在加上&#123;&#125;的话是字面量实例化</span></span><br><span class="line">    s := <span class="built_in">make</span>([]<span class="keyword">interface</span>&#123;&#125;, <span class="number">0</span>, <span class="number">5</span>)</span><br><span class="line">    s = <span class="built_in">append</span>(s, <span class="string">&#x27;A&#x27;</span>)</span><br><span class="line">    s = <span class="built_in">append</span>(s, <span class="string">&quot;pxt&quot;</span>)</span><br><span class="line">    s = <span class="built_in">append</span>(s, []<span class="type">string</span>&#123;&#125;)</span><br><span class="line">    s = <span class="built_in">append</span>(s, <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;&#125;)</span><br><span class="line">    s = <span class="built_in">append</span>(s, <span class="number">999</span>)</span><br><span class="line">    fmt.Println(s, <span class="built_in">len</span>(s), <span class="built_in">cap</span>(s))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码的运行结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">int 666</span><br><span class="line">int 666</span><br><span class="line">string pxt</span><br><span class="line">string pxt</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">[65 pxt [] map[] 999] 5 5</span><br></pre></td></tr></table></figure><h2 id="接口类型断言"><a href="#接口类型断言" class="headerlink" title="接口类型断言"></a>接口类型断言</h2><p>接口类型断言（Type Assertion）可以将接口转换成另外一种接口，也可以将接口转换另外的类型。</p><p>接口类型断言的格式 t :&#x3D; i.(T)</p><ul><li>i代表接口变量</li><li>T表示转换目标的类型</li><li>t代表转换后的变量</li><li>断言失败，也就就是说 i 没有实现T接口的方法则panic</li><li>t, ok :&#x3D; i.(T) ，这样的话断言失败的话就不会panic，可以通过ok是true或false判断i是否是T类型接口</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> b <span class="keyword">interface</span>&#123;&#125; = <span class="number">666</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]v\n&quot;</span>, b)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// b.(类型) 断言失败会panic</span></span><br><span class="line">    <span class="keyword">if</span> t, ok := b.(<span class="type">string</span>); ok &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;断言转换成功值为&quot;</span>, t, ok)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;断言转换失败&quot;</span>, ok)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="type-switch"><a href="#type-switch" class="headerlink" title="type-switch"></a>type-switch</h3><p>可以使用特殊格式来对接口做多种类型的断言。</p><p>i.(type)只能用在switch中，在外面就没法使用了。</p><p>如果想要在switch中使用转换的结果就可以使用下面的方法。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> i <span class="keyword">interface</span>&#123;&#125; = <span class="number">500</span></span><br><span class="line">    <span class="keyword">switch</span> v := i.(<span class="keyword">type</span>) &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="literal">nil</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;nil&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="type">string</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;字符串&quot;</span>, v)</span><br><span class="line">    <span class="keyword">case</span> <span class="type">int</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;整型&quot;</span>, v)</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;其他类型&quot;</span>, v)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="输出格式接口"><a href="#输出格式接口" class="headerlink" title="输出格式接口"></a>输出格式接口</h2><p>我们使用的fmt.Print等函数时，对任意一个值都是会有一个缺省打印的格式。本质上就是实现打印相关的接口。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 普通的Print</span></span><br><span class="line"><span class="keyword">type</span> Stringer <span class="keyword">interface</span> &#123;</span><br><span class="line">    String() <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// %#v format</span></span><br><span class="line"><span class="keyword">type</span> GoStringer <span class="keyword">interface</span> &#123;</span><br><span class="line">    GoString() <span class="type">string</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以实现上面的接口就可以控制值的打印输出格式了。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// fmt.Stringer</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(Person)</span></span> String() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;abc&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// fmt.GoStringer</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*Person)</span></span> GoString() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;xyz&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(*Person)</span></span> foo() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&quot;foo&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// p := new(Person)</span></span><br><span class="line">    p := Person&#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">23</span>&#125;</span><br><span class="line">    fmt.Println(p, &amp;p)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v %+v\n&quot;</span>, p, &amp;p)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%#v %#v\n&quot;</span>, p, &amp;p)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%s %s\n&quot;</span>, p.foo(), (&amp;p).foo())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">abc abc</span><br><span class="line">abc abc                            </span><br><span class="line">main.Person&#123;Name:<span class="string">&quot;Tom&quot;</span>, Age:23&#125; xyz</span><br><span class="line">foo foo</span><br></pre></td></tr></table></figure><table><thead><tr><th>以实例的指针为例</th><th>%v</th><th>%+v</th><th>%#v</th></tr></thead><tbody><tr><td>默认</td><td>&amp;{Tom 23}</td><td>&amp;{Name:Tom Age:23}</td><td>&amp;main.Person{Name:”Tom”, Age:23}</td></tr><tr><td>实现Stringer接口</td><td>abc</td><td>abc</td><td></td></tr><tr><td>实现GoStringer接口</td><td></td><td></td><td>xyz</td></tr></tbody></table><p>如果自己实现了Stringer、GoStringer接口的方法，如果receiver是用的指针，只能对指针有作用；如果receiver是实例的话，实例、指针都有作用。普通方法的receiver不管是实例还是指针，实例、指针都可以调用该方法使用。</p><p>接口定义示例：<a href="https://gitee.com/go-course/go9/blob/master/projects/vblog/api/apps/blog/interface.go#L14-37">https://gitee.com/go-course/go9/blob/master/projects/vblog/api/apps/blog/interface.go#L14-37</a></p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang结构体</title>
      <link href="/post/1b3acd2d.html"/>
      <url>/post/1b3acd2d.html</url>
      
        <content type="html"><![CDATA[<h1 id="结构体"><a href="#结构体" class="headerlink" title="结构体"></a>结构体</h1><p>在Go语言中的结构体有点像是面向对象的“类”，但也不是完全是，Go语言也没有打算真正的实现面向对象的范式开发。</p><h2 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h2><p>使用type定义结构体，可以把结构体看做一个<strong>类型</strong>使用。必须指定结构体的字段（属性）名称和类型。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 这里的User是包级的全局变量，首字母大写包外可见，里面的属性首字母也是大写也是包可见的</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id         <span class="type">uint</span></span><br><span class="line">    Name, Addr <span class="type">string</span> <span class="comment">// 多个字段类型相同可以合并写在一起</span></span><br><span class="line">    Score      <span class="type">float64</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>User在这里只不过是一个标识符，是一个指代</li><li>这里真正的类型是struct{}这部分</li></ul><h2 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id         <span class="type">int</span></span><br><span class="line">    Name, Addr <span class="type">string</span> <span class="comment">// 多个字段且类型相同的话可以合并在一起写</span></span><br><span class="line">    Score      <span class="type">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 1、使用var声明，非常常用</span></span><br><span class="line">    <span class="keyword">var</span> u1 User                              <span class="comment">// 这种方式声明结构体变量很方便，没有赋值，用的是零值，u1是User类型的一个实例</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;u1的类型：%T u1的值：%+[1]v\n&quot;</span>, u1) <span class="comment">// 使用fmt.Printf是使用&quot;%+v&quot;是指的加上字段和值一起打印、&quot;%#v&quot;指的是与前一个差不多就是多打印出一个类型</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 2、使用字面量创建实例（推荐）</span></span><br><span class="line">    u2 := User&#123;&#125; <span class="comment">// User结构体里面的字段都为零值</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;u2的类型：%T u2的值：%#[1]v\n&quot;</span>, u2)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 3、字面量定义字段</span></span><br><span class="line">    u3 := User&#123;Id: <span class="number">666</span>&#125; <span class="comment">// filed: value 给定字段赋值</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, u3)</span><br><span class="line">    u4 := User&#123;Id: <span class="number">10</span>, Score: <span class="number">98.5</span>, Name: <span class="string">&quot;唐三&quot;</span>, Addr: <span class="string">&quot;唐门&quot;</span>&#125; <span class="comment">// 给定字段名对应值的话，顺序无所谓的</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, u4)</span><br><span class="line">    u5 := User&#123;<span class="number">10</span>, <span class="string">&quot;萧炎&quot;</span>, <span class="string">&quot;萧门&quot;</span>, <span class="number">100</span>&#125; <span class="comment">// 不按照字段名给值时，这时就需要安装顺序将值全部给出</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, u5)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="可见性"><a href="#可见性" class="headerlink" title="可见性"></a>可见性</h2><ul><li>在Go包的顶层代码中，首字母大写的标识符，则挎包也是可见的（导出）。否则只能在本包内可见</li><li>导出结构体，package内外都可以见，同时想要导出结构体的成员（属性、方法）要在包外可见的话，则也是需要将首字母大写的</li></ul><h2 id="访问、修改"><a href="#访问、修改" class="headerlink" title="访问、修改"></a>访问、修改</h2><p>这的访问和修改都可以通过访问结构体的字段名来操作。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 访问</span></span><br><span class="line">u6 := User&#123;<span class="number">1</span>, <span class="string">&quot;zg&quot;</span>, <span class="string">&quot;Shenzhen&quot;</span>, <span class="number">666</span>&#125; <span class="comment">// 不按照字段名给值时，这时就需要安装顺序将值全部给出</span></span><br><span class="line">fmt.Println(u6, u6.Name, u6.Score)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 修改</span></span><br><span class="line">u7 := User&#123;<span class="number">2</span>, <span class="string">&quot;pxt&quot;</span>, <span class="string">&quot;Shenzhen&quot;</span>, <span class="number">999</span>&#125; <span class="comment">// 不按照字段名给值时，这时就需要安装顺序将值全部给出</span></span><br><span class="line">fmt.Println(u7)</span><br><span class="line">u7.Name = <span class="string">&quot;lmr&quot;</span></span><br><span class="line">u7.Addr = <span class="string">&quot;Anhui&quot;</span></span><br><span class="line">fmt.Println(u7)</span><br></pre></td></tr></table></figure><h2 id="成员方法"><a href="#成员方法" class="headerlink" title="成员方法"></a>成员方法</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里的User是包级的全局变量，首字母大写包外可见，里面的属性首字母也是大写也是包外可见的</span></span><br><span class="line"><span class="keyword">type</span> User <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id         <span class="type">uint</span></span><br><span class="line">    Name, Addr <span class="type">string</span> <span class="comment">// 多个字段类型相同可以合并写在一起</span></span><br><span class="line">    Score      <span class="type">float64</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这个是普通函数</span></span><br><span class="line"><span class="comment">//func getName(u User) string &#123;</span></span><br><span class="line"><span class="comment">//    return u.Name</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 利用结构体的方法，这本质上也是函数</span></span><br><span class="line"><span class="comment">// 这里的u 被称为receiver（接受者）</span></span><br><span class="line"><span class="comment">// 等价于 func (User) string</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u User)</span></span> getName() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> u.Name</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u User)</span></span> getAddr() <span class="type">string</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> u.Addr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(u User)</span></span> getScore() <span class="type">float64</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> u.Score</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    u1 := User&#123;<span class="number">111</span>, <span class="string">&quot;zg&quot;</span>, <span class="string">&quot;Shenzhen&quot;</span>, <span class="number">100</span>&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, u1)</span><br><span class="line">    <span class="comment">//fmt.Println(u1.Name, getName(u1))</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">    fmt.Println(u1.getName())</span><br><span class="line">    fmt.Println(u1.getAddr())</span><br><span class="line">    fmt.Println(u1.getScore())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="指针"><a href="#指针" class="headerlink" title="指针"></a>指针</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">    x, y <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    p1 := Point&#123;<span class="number">10</span>, <span class="number">20</span>&#125;           <span class="comment">// 字面量实例化</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p1) <span class="comment">// main.Point &#123;x:10 y:20&#125;</span></span><br><span class="line"></span><br><span class="line">    p2 := &amp;Point&#123;<span class="number">6</span>, <span class="number">9</span>&#125;                  <span class="comment">// 指针取地址</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v %[1]p\n&quot;</span>, p2) <span class="comment">// *main.Point &amp;&#123;x:6 y:9&#125; 0xc00001a0f0</span></span><br><span class="line"></span><br><span class="line">    p3 := <span class="built_in">new</span>(Point)                    <span class="comment">// 这里是new实例化一个结构体并返回，这里就是返回Point的零值的实例的指针</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v %[1]p\n&quot;</span>, p3) <span class="comment">// *main.Point &amp;&#123;x:0 y:0&#125; 0xc00001a120</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过实例修改属性</span></span><br><span class="line">    p1.x = <span class="number">100</span></span><br><span class="line">    p1.y = <span class="number">200</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p1) <span class="comment">// main.Point &#123;x:100 y:200&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 通过指针修改属性</span></span><br><span class="line">    p2.x = <span class="number">666</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p2) <span class="comment">// *main.Point &amp;&#123;x:666 y:9&#125;</span></span><br><span class="line">    p3.x = <span class="number">300</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p3) <span class="comment">// *main.Point &amp;&#123;x:300 y:0&#125;</span></span><br><span class="line">    <span class="comment">// p3.x中的. 是 -&gt; 的语法糖，更方便使用。等价于(*p3).x</span></span><br><span class="line">    fmt.Println(*p3, (*p3).x, p3.x) <span class="comment">// &#123;300 0&#125; 300 300</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">    x, y <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">f1</span><span class="params">(p Point)</span></span> Point &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;4：%T %+[1]v %p\n&quot;</span>, p, &amp;p)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    p1 := Point&#123;<span class="number">10</span>, <span class="number">20</span>&#125; <span class="comment">// 字面量实例化</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;1：%T %+[1]v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line"></span><br><span class="line">    p2 := p1</span><br><span class="line">    fmt.Printf(<span class="string">&quot;2：%T %+[1]v %p\n&quot;</span>, p2, &amp;p2)</span><br><span class="line"></span><br><span class="line">    p3 := &amp;p1</span><br><span class="line">    fmt.Printf(<span class="string">&quot;3：%T %+[1]v %p\n&quot;</span>, p3, p3)</span><br><span class="line"></span><br><span class="line">    p4 := f1(p1)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;5：%T %+[1]v %p\n&quot;</span>, p4, &amp;p4)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1：main.Point &#123;x:10 y:20&#125; 0xc0000180d0</span><br><span class="line">2：main.Point &#123;x:10 y:20&#125; 0xc000018120  </span><br><span class="line">3：*main.Point &amp;&#123;x:10 y:20&#125; 0xc0000180d0</span><br><span class="line">4：main.Point &#123;x:10 y:20&#125; 0xc000018180  </span><br><span class="line">5：main.Point &#123;x:10 y:20&#125; 0xc000018170 </span><br></pre></td></tr></table></figure><p>从上面的代码与运行结果来看，结构体是<strong>非引用类型</strong>，这里是的的是值拷贝。在Go语言中只有值拷贝这个概念；传参或返回值如果是结构体实例的话就会产生很多的副本，要确保函数内外使用的是同一个结构体的实例的话，就需要使用指针。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">    x, y <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn1</span><span class="params">(p *Point)</span></span> *Point &#123;</span><br><span class="line">    p.x += <span class="number">200</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;4 %T %+[1]v %p\n&quot;</span>, p, p)</span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    p1 := Point&#123;<span class="number">10</span>, <span class="number">20</span>&#125; <span class="comment">// 字面量实例化</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;1 %T %+[1]v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line">    p2 := p1</span><br><span class="line">    fmt.Printf(<span class="string">&quot;2 %T %+[1]v %p\n&quot;</span>, p2, &amp;p2)</span><br><span class="line">    p3 := &amp;p1</span><br><span class="line">    fmt.Printf(<span class="string">&quot;3 %T %+[1]v %p\n&quot;</span>, p3, p3)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    p4 := fn1(&amp;p1)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;5 %T %+[1]v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;6 %T %+[1]v %p\n&quot;</span>, p4, p4)</span><br><span class="line">    p4.x += <span class="number">100</span> <span class="comment">// x = 110</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;7 %T %+[1]v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;8 %T %+[1]v %p\n&quot;</span>, p4, p4)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    p5 := &amp;p1</span><br><span class="line">    p5.y = <span class="number">999</span> <span class="comment">// 这时基于p1的结构体里面y字段的值都会被修改</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;9 %T %+[1]v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;10 %T %+[1]v %p\n&quot;</span>, p2, &amp;p2)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;11 %T %+[1]v %p\n&quot;</span>, p3, p3)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;12 %T %+[1]v %p\n&quot;</span>, p4, p4)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;13 %T %+[1]v %p\n&quot;</span>, p5, p5)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">1 main.Point &#123;x:10 y:20&#125; 0xc0000180d0</span><br><span class="line">2 main.Point &#123;x:10 y:20&#125; 0xc000018120     </span><br><span class="line">3 *main.Point &amp;&#123;x:10 y:20&#125; 0xc0000180d0   </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             </span><br><span class="line">4 *main.Point &amp;&#123;x:210 y:20&#125; 0xc0000180d0  </span><br><span class="line">5 main.Point &#123;x:210 y:20&#125; 0xc0000180d0    </span><br><span class="line">6 *main.Point &amp;&#123;x:210 y:20&#125; 0xc0000180d0  </span><br><span class="line">7 main.Point &#123;x:310 y:20&#125; 0xc0000180d0    </span><br><span class="line">8 *main.Point &amp;&#123;x:310 y:20&#125; 0xc0000180d0  </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~             </span><br><span class="line">9 main.Point &#123;x:310 y:999&#125; 0xc0000180d0   </span><br><span class="line">10 main.Point &#123;x:10 y:20&#125; 0xc000018120    </span><br><span class="line">11 *main.Point &amp;&#123;x:310 y:999&#125; 0xc0000180d0</span><br><span class="line">12 *main.Point &amp;&#123;x:310 y:999&#125; 0xc0000180d0</span><br><span class="line">13 *main.Point &amp;&#123;x:310 y:999&#125; 0xc0000180d0</span><br></pre></td></tr></table></figure><p>从上面结果得出，说明使用了同一个内存区域中的结构体实例，减少了拷贝</p><h2 id="匿名结构体"><a href="#匿名结构体" class="headerlink" title="匿名结构体"></a>匿名结构体</h2><p>匿名结构体：标识符直接使用struct部分的结构体本身来作为类型，而不是使用type定义的有名字的结构体的标识符。</p><p>这里可以使用var、const、:&#x3D;来定义匿名结构体，但是要注意在Go语言中const是定义常量的关键字，无法用于定义匿名结构体，在go语言中只能使用var和:&#x3D;这两个方法来定义匿名结构体。</p><p>type定义结构体的标识符，可以反复定义其结构体实例，但是匿名结构体是一次性的。</p><p><img src="/images/go-struct.png" alt="Alt text"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">    x, y <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> point <span class="keyword">struct</span> &#123;</span><br><span class="line">    x, y <span class="type">int</span></span><br><span class="line">&#125; <span class="comment">// 定义point是后面匿名结构体类型的实例，这里用的是零值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> Person = <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id   <span class="type">int</span></span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">&#125;&#123;<span class="number">1</span>, <span class="string">&quot;pxt&quot;</span>&#125; <span class="comment">// 使用var定义一个Person标识符指向struct &#123; Id int; Name string &#125;类型的匿名结构体并初始化给定其值，不使用零值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> p1 = Point&#123;<span class="number">6</span>, <span class="number">9</span>&#125; <span class="comment">// p1是Point类型的一个实例</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, p1)</span><br><span class="line">    fmt.Println(p1.x, p1.y)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, point) <span class="comment">// 这里得到是一个结构体的一个实例，里面的值为零值罢了</span></span><br><span class="line">    fmt.Println(point.x, point.y)    <span class="comment">// 类型可以看做是一个模板</span></span><br><span class="line">    point.x = <span class="number">666</span></span><br><span class="line">    point.y = <span class="number">999</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, point)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, Person)</span><br><span class="line">    fmt.Println(Person.Id, Person.Name)</span><br><span class="line">    Person.Name = <span class="string">&quot;lmr&quot;</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v\n&quot;</span>, Person)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    student := <span class="keyword">struct</span> &#123;</span><br><span class="line">        id   <span class="type">int</span></span><br><span class="line">        name <span class="type">string</span></span><br><span class="line">        age  <span class="type">int</span></span><br><span class="line">    &#125;&#123;<span class="number">1</span>, <span class="string">&quot;zg&quot;</span>, <span class="number">23</span>&#125; <span class="comment">// 短格式定义并初始化给其值</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, student)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">main.Point &#123;x:6 y:9&#125;</span><br><span class="line">6 9</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">struct &#123; x int; y int &#125; &#123;x:0 y:0&#125;</span><br><span class="line">0 0</span><br><span class="line">&#123;x:666 y:999&#125;</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">struct &#123; Id int; Name string &#125; &#123;Id:1 Name:pxt&#125;</span><br><span class="line">1 pxt</span><br><span class="line">&#123;Id:1 Name:lmr&#125;</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">struct &#123; <span class="built_in">id</span> int; name string; age int &#125; &#123;<span class="built_in">id</span>:1 name:zg age:23&#125;</span><br></pre></td></tr></table></figure><p>匿名结构体，主要就是为了快速方便地得到一个结构体实例，而不是使用结构体创建N个实例。</p><h2 id="匿名成员"><a href="#匿名成员" class="headerlink" title="匿名成员"></a>匿名成员</h2><p>就是结构体里面的属性名也是可以省略，要注意一般情况下，建议不要怎么做，属性名就是为了可以见名之意，匿名的话不易于代码的阅读。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Id         <span class="type">uint</span>   <span class="comment">// Id是属性的标识符名称</span></span><br><span class="line">    Name, Addr <span class="type">string</span> <span class="comment">// Name, Addr也是属性的标识符的名称</span></span><br><span class="line">    <span class="type">uint</span>              <span class="comment">// 不知道是啥，没有名称，只是占用了一个位置可以放uint数据，这也叫匿名属性</span></span><br><span class="line">    <span class="type">bool</span>              <span class="comment">// 匿名属性，同类型的匿名属性只能有一个，不然是没法区分</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    p1 := Person&#123;<span class="number">1</span>, <span class="string">&quot;zg&quot;</span>, <span class="string">&quot;Shenzhen&quot;</span>, <span class="number">8</span>, <span class="literal">true</span>&#125;</span><br><span class="line">    fmt.Println(p1)</span><br><span class="line">    fmt.Println(p1.Id, p1.Name, p1.Addr, p1.<span class="type">uint</span>, p1.<span class="type">bool</span>)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> p2 = Person&#123;Id: <span class="number">10</span>, Name: <span class="string">&quot;lmr&quot;</span>, <span class="type">uint</span>: <span class="number">20</span>, <span class="type">bool</span>: <span class="literal">false</span>, Addr: <span class="string">&quot;Anhui&quot;</span>&#125; <span class="comment">// 使用类型名作为字段（属性）名</span></span><br><span class="line">    fmt.Println(p2)</span><br><span class="line">    fmt.Println(p2.Id, p2.Name, p2.Addr, p2.<span class="type">uint</span>, p2.<span class="type">bool</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;1 zg Shenzhen 8 <span class="literal">true</span>&#125;      </span><br><span class="line">1 zg Shenzhen 8 <span class="literal">true</span>        </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">&#123;10 lmr Anhui 20 <span class="literal">false</span>&#125;     </span><br><span class="line">10 lmr Anhui 20 <span class="literal">false</span></span><br></pre></td></tr></table></figure><h2 id="构造函数"><a href="#构造函数" class="headerlink" title="构造函数"></a>构造函数</h2><p>在Go语言中并没有从语言层面上为结构体提供什么构造器，但是有时候可以通过一个函数为结构体初始化提供属性值，从而方便得到一个结构体的实例。在习惯上我们会将函数命名为NewXxx或newXxx的形式。</p><p>要注意结构体是非引用类型，这样的话就会大量的值拷贝。在Go语言中只有值拷贝这个概念；传参或返回值如果是结构体实例的话就会产生很多的副本，要确保函数内外使用的是同一个结构体的实例的话，就需要使用指针，为了减少内存的开销，习惯上返回值都会采用指针类型，这样可以减少实例的整体拷贝。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Animal <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name  <span class="type">string</span></span><br><span class="line">    Age   <span class="type">uint</span></span><br><span class="line">    Color <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">NewAnimal</span><span class="params">(name <span class="type">string</span>, age <span class="type">uint</span>)</span></span> *Animal &#123;</span><br><span class="line">    <span class="comment">// a := Animal&#123;name, age&#125;</span></span><br><span class="line">    <span class="comment">// fmt.Printf(&quot;%T %+[1]v %p\n&quot;, a, &amp;a)</span></span><br><span class="line">    a := <span class="built_in">new</span>(Animal) <span class="comment">// 使用new(Animal)的话是实例化一下Animal，但返回的是Animal实例的指针</span></span><br><span class="line">    a.Name = name</span><br><span class="line">    a.Age = age</span><br><span class="line">    a.Color = <span class="string">&quot;white&quot;</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;2 %T %+[1]v %[1]p\n&quot;</span>, a)</span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a1 := Animal&#123;<span class="string">&quot;Tom&quot;</span>, <span class="number">5</span>, <span class="string">&quot;black&quot;</span>&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;1 %T %+[1]v %p\n&quot;</span>, a1, &amp;a1)</span><br><span class="line"></span><br><span class="line">    a2 := NewAnimal(<span class="string">&quot;Pxt&quot;</span>, <span class="number">23</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;3 %T %+[1]v %[1]p\n&quot;</span>, a2)</span><br><span class="line"></span><br><span class="line">    a3 := NewAnimal(<span class="string">&quot;zg&quot;</span>, <span class="number">24</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;4 %T %+[1]v %[1]p\n&quot;</span>, a3)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1 main.Animal &#123;Name:Tom Age:5 Color:black&#125; 0xc000072540</span><br><span class="line">2 *main.Animal &amp;&#123;Name:Pxt Age:23 Color:white&#125; 0xc0000725a0</span><br><span class="line">3 *main.Animal &amp;&#123;Name:Pxt Age:23 Color:white&#125; 0xc0000725a0</span><br><span class="line">2 *main.Animal &amp;&#123;Name:zg Age:24 Color:white&#125; 0xc000072630 </span><br><span class="line">4 *main.Animal &amp;&#123;Name:zg Age:24 Color:white&#125; 0xc000072630</span><br></pre></td></tr></table></figure><h2 id="父子关系构造"><a href="#父子关系构造" class="headerlink" title="父子关系构造"></a>父子关系构造</h2><p>就类似像动物类包括了猫类，猫属于猫类，猫也属于动物类，某动物一定属于动物类，但不能说某动物一定是猫类。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Animal <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">uint</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Cat <span class="keyword">struct</span> &#123;</span><br><span class="line">    <span class="comment">// A Animal</span></span><br><span class="line">    Animal <span class="comment">// 匿名属性，结构体嵌套，父结构体</span></span><br><span class="line">    Color  <span class="type">string</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := <span class="built_in">new</span>(Cat) <span class="comment">// Cat实例化,Animal同时也被实例化了，零值</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, a)</span><br><span class="line">    <span class="comment">// a.Animal.Name = &quot;Tom&quot;</span></span><br><span class="line">    <span class="comment">// 这里感觉Name、Age就像Cat的属性一样，父结构体定义的属性就成了子结构体的属性了，实现了继承父结构体的属性</span></span><br><span class="line">    a.Name = <span class="string">&quot;Tom&quot;</span> <span class="comment">// 语法糖</span></span><br><span class="line">    a.Age = <span class="number">20</span></span><br><span class="line">    a.Color = <span class="string">&quot;black&quot;</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %+[1]v\n&quot;</span>, a)</span><br><span class="line">    fmt.Println(a.Animal.Name, a.Age)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码输出结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*main.Cat &amp;&#123;Animal:&#123;Name: Age:0&#125; Color:&#125;</span><br><span class="line">*main.Cat &amp;&#123;Animal:&#123;Name:Tom Age:20&#125; Color:black&#125;</span><br><span class="line">Tom 20</span><br></pre></td></tr></table></figure><ul><li>使用结构体嵌套实现类似面向对象父类子类继承（派生）的效果</li><li>子结构体使用匿名属性能简化调用父结构体的属性</li></ul><h2 id="指针类型receiver"><a href="#指针类型receiver" class="headerlink" title="指针类型receiver"></a>指针类型receiver</h2><p>在Go语言中可以为任意类型包括结构体增加方法。形式是 func Receiver 方法名 签名 {函数体}  ，这个receiver类似于其他语言中的this或self。</p><p>receiver必须是一个类型T实例或者是类型T的指针，T不能是指针或接口。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Point <span class="keyword">struct</span> &#123;</span><br><span class="line">    x, y <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 普通函数</span></span><br><span class="line"><span class="comment">//func getX(p Point) int &#123;</span></span><br><span class="line"><span class="comment">//    fmt.Printf(&quot;2 %+v %p\n&quot;, p, &amp;p)</span></span><br><span class="line"><span class="comment">//    return p.x</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 方法，与Point建立联系</span></span><br><span class="line"><span class="comment">// receiver如果是实例的话，这里依然会存在值拷贝。语法糖允许使用实例或指针调用该方法，但是由于receiver是实例，所以这里都会有值拷贝</span></span><br><span class="line"><span class="comment">// 读取不修改，只读的，get一个属性的方法，也可以交getter</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Point)</span></span> getX() <span class="type">int</span> &#123; <span class="comment">// getX方法绑定到结构体类型Point</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;instance %+v %p\n&quot;</span>, p, &amp;p)</span><br><span class="line">    <span class="keyword">return</span> p.x</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 语法糖允许使用实例或指针调用该方法，但是由于receiver是指针，所以都去调用的是指针，不过使用指针还是值拷贝，只不过是拷贝本身就是指针（地址）</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Point)</span></span> getY() <span class="type">int</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;pointer %+v %p\n&quot;</span>, p, p)</span><br><span class="line">    <span class="keyword">return</span> p.y</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p Point)</span></span> setX(v <span class="type">int</span>) &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;instance %+v %p\n&quot;</span>, p, &amp;p)</span><br><span class="line">    p.x = v</span><br><span class="line">    fmt.Printf(<span class="string">&quot;instance %+v %p\n&quot;</span>, p, &amp;p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(p *Point)</span></span> setY(v <span class="type">int</span>) &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;pointer %+v %p\n&quot;</span>, p, p)</span><br><span class="line">    p.y = v</span><br><span class="line">    fmt.Printf(<span class="string">&quot;pointer %+v %p\n&quot;</span>, p, p)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    p1 := Point&#123;<span class="number">10</span>, <span class="number">20</span>&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%+v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// fmt.Println(getX(p1)) // 这里传参给getX(&amp;p1)的话是不符合形参的类型要求的会报错</span></span><br><span class="line">    fmt.Println(p1.getX(), (&amp;p1).getX())</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">    fmt.Println(p1.getY(), (&amp;p1).getY())</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    p1.setX(<span class="number">100</span>) <span class="comment">// 实例调用时值拷贝</span></span><br><span class="line">    p1.setY(<span class="number">200</span>) <span class="comment">// 看似是实例调用，实则是指针，在操作内存中同一位置的数据</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;1 %+v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    (&amp;p1).setX(<span class="number">666</span>)</span><br><span class="line">    (&amp;p1).setY(<span class="number">999</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;2 %+v %p\n&quot;</span>, p1, &amp;p1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码运行结果为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;x:10 y:20&#125; 0xc00001a0b0</span><br><span class="line">instance &#123;x:10 y:20&#125; 0xc00001a100</span><br><span class="line">instance &#123;x:10 y:20&#125; 0xc00001a130</span><br><span class="line">10 10</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">pointer &amp;&#123;x:10 y:20&#125; 0xc00001a0b0</span><br><span class="line">pointer &amp;&#123;x:10 y:20&#125; 0xc00001a0b0</span><br><span class="line">20 20</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">instance &#123;x:10 y:20&#125; 0xc00001a1c0</span><br><span class="line">instance &#123;x:100 y:20&#125; 0xc00001a1c0</span><br><span class="line">pointer &amp;&#123;x:10 y:20&#125; 0xc00001a0b0</span><br><span class="line">pointer &amp;&#123;x:10 y:200&#125; 0xc00001a0b0</span><br><span class="line">1 &#123;x:10 y:200&#125; 0xc00001a0b0</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">instance &#123;x:10 y:200&#125; 0xc00001a270</span><br><span class="line">instance &#123;x:666 y:200&#125; 0xc00001a270</span><br><span class="line">pointer &amp;&#123;x:10 y:200&#125; 0xc00001a0b0</span><br><span class="line">pointer &amp;&#123;x:10 y:999&#125; 0xc00001a0b0</span><br><span class="line">2 &#123;x:10 y:999&#125; 0xc00001a0b0</span><br></pre></td></tr></table></figure><p>从上面代码及运行结果来看，如果receiver(接收器)非指针调用时会有大量的值拷贝，操作的都是副本，而指针receiver(接收器)调用操作的是内存中同一位置的数据，也是就是同一个内存中的同一个实例。</p><p>注意：如果是要操作大内存对象时，且操作的是同一个实例时，这时一定要采用指针receiver（接受器）的方法来实现。</p><p>如果方法中不使用receiver的话，其标识符可以省略</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(Point)</span></span> test() &#123; <span class="comment">// 不推荐使用这样的用法</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;哈哈哈&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="深浅拷贝"><a href="#深浅拷贝" class="headerlink" title="深浅拷贝"></a>深浅拷贝</h1><ul><li>shadow copy<ul><li>影子拷贝，也叫浅拷贝。遇到引用类型数据，仅仅也只是复制的一个引用而已</li></ul></li><li>deep copy<ul><li>深拷贝，往往都会递归复制一定深度</li></ul></li></ul><p>注意，深浅拷贝说的是拷贝过程中是否发生递归拷贝，也就是说如果某个值是一个地址的话，只是复制的这个地址，还是复制地址指向的内容。</p><p>值拷贝是深拷贝，地址拷贝是浅拷贝，这样的说法是<strong>错误的</strong>。因为地址拷贝只是拷贝了地址，本质上来讲也是值拷贝。</p><p>在Go语言中，引用类型实际上是拷贝的是标头值，这也是值拷贝，并没有通过标头值中对底层数据结构的的指针指向的内容进行复制，这就是浅拷贝。非引用类型的复制就是值拷贝，也就是再造一个副本，这也是浅拷贝。总不可能说对一个整数值在内存中复制出一个副本，就是深的拷贝。像整数类型这样的基本类型就是一个单独的值，这样是没法深入拷贝的，就根本没法去讲深入的事。</p><p>我们可以用拷贝文件来理解这个问题；有软链接的直接复制软链接就是浅拷贝，钻进软链接里面复制其内容就是深拷贝。</p><p>复杂的数据结构，往往都会有嵌套，有时嵌套很深，如果都采用深拷贝，那代价很高，所以浅拷贝才是语言普遍的使用方案。</p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang变量逃逸分析</title>
      <link href="/post/4e026d6b.html"/>
      <url>/post/4e026d6b.html</url>
      
        <content type="html"><![CDATA[<h1 id="堆与栈"><a href="#堆与栈" class="headerlink" title="堆与栈"></a>堆与栈</h1><p>堆（Heap）与栈（Stack）是开发人员必须面对的两个概念，在理解这两个概念时，需要放到具体的场景下，因为不同场景下，堆与栈代表不同的含义。一般情况下，有两层含义：</p><ul><li>程序内存布局场景下，堆与栈表示两种内存管理方式。</li><li>数据结构场景下，堆与栈表示两种常用的数据结构。</li></ul><h2 id="程序内存分区中的堆于栈"><a href="#程序内存分区中的堆于栈" class="headerlink" title="程序内存分区中的堆于栈"></a>程序内存分区中的堆于栈</h2><h3 id="栈的简介"><a href="#栈的简介" class="headerlink" title="栈的简介"></a>栈的简介</h3><p>栈只允许从线性表的同一端放入和取出数据，按照后进先出（LIFO，Last InFirst Out）的顺序，如下图：</p><p><img src="/images/stack-operate.png"></p><p>栈由操作系统自动分配释放，用于存放函数的参数值、局部变量等，其操作方式类似于数据结构中的栈。参考如下代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> a <span class="type">int</span> <span class="comment">// 栈</span></span><br><span class="line">    <span class="keyword">var</span> b = []<span class="type">string</span>&#123;<span class="string">&quot;111&quot;</span>&#125; <span class="comment">// 栈</span></span><br><span class="line">    <span class="keyword">var</span> c any <span class="comment">// 栈</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>其中函数中定义的局部变量按照先后定义的顺序依次压入栈中，也就是说相邻变量的地址之间不会存在其它变量。栈的内存地址生长方向与堆相反，由高到底，所以后定义的变量地址低于先定义的变量，比如上面代码中变量 b 的地址小于变量 a 的地址，c 地址小于 b 的地址。栈中存储的数据的生命周期随着函数的执行完成而结束。</p><h3 id="堆的简介"><a href="#堆的简介" class="headerlink" title="堆的简介"></a>堆的简介</h3><p>堆由开发人员分配和释放， 若开发人员不释放，程序结束时由 OS 回收，分配方式类似于链表。</p><p>在Go语言中，内存管理是通过内置的垃圾回收机制来处理的，而不是像在C或C++中那样手动管理内存。因此，在Go中，你通常不需要手动申请和释放内存，你可以使用切片或者内置的new关键字来分配内存。</p><p>对于堆在内存中的分配，我们可以类比成一个房间，分配内存时，需要找一块足够装下家具的空间来摆放家具。经过反复摆放和腾空家具后，房间里的空间会变得乱七八糟，此时再往这个空间里摆放家具会发现虽然有足够的空间，但各个空间分布在不同的区域，没有一段连续的空间来摆放家具。此时，内存分配器就需要对这些空间进行调整优化，如下图：</p><p><img src="/images/heap%E5%88%86%E9%85%8D%E5%8F%8A%E7%A9%BA%E9%97%B4.png"></p><blockquote><p>对比栈和堆可知，在编译时，一切无法确定大小或大小可以改变的数据，最好放到堆上，堆适合不可预知大小的内存分配。但是为此付出的代价是分配速度较慢，而且会形成内存碎片。</p></blockquote><p>函数中申请一个新的对象：</p><ul><li>如果分配在栈中，则函数执行结束可自动将内存回收；</li><li>如果分配在堆中，则函数执行结束可交给GC（垃圾回收）处理；</li></ul><p>逃逸分析的好处应该是减少了 gc 的压力，栈的分配比堆快，性能好，如果变量都分配到栈上，可以避免 Go 频繁地进行垃圾回收，而垃圾回收会占用比较大的系统开销。</p><h4 id="逃逸分析基本原则"><a href="#逃逸分析基本原则" class="headerlink" title="逃逸分析基本原则"></a>逃逸分析基本原则</h4><p>编译器会根据变量是否被外部引用来决定是否逃逸：</p><ol><li>如果函数外部没有引用，则优先放到栈中；</li><li>如果函数外部存在引用，则必定放到堆中;</li><li>如果栈上放不开，则必定放到堆上;</li></ol><h4 id="减少逃逸，将变量限制在栈上"><a href="#减少逃逸，将变量限制在栈上" class="headerlink" title="减少逃逸，将变量限制在栈上"></a>减少逃逸，将变量限制在栈上</h4><p>变量逃逸一般发生在如下几种情况：</p><ul><li>变量较大（栈空间不足）</li><li>变量大小不确定（如 slice 长度或容量不定）</li><li>返回地址</li><li>返回引用（引用变量的底层是指针）</li><li>返回值类型不确定（不能确定大小）</li><li>闭包</li><li>其他</li></ul><p>知道变量逃逸的原因后，我们可以有意识地控制变量不发生逃逸，将其控制在栈上，减少堆变量的分配，降低 GC 成本，提高程序性能。</p><h2 id="逃逸的场景"><a href="#逃逸的场景" class="headerlink" title="逃逸的场景"></a>逃逸的场景</h2><h3 id="指针逃逸"><a href="#指针逃逸" class="headerlink" title="指针逃逸"></a>指针逃逸</h3><p>我们知道Go可以返回局部变量指针，这种情况下，函数虽然退出了，但是因为指针的存在，对象的内存不能随着函数结束而回收，因此只能分配在堆上。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Person <span class="keyword">struct</span> &#123;</span><br><span class="line">    Name <span class="type">string</span></span><br><span class="line">    Age  <span class="type">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">PersonRegister</span><span class="params">(name <span class="type">string</span>, age <span class="type">int</span>)</span></span> *Person &#123;</span><br><span class="line">    p := <span class="built_in">new</span>(Person)</span><br><span class="line">    p.Name = name</span><br><span class="line">    p.Age = age</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> p</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    PersonRegister(<span class="string">&quot;阿桂&quot;</span>, <span class="number">23</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数PersonRegister()内部p为局部变量，其值通过函数返回值返回，p本身是一指针，其指向的内存地址不会是栈而是堆，这就是典型的逃逸案例。</p><p>我们可以通过编译参数 -gcflag&#x3D;-m ，这样可以查看编译过程中的逃逸分析：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags=-m test.go </span><br><span class="line"><span class="comment"># command-line-arguments                </span></span><br><span class="line">.\test.go:8:6: can inline PersonRegister</span><br><span class="line">.\test.go:16:6: can inline main</span><br><span class="line">.\test.go:17:16: inlining call to PersonRegister</span><br><span class="line">.\test.go:8:21: leaking param: name</span><br><span class="line">.\test.go:9:10: new(Person) escapes to heap</span><br><span class="line">.\test.go:17:16: new(Person) does not escape</span><br></pre></td></tr></table></figure><p>上面代码第9行显示了“escapes to heap”，这就表示该行内存分配发生了逃逸现象。</p><h3 id="栈空间不足逃逸"><a href="#栈空间不足逃逸" class="headerlink" title="栈空间不足逃逸"></a>栈空间不足逃逸</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Slice</span><span class="params">()</span></span> &#123;</span><br><span class="line">    s := <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">1000</span>, <span class="number">1000</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, _ := <span class="keyword">range</span> s &#123;</span><br><span class="line">        s[i] = i</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    Slice()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的代码Slice()函数中分配了1000个长度的切片，这里是否逃逸取决于栈的空间大小，编译结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags=-m test.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">.\test.go:3:6: can inline Slice</span><br><span class="line">.\test.go:11:6: can inline main</span><br><span class="line">.\test.go:12:7: inlining call to Slice</span><br><span class="line">.\test.go:4:11: make([]int, 1000, 1000) does not escape</span><br><span class="line">.\test.go:12:7: make([]int, 1000, 1000) does not escape</span><br></pre></td></tr></table></figure><p>将上面 <span style="background-color:gray">s :&#x3D; make([]int, 1000, 1000)</span> 修改成 <span style="background-color:gray">s :&#x3D; make([]int, 10000, 10000)</span>看看编译结果如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags=-m test.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">.\test.go:3:6: can inline Slice</span><br><span class="line">.\test.go:11:6: can inline main</span><br><span class="line">.\test.go:12:7: inlining call to Slice</span><br><span class="line">.\test.go:4:11: make([]int, 10000, 10000) escapes to heap</span><br><span class="line">.\test.go:12:7: make([]int, 10000, 10000) escapes to heap</span><br></pre></td></tr></table></figure><p>发现当切片长度扩大到10000时就会逃逸。当栈空间不足以存放当前对象时或无法判断当前切片长度时会将对象分配到堆中。</p><h3 id="动态类型逃逸"><a href="#动态类型逃逸" class="headerlink" title="动态类型逃逸"></a>动态类型逃逸</h3><p>在 Go 中，空接口 interface{} 可以表示任意的类型，如果函数参数为 interface{}，编译期间很难确定其参数的具体类型，也会发生逃逸。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    s := <span class="string">&quot;hello world&quot;</span></span><br><span class="line">    fmt.Println(s)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因为在 fmt.Println() 的参数类型定义为interface{}，因此也发生了逃逸。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags=-m test.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">.\test.go:7:13: inlining call to fmt.Println</span><br><span class="line">.\test.go:7:13: ... argument does not escape</span><br><span class="line">.\test.go:7:14: s escapes to heap</span><br></pre></td></tr></table></figure><h3 id="闭包引用逃逸"><a href="#闭包引用逃逸" class="headerlink" title="闭包引用逃逸"></a>闭包引用逃逸</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fibonacci</span><span class="params">()</span></span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    a, b := <span class="number">0</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> <span class="type">int</span> &#123;</span><br><span class="line">        a, b = b, a+b</span><br><span class="line">        <span class="keyword">return</span> a</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    f := fibonacci()</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">        f()</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>fibonacci()函数中原本属于局部变量的a和b由于闭包的引用，不得不将二者放到堆上，以致产生逃逸：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ go build -gcflags=-m test.go </span><br><span class="line"><span class="comment"># command-line-arguments</span></span><br><span class="line">.\test.go:3:6: can inline fibonacci</span><br><span class="line">.\test.go:5:9: can inline fibonacci.func1</span><br><span class="line">.\test.go:12:16: inlining call to fibonacci</span><br><span class="line">.\test.go:5:9: can inline main.func1</span><br><span class="line">.\test.go:14:4: inlining call to main.func1</span><br><span class="line">.\test.go:4:2: moved to heap: a</span><br><span class="line">.\test.go:4:5: moved to heap: b</span><br><span class="line">.\test.go:5:9: func literal escapes to heap</span><br><span class="line">.\test.go:12:16: func literal does not escape</span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><ul><li>栈上分配内存比在堆中分配内存效率更高</li><li>栈上分配的内存不需要 GC 处理，而堆需要</li><li>逃逸分析目的是决定内分配地址是栈还是堆</li><li>逃逸分析在编译阶段完成</li></ul><h3 id="传值-VS-传指针"><a href="#传值-VS-传指针" class="headerlink" title="传值 VS 传指针"></a>传值 VS 传指针</h3><p>函数传递指针真的比传值效率高吗？如果拷贝的数据量小，由于指针传递会产生逃逸，可能会使用堆，增加垃圾回收(GC)的负担，所以传递指针不一定 是高效的。</p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang的递归、匿名函数、闭包、defer</title>
      <link href="/post/56157772.html"/>
      <url>/post/56157772.html</url>
      
        <content type="html"><![CDATA[<h1 id="递归函数"><a href="#递归函数" class="headerlink" title="递归函数"></a>递归函数</h1><p>简单来说，递归其实就是函数自己调用自己。有2种实现方式。一种就是直接在自己函数中调用自己，另一种就是间接在自己函数中调用其他函数中又调用了自己。</p><ul><li>递归函数需要有边界条件、递归前进段、递归返回段</li><li>递归一定要有边界条件</li><li>当边界条件不满足时，递归前进</li><li>当边界调节满足时，递归返回</li></ul><h2 id="斐波那契数列"><a href="#斐波那契数列" class="headerlink" title="斐波那契数列"></a>斐波那契数列</h2><p>斐波那契数列 Fibonacci number：1,1,2,3,5,8,13,21,34,55,89,144,…</p><p>如果设F(n)为该数列的第n项（n ∈ N* ），表示n趋向于非零自然数，那么斐波那契数列中的第n项的值就可以写成F(n)&#x3D;F(n-1)+F(n-2)</p><p>数列就会有：F(0)&#x3D;0,F(1)&#x3D;1,F(2)&#x3D;1,F(n)&#x3D;F(n-1)+F(n-2)</p><h3 id="函数循环版"><a href="#函数循环版" class="headerlink" title="函数循环版"></a>函数循环版</h3><p>打印出100以内的斐波那契数列的值</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib1</span><span class="params">(n <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> n &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">panic</span>(<span class="string">&quot;n is negative&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">case</span> n &lt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    a, b := <span class="number">1</span>, <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; n<span class="number">-2</span>; i++ &#123;</span><br><span class="line">        <span class="comment">// temp := b</span></span><br><span class="line">        <span class="comment">// b = a + b</span></span><br><span class="line">        <span class="comment">// a = temp</span></span><br><span class="line">        a, b = b, a+b <span class="comment">// 当不支持这种新语法的话就使用上面注释的语法来计算</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; fib1(i) &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">        fmt.Println(fib1(i))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>使用递归实现的话，就需要使用到递归公式F(n)&#x3D;F(n-1)+F(n-2)</p><h3 id="递推公式-加cache缓存优化"><a href="#递推公式-加cache缓存优化" class="headerlink" title="递推公式(加cache缓存优化)"></a>递推公式(加cache缓存优化)</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib2</span><span class="params">(n <span class="type">int</span>, m <span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">0</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(<span class="string">&quot;n is negative&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> n &lt; <span class="number">3</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> i, ok := m[n]; ok &#123;</span><br><span class="line">        <span class="keyword">return</span> i</span><br><span class="line">    &#125;</span><br><span class="line">    m[n] = fib2(n<span class="number">-1</span>, m) + fib2(n<span class="number">-2</span>, m)</span><br><span class="line">    <span class="keyword">return</span> m[n]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; fib2(i, <span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>&#123;&#125;) &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">        <span class="comment">// fmt.Print(fib(i, map[int]int&#123;&#125;), &quot; &quot;)</span></span><br><span class="line">        fmt.Println(fib2(i, <span class="keyword">map</span>[<span class="type">int</span>]<span class="type">int</span>&#123;&#125;))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="循环变递归"><a href="#循环变递归" class="headerlink" title="循环变递归"></a>循环变递归</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fib3</span><span class="params">(n, a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">switch</span> &#123;</span><br><span class="line">    <span class="keyword">case</span> n &lt; <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">panic</span>(<span class="string">&quot;n is negative&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> n == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    <span class="keyword">case</span> n &lt; <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">return</span> b</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> fib3(n<span class="number">-1</span>, b, a+b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">1</span>; fib3(i, <span class="number">1</span>, <span class="number">1</span>) &lt; <span class="number">100</span>; i++ &#123;</span><br><span class="line">        fmt.Println(fib3(i, <span class="number">1</span>, <span class="number">1</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>前面的代码中n相当于循环的变量，b和a+b就是每次循环体中使用的值</p><p>使用递归公式代码虽然简单，但是要注意这样的函数进行了大量的重复计算，这样会影响运行速度的，会非常慢，这时就需要加上cache，我们这里可以加上map来给递推公式的斐波那契数列做个优化。</p><p><img src="/images/fib.png" alt="Alt text"></p><h2 id="递归要求"><a href="#递归要求" class="headerlink" title="递归要求"></a>递归要求</h2><ul><li>递归一定要有退出条件，递归调用一定要执行到这个退出条件。没有退出条件的递归调用，就是无限的调用，这样会很危险。</li><li>递归调用的深度不宜过深</li><li>Go语言是不可能让函数无限调用的，栈空间终会被耗尽的<ul><li>goroutine stack exceeds 1000000000-byte limit</li></ul></li></ul><h2 id="递归效率"><a href="#递归效率" class="headerlink" title="递归效率"></a>递归效率</h2><p>以上3个斐波那契数列的实现，请问那个效率高？递归效率一定低吗？那个版本好？</p><p>使用递推公式的效率是极低的，是因为有大量的重复计算，这里我们可以使用map来保存重复计算的值，从而优化了效率。</p><p>循环变递归的方式是采用了递归函数调用层次代替循环层次，只能说效率还不错，基本上和循环版本的效率差不多。</p><p>这3种方式效率最好的是循环版，因为递归是有深度限制的，再一个函数调用的开销较大，每次函数调用都会产生栈帧。</p><h2 id="间接递归"><a href="#间接递归" class="headerlink" title="间接递归"></a>间接递归</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">foo</span><span class="params">()</span></span> &#123;</span><br><span class="line">    bar()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">bar</span><span class="params">()</span></span> &#123;</span><br><span class="line">    foo()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">foo()</span><br></pre></td></tr></table></figure><p>间接递归调用，是函数通过别的函数调用主机，这样也是递归。</p><p>只要是递归调用，不管是直接的还是间接的，都是需要注意边界返回的问题。但是间接递归调用有时候是非常不明显的，代码调用复杂时，很难发现出现递归调用，这是非常危险。</p><p>所以，我们就要使用良好的代码规范来避免这种递归的发生。</p><h2 id="递归函数的总结"><a href="#递归函数的总结" class="headerlink" title="递归函数的总结"></a>递归函数的总结</h2><ul><li>递归是一种很自然的表达，符合逻辑思维</li><li>递归相对运行效率低，每一次调用函数都要开辟栈帧</li><li>递归是有深度限制的，如果递归层次太深，函数连续压栈，栈内存就可能会溢出了</li><li>如果有限次数的递归，可以使用递归调用，或者使用循环代替，循环代码稍微复杂了一些，但是只要不是死循环，可以多次迭代直至算出结果</li><li>绝大多数递归，都是可以使用循环来实现的</li><li>即使递归代码很简洁，但是要注意<strong>能不用则不用递归</strong></li></ul><h1 id="匿名函数"><a href="#匿名函数" class="headerlink" title="匿名函数"></a>匿名函数</h1><p>匿名函数也就是没有名字的函数，在函数定义中，把名字去掉就可以了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> add = <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> x + y</span><br><span class="line">&#125; <span class="comment">//  定义一个标识符指向一个匿名函数</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">        result := x + y</span><br><span class="line">        fmt.Println(result)</span><br><span class="line">        <span class="keyword">return</span> result</span><br><span class="line">    &#125;(<span class="number">4</span>, <span class="number">5</span>) <span class="comment">// 指的是定义后立即调用</span></span><br><span class="line">    v := add(<span class="number">6</span>, <span class="number">7</span>)</span><br><span class="line">    fmt.Println(v)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>匿名函数主要作用是用于高阶函数中，主要是传入逻辑。若一个函数允许传入的参数是函数类型，那就是把操作逻辑外移。</p><p>例如：给定两个整数，请给定计算逻辑，得到结果</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">count</span><span class="params">(a, b <span class="type">int</span>, fn <span class="keyword">func</span>(x, y <span class="type">int</span>)</span></span> <span class="type">int</span>) &#123;</span><br><span class="line">    result := fn(a, b) <span class="comment">// 这里count函数并没有实现对fn函数传入的参数做任何操作，就只是传了两个参数a、b到fn中，而fn中做什么操作是由未来的使用者来决定的</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;计算的结果 = &quot;</span>, result)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> add = <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> x + y</span><br><span class="line">    &#125;</span><br><span class="line">    count(<span class="number">10</span>, <span class="number">5</span>, add)</span><br><span class="line">    count(<span class="number">5</span>, <span class="number">6</span>, <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> x - y &#125;)  <span class="comment">// 减法</span></span><br><span class="line">    count(<span class="number">8</span>, <span class="number">10</span>, <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> x * y &#125;) <span class="comment">// 乘法</span></span><br><span class="line">    count(<span class="number">81</span>, <span class="number">9</span>, <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> x / y &#125;) <span class="comment">// 除法</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在Go语言中是没有lambd表达式，也没有类似JavaScript的箭头函数，匿名函数写起来还是较为繁琐，只能使用类型别名简化，但是并没有什么太大的作用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> MyFunc = <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">calc</span><span class="params">(a, b <span class="type">int</span>, myFunc MyFunc)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> myFunc(a, b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    i := calc(<span class="number">5</span>, <span class="number">6</span>, <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> x + y &#125;)</span><br><span class="line">    fmt.Println(i)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">    i2 := calc(<span class="number">10</span>, <span class="number">8</span>, <span class="function"><span class="keyword">func</span><span class="params">(x, y <span class="type">int</span>)</span></span> <span class="type">int</span> &#123; <span class="keyword">return</span> x * y &#125;)</span><br><span class="line">    fmt.Println(i2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="函数嵌套-嵌套作用域"><a href="#函数嵌套-嵌套作用域" class="headerlink" title="函数嵌套-嵌套作用域"></a>函数嵌套-嵌套作用域</h1><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">outer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := <span class="number">100</span></span><br><span class="line">    <span class="keyword">var</span> inner = <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        a = <span class="number">999</span></span><br><span class="line">        fmt.Println(<span class="string">&quot;1 inner&quot;</span>, a, &amp;a) <span class="comment">// 这里的a是外面透进来的并修改了值</span></span><br><span class="line">    &#125;</span><br><span class="line">    inner()</span><br><span class="line">    fmt.Println(<span class="string">&quot;2 outer&quot;</span>, a, &amp;a) <span class="comment">// 这里是用的outer函数里面的局部a变量的值，这里的值在前面修改了，所以在这里a的值为999</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    outer()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码分析：</p><p>以从上面看到outer中定义了另外一个函数inner，并调用了inner。outer是包级变量，main中是可见的，也是可以调用的，而inner是outer中的局部变量，outer中可见。又在outer中定义了一个a变量并初始化值为100，在inner中又使用了这个a并重新赋值了999，这里的a是在outer中可见的。这时第9行、第12行都输出999，这说明了内外使用的是同一个标识符a，也就是说a是outer局部变量，而不是inner的局部变量。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">outer</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := <span class="number">100</span></span><br><span class="line">    <span class="keyword">var</span> inner = <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        a = <span class="number">999</span></span><br><span class="line">        fmt.Println(<span class="string">&quot;1 inner&quot;</span>, a, &amp;a) <span class="comment">// 这里的a是外面透进来的并修改了值</span></span><br><span class="line">        a := a + <span class="number">1</span></span><br><span class="line">        fmt.Println(<span class="string">&quot;3 inner&quot;</span>, a, &amp;a) <span class="comment">// 在上一行代码又重新定义了一个a并赋值，这时的a是inner里面的局部变量</span></span><br><span class="line">    &#125;</span><br><span class="line">    inner()</span><br><span class="line">    fmt.Println(<span class="string">&quot;2 outer&quot;</span>, a, &amp;a) <span class="comment">// 这里是用的outer函数里面的局部a变量的值，这里的值在前面修改了，所以在这里a的值为999</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    outer()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码分析：</p><p>在上面代码中定义了outer无参无返回值的函数，这时outer是包内可见的，因为首字母是小写的包外不可见。outer中定义了a和inner局部变量，只能在outer中可见。在上面代码中的第8行使用了a标识符但是只是赋值没有重新定义，这时还是使用的同一个a；而在第10行又重新定义了一个a，即在inner当前作用域中定义了一个新的局部变量a，而在这个局部变量只能影响当前的作用域，不可以影响其外部的作用域，也就是对外不可见。这时第9行和第14行还是都输出的999，而第11行输出的是1000了。</p><p><strong>注意：这个代码在不同的语言中，几处的a输出结果和Go语言不一定相同的。</strong></p><h1 id="函数的闭包"><a href="#函数的闭包" class="headerlink" title="函数的闭包"></a>函数的闭包</h1><p><strong>自由变量</strong>：未在本地作用域中定义的变量。例如：定义在内层函数外的外层函数中的作用域的局部变量。</p><p><strong>闭包</strong>：就是一个概念，出现在函数嵌套中，也就是指的<strong>内层函数中引用到了外层函数中的自由变量</strong>，这样的话就会形成闭包这个概念。在JavaScript中就经常出现闭包这个概念，闭包是运行期动态的概念。</p><ul><li>函数中有嵌套，函数内定义了其他函数</li><li>内部函数使用了外部函数的局部变量</li><li>内部函数被返回（非必须）</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">outer</span><span class="params">()</span></span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := <span class="number">100</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;outer&quot;</span>, a, &amp;a)</span><br><span class="line">    <span class="keyword">var</span> inner = <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;inner&quot;</span>, a, &amp;a) <span class="comment">// 这里用到了外部函数的局部作用域，outer函数的局部变量a</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> inner</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> fn = outer()</span><br><span class="line">    fn() <span class="comment">// 这里调用指的是调用inner函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码有实现闭包吗？为什么？</p><blockquote><p>上面示例代码中是有实现闭包的，有嵌套函数，也就是有嵌套的作用域；在inner函数中用到了a，但是在inner函数中有没有定义，而这时外部的outer函数中有局部变量a，这时inner中就使用了outer中的局部变量a。</p></blockquote><p>上面的代码分析：</p><blockquote><p>在第15行调用了outer函数并返回了返回了一个<strong>inner函数对象</strong>，并用标识符fn记住了它，当outer函数执行完后，其栈帧上的局部变量也会随着栈帧的消亡而释放，也包括了inner函数，因为它也是局部的。但是这里的a和inner对应的值都不能被释放，因为后面fn要用的。所以这些值就不能放在栈上面，要放到堆上面。在Go语言中，这也称为<strong>变量逃逸</strong>，逃逸到堆上了。</p></blockquote><blockquote><p>在某个时刻，fn函数调用了，需要用到a，但是其inner内部又没有定义a，因为它是outer的局部变量，如果a也随着outer函数调用完而释放了。那么这时fn函数调用一定会出现问题，所以这个outer的局部变量a是不能释放的，但是outer已经调用完成了，要怎么办了？这时就用到了闭包，让inner函数记住自由变量a（逃逸到堆上的内存地址）</p></blockquote><h1 id="defer"><a href="#defer" class="headerlink" title="defer"></a>defer</h1><p>defer的意思就是推迟、延迟。语法很简单，就是在正常语句前加上defer就可以了。</p><p>在某函数中使用defer语法，<strong>会使得defer后跟的语句进行延迟处理</strong>，当该函数即将<strong>返回时</strong>，或发生<strong>panic</strong>时，defer才后语句才会开始执行。但是要注意os.Exit不是这两种情况，是不会执行defer后的语句的。</p><p>同一个函数可以有多个defer语句，依次加入调用栈中（LIFO），函数返回或panic时，从栈顶一层执行defer后语句。执行的先后顺序和注册的顺序正好相反，也就是后注册的先执行。</p><p>defer后的语句必须是一个函数或方法的调用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;start&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;Go&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;two&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="string">&quot;three&quot;</span>)</span><br><span class="line">    fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果为：</span><br><span class="line">start</span><br><span class="line">end</span><br><span class="line">three</span><br><span class="line">two  </span><br><span class="line">one  </span><br><span class="line">Go </span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    count := <span class="number">100</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;start&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(count) <span class="comment">// 100</span></span><br><span class="line">    count++</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(count) <span class="comment">// 101</span></span><br><span class="line">    count++</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(count) <span class="comment">// 102</span></span><br><span class="line">    count++</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(count) <span class="comment">// 103</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果为：</span><br><span class="line">start</span><br><span class="line">end</span><br><span class="line"><span class="number">103</span></span><br><span class="line"><span class="number">102</span></span><br><span class="line"><span class="number">101</span></span><br><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure><p>因为defer注册时就把其后语句的的延迟执行的函数的实际参数准备好了，也就是注册时计算</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    count := <span class="number">100</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;start&quot;</span>)</span><br><span class="line">    <span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123; fmt.Println(<span class="number">1</span>, count) &#125;() <span class="comment">// 103</span></span><br><span class="line">    count++</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="number">2</span>, count) <span class="comment">// 101</span></span><br><span class="line">    count++</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="number">3</span>, count) <span class="comment">// 102</span></span><br><span class="line">    count++</span><br><span class="line">    <span class="keyword">defer</span> fmt.Println(<span class="number">4</span>, count) <span class="comment">// 103</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;end&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果为：</span><br><span class="line">start</span><br><span class="line">end  </span><br><span class="line"><span class="number">4</span> <span class="number">103</span></span><br><span class="line"><span class="number">3</span> <span class="number">102</span></span><br><span class="line"><span class="number">2</span> <span class="number">101</span></span><br><span class="line"><span class="number">1</span> <span class="number">103</span></span><br></pre></td></tr></table></figure><p>执行结果为上面情况，因为第10行注册时要确认实际参数，而这个是匿名无参函数，没法准备参数。延迟执行时，当打印时才用到了count，这时外部作用域有一个count，这时的值是103了。</p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang函数</title>
      <link href="/post/37de5a20.html"/>
      <url>/post/37de5a20.html</url>
      
        <content type="html"><![CDATA[<h1 id="Golang函数"><a href="#Golang函数" class="headerlink" title="Golang函数"></a>Golang函数</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>数学定义</p><ul><li>y &#x3D; f(x)，y是x的函数，x是自变量。y&#x3D;f(x0,x1,…,xn)</li></ul><p>Go函数</p><ul><li>由若干语句组成的语句块、函数名称、参数列表、返回值构成，它是组织代码的最小单元</li><li>可以完成一定的功能</li></ul><p>函数作用</p><ul><li>结构化编程对代码的最基本的封装，一般按照功能组织一段代码</li><li>封装的目的就是为了复用，减少冗余代码</li><li>代码更加简洁美观、可读易懂</li></ul><p>函数的分类</p><ul><li>内建函数，如make、new、panic等</li><li>库函数，如math.Ceil()等</li><li>自定义函数，使用func关键字定义</li></ul><h2 id="函数定义"><a href="#函数定义" class="headerlink" title="函数定义"></a>函数定义</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> 函数名<span class="params">(参数列表)</span></span> [(返回值列表)] &#123;</span><br><span class="line">    函数体(代码块)</span><br><span class="line">    [<span class="keyword">return</span> 返回值]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这里的[]表示其中的内容可有可无</span></span><br></pre></td></tr></table></figure><ul><li>函数名就是一个标识符，命名要求一样</li><li>在定义的参数列表称为<strong>形式参数</strong>，只是一种符号表达（标识符），简称<strong>形参</strong></li><li>返回值列表可有可无，需要和return语句配合，表示一个功能函数执行完返回的结果</li><li>函数名(参数列表) [(返回值列表)]这个部分称为<strong>函数签名</strong></li><li>在Go语言中形参也被称为入参，返回值也被称为出参</li></ul><h2 id="函数调用"><a href="#函数调用" class="headerlink" title="函数调用"></a>函数调用</h2><ul><li>函数定义，是指的只声明了一个函数，但是不能被执行，需要在函数调用时才会执行这个函数</li><li>调用的方式，就是在<strong>函数名后加上小括号</strong>，在必要的时候在括号里填上需要的参数</li><li>调用时写的参数是<strong>实际的参数</strong>，也就是实实在在传入的参数，简称<strong>实参</strong>，这个过程可以称为传实参，简称传参</li><li>如果定义了返回值列表，就需要配合return来返回这些值</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// add函数实现加法功能，整数加法</span></span><br><span class="line"><span class="comment">// func来定义一个功能函数，这是定义时，不是使用时</span></span><br><span class="line"><span class="comment">// add是这里的函数名称，是一个标识符，指代的是一个函数</span></span><br><span class="line"><span class="comment">// (a, b int) int 称为函数签名，go中函数的类型</span></span><br><span class="line"><span class="comment">// add函数编译后，生成的代码 只有一份</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">add</span><span class="params">(a, b <span class="type">int</span>)</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="comment">// a b在这称为形式上的参数，占位置用的，简称形参。形参作用告诉函数在未来某个时间调用时，应当提供几个什么类型的实参。形参也叫做入参</span></span><br><span class="line">    <span class="comment">// (a, b int)多个参数称为参数列表</span></span><br><span class="line">    <span class="comment">// 形参列表后int是返回值类型，也时可以写返回值标识符和类型。函数未来的输出。可有可无，和return语句配合。返回值也叫出参</span></span><br><span class="line">    <span class="comment">// 这里可以写n行代码，这些代码当函数被调用时执行</span></span><br><span class="line">    result := a + b</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// fmt.Println(add) // 使用了函数名称标识符，这不是函数调用</span></span><br><span class="line">    r1 := add(<span class="number">6</span>, <span class="number">9</span>) <span class="comment">// 函数标识符后面加上小括号为调用，这也就是调用时，提供形参所需的实实在在的数据，称为实际参数，简称实参</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]d\n&quot;</span>, r1)</span><br><span class="line"></span><br><span class="line">    r2 := add(<span class="number">10</span>, <span class="number">28</span>)</span><br><span class="line">    <span class="comment">// 右边是不是函数调用？ 是的</span></span><br><span class="line">    <span class="comment">// 请问main函数中调用了add函数几次？ 2次</span></span><br><span class="line">    <span class="comment">// 请问上面调用和下面调用有关系吗？ 没有关系</span></span><br><span class="line">    <span class="comment">// 函数add定义了几次？ 1次</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]d\n&quot;</span>, r2)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// r3 := add(66, 99)  // 每一次函数调用，执行的指令是一样的，但是加工的数据不是一样的罢了</span></span><br><span class="line">    <span class="comment">// 多次调用，用的是同一套操作逻辑，用的是该函数同一套指令，只不过加工的数据不一样</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面代码的解释：</p><ul><li>定义一个函数add，函数名为add，可以接受2个整数参数，两个参数的名称为a和b</li><li>该add函数计算的结果，再通过return语句返回”返回值”实现</li><li>调用add函数时给2个参数，参数的类型要是int类型的，add函数有返回值这里可以用一个变量来接收这个返回值</li><li><strong>函数名也是标识符</strong></li><li><strong>返回值也是值</strong></li><li>一般函数定义是需要再调用之前就定义好的，也就是说调用时，函数就已经被定义过了</li></ul><h2 id="函数调用原理"><a href="#函数调用原理" class="headerlink" title="函数调用原理"></a>函数调用原理</h2><p>函数调用相当于运行了一次函数定义好的代码，函数本身就是为了复用的，试想你可以用加法函数，我也可以用加法函数，你加你的，我加我的，应该是互不干扰的使用函数。为了实现这个目标，函数调用的一般实现，都是把函数压栈（LIFO），每一个函数调用都会在栈中分配专用的<strong>栈帧</strong>，局部变量、实参、返回值等数据都保存在这里的。</p><p>上面的函数调用中的代码中，首先是先调用的main函数，所以main函数就会压栈，后面又调用了add(6, 9)，这时就会add函数压栈了，压在main函数的栈帧上，add函数先计算在调用return，将add返回值保存在main栈帧的本地变量r1上，这时add栈帧就消亡了，又回到了main栈帧上。</p><h2 id="函数类型"><a href="#函数类型" class="headerlink" title="函数类型"></a>函数类型</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn1</span><span class="params">()</span></span>                     &#123;&#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn2</span><span class="params">(i <span class="type">int</span>)</span></span> <span class="type">int</span>            &#123; <span class="keyword">return</span> <span class="number">666</span> &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn3</span><span class="params">(j <span class="type">int</span>, k <span class="type">int</span>)</span></span> (r <span class="type">int</span>) &#123; <span class="keyword">return</span> <span class="number">666</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, fn1)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, fn2)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, fn3)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>)</span></span> <span class="type">int</span>     </span><br><span class="line"><span class="function"><span class="keyword">func</span><span class="params">(<span class="type">int</span>, <span class="type">int</span>)</span></span> <span class="type">int</span></span><br></pre></td></tr></table></figure><h2 id="函数返回值"><a href="#函数返回值" class="headerlink" title="函数返回值"></a>函数返回值</h2><p>官方文档：<a href="https://go.dev/ref/spec#Return_statements">https://go.dev/ref/spec#Return_statements</a></p><p>返回值变量是局部变量</p><h3 id="无返回值"><a href="#无返回值" class="headerlink" title="无返回值"></a>无返回值</h3><p>在Go语言中仅仅一个return并不一定表示无返回值，只能说在一个无返回值的函数中，return表示无返回值函数返回。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 无返回值的话，可以不使用return，或在必要时使用return</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn1</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;这fn1是无返回值函数&quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// 这里的return可有可无，如有需要的话，在必要的时候可以使用return来返回</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fn1() <span class="comment">// 这是函数调用</span></span><br><span class="line">    t := fn1()         <span class="comment">// 这样写的的话是会报错的，因为fn1函数是一个无返回值的，没有返回值可用</span></span><br><span class="line">    fmt.Println(fn1()) <span class="comment">// 这样写也会报错的,无返回值函数是没有返回值可以打印的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="返回一个值"><a href="#返回一个值" class="headerlink" title="返回一个值"></a>返回一个值</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回一个值，没有变量名只有类型。匿名返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn2</span><span class="params">()</span></span> <span class="type">int</span> &#123; <span class="comment">// 只有1个类型时，可以省略返回值的括号</span></span><br><span class="line">    a := <span class="number">111</span></span><br><span class="line">    <span class="keyword">return</span> a + <span class="number">1</span> <span class="comment">// 这里后面的类型和定义的类型匹配就好</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    i := fn2()            <span class="comment">// fn2的返回值112赋值给了定义的i</span></span><br><span class="line">    fmt.Println(fn2(), i) <span class="comment">// 112 112</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回一个值，有变量名和类型。命名返回值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn3</span><span class="params">()</span></span> (r <span class="type">int</span>) &#123; <span class="comment">// r也是局部变量</span></span><br><span class="line">    fmt.Println(r)</span><br><span class="line">    <span class="comment">//r := 666 // := 是在定义</span></span><br><span class="line">    r = <span class="number">666</span></span><br><span class="line">    <span class="keyword">return</span> r + <span class="number">10</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 上面的函数还可以写成下面的形式</span></span><br><span class="line"><span class="comment">//func fn3() (r int) &#123;</span></span><br><span class="line"><span class="comment">//    r = 666</span></span><br><span class="line"><span class="comment">//    r = r - 100</span></span><br><span class="line"><span class="comment">//    // return r</span></span><br><span class="line"><span class="comment">//    return // 相当于return r，如果返回值的标识符就是返回值列表中的标识符，可以省略</span></span><br><span class="line"><span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    r := fn3()</span><br><span class="line">    fmt.Println(fn3(), r)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在go语言中返回值是不允许赋值给一个常量的</p><h3 id="返回多个值"><a href="#返回多个值" class="headerlink" title="返回多个值"></a>返回多个值</h3><p>在go语言中是可以支持多返回值的</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回多个值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn4</span><span class="params">()</span></span> (<span class="type">int</span>, <span class="type">bool</span>) &#123;</span><br><span class="line">    a, b := <span class="number">999</span>, <span class="literal">true</span></span><br><span class="line">    <span class="keyword">return</span> a, b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    i, j := fn4() <span class="comment">// 有两个返回值，所以也需要两个变量来接收这两个返回值</span></span><br><span class="line">    fmt.Println(i, j)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回多个值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn4</span><span class="params">()</span></span> (a <span class="type">int</span>, b <span class="type">bool</span>) &#123;</span><br><span class="line">    x, y := <span class="number">999</span>, <span class="literal">true</span> <span class="comment">// 这里是重新定义两个标识符x的类型是int，y的类型是bool</span></span><br><span class="line">    <span class="keyword">return</span> x, y <span class="comment">// 如果和返回值列表定义的标识符名称和顺序一样，可以省略</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    i, j := fn4()</span><br><span class="line">    fmt.Println(i, j)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回多个值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn4</span><span class="params">()</span></span> (a <span class="type">int</span>, b <span class="type">bool</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="comment">// 这里是返回的a类型的零值和b类型的零值</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    i, j := fn4()</span><br><span class="line">    fmt.Println(i, j)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><b style="color:red">注意:</b></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;os&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回一个值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn5</span><span class="params">()</span></span> (err <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> _, err := os.Open(<span class="string">&quot;E:/test.txt&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> err <span class="comment">// 当上面的&quot;:=&quot;修改成&quot;=&quot;时，这里就可以直接写return就好了，但是上面写的是&quot;:=&quot;的话使用return直接返回的话，调用这个函数运行时就会报错</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 返回多个值</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn5</span><span class="params">()</span></span> (a <span class="type">int</span>, err <span class="type">error</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span> _, err := os.Open(<span class="string">&quot;E:/test.txt&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="comment">// 这样写的话是错误的，因为在上面行代码中err被重新定义了，只能if语句中的使用，这时的返回值err就被覆盖了，这是这里使用return的话就会报错，这里需要修改成return int类型的值 err</span></span><br><span class="line">        <span class="comment">// 一定要记住&quot;:=&quot;这个是定义变量并赋值</span></span><br><span class="line">        <span class="comment">// return 1, err // 使用这个的话语法是正确的</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a, err := fn5()</span><br><span class="line">    fmt.Println(a, err)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>函数返回值的总结：</strong></p><ul><li>可以无返回值或多个返回值（包括一个返回值）</li><li>可以在函数定义中写好返回值参数列表<ul><li>可以没有标识符，只写返回值类型。但是这里要注意有时候这样写的话是不便于代码阅读，也就是你可能不是很清楚这些返回值的含义</li><li>可以和形参一样，写标识符和类型来命名返回值变量，相邻类型相同的话可以合并写(a, b int)</li><li>如果返回值列表中只有一个返回值参数类型，这时返回值列表的小括号可以省略</li><li>返回值参数要么都命名，要么都不要命名，一定要注意不可以混用（一些参数命名，一些不命名）</li></ul></li><li>return<ul><li>return之后的语句都不会被执行，函数将直接结束执行</li><li>如果函数无返回值的话，这时函数体就需要根据实际情况来使用return了</li><li>return后写值的话，需要写和返回值参数类型和个数一致的数据</li><li>return后都不写那么就使用返回值参数列表中的返回参数的值</li></ul></li></ul><h2 id="形式参数"><a href="#形式参数" class="headerlink" title="形式参数"></a>形式参数</h2><ul><li>可以支持无形参，也支持多形参</li><li>是不支持形参的默认值</li><li>要注意形参是局部变量</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn1</span><span class="params">()</span></span> &#123;&#125; <span class="comment">// 无形参</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn2</span><span class="params">(<span class="type">int</span>)</span></span> &#123; <span class="comment">// 这个是有一个int的形参，但是形参要使用的话是要给标识符的，没有给标识符是没法使用的，这样定义的函数形参不推荐使用 函数的类型是func(int)</span></span><br><span class="line">    fmt.Println()</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn3</span><span class="params">(a <span class="type">int</span>)</span></span> &#123; <span class="comment">// 单参函数，有一个int的形参并给了一个标识符a来指代 函数的类型是func(int)</span></span><br><span class="line">    a += <span class="number">100</span></span><br><span class="line">    fmt.Println(a)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn4</span><span class="params">(a <span class="type">int</span>, b <span class="type">string</span>)</span></span> &#123; <span class="comment">// 多参函数，有两个形参a int,b string 函数的类型是func(int, string)</span></span><br><span class="line">    fmt.Println(a, b)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn5</span><span class="params">(a, b <span class="type">int</span>, c <span class="type">string</span>)</span></span> &#123; <span class="comment">// 多参函数，相邻形参的类型相同的话，可以写到一起 这函数的类型是func(int, int, string)</span></span><br><span class="line">    fmt.Println(a, b, c)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fn1()</span><br><span class="line">    fn2(<span class="number">888</span>)</span><br><span class="line">    fn3(<span class="number">10</span>)</span><br><span class="line">    fn4(<span class="number">666</span>, <span class="string">&quot;pxt&quot;</span>)</span><br><span class="line">    fn5(<span class="number">666</span>, <span class="number">999</span>, <span class="string">&quot;zg&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="可变参数"><a href="#可变参数" class="headerlink" title="可变参数"></a>可变参数</h3><p>可变参数variadic，在其他语言中也有类似的被称为剩余参数，但是在go语言中还是有所不同的。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn6</span><span class="params">(nums ...<span class="type">int</span>)</span></span> &#123; <span class="comment">// 可变形参</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]v %d %d\n&quot;</span>, nums, <span class="built_in">len</span>(nums), <span class="built_in">cap</span>(nums))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fn6()              <span class="comment">// []int [] 0 0收集提供的实参放到[]int切片中</span></span><br><span class="line">    fn6(<span class="number">666</span>)           <span class="comment">// []int [666] 1 1</span></span><br><span class="line">    fn6(<span class="number">666</span>, <span class="number">777</span>, <span class="number">888</span>) <span class="comment">// []int [666 777 888] 3 3</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>可变参数是收集实参到一个切片中</li><li>如果形参列表中有可变参数的话，那么可变参数必须位于参数列表的最后。<span style="background-color:gray">func fn7(a, b int, nums …int, z string) {}</span> &#x2F;&#x2F; 要注意这样写的话是错误的，形参列表中有可变参数的话需要将可变参数放到形参列表的最后</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn7</span><span class="params">(a, b <span class="type">int</span>, nums ...<span class="type">int</span>)</span></span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%d %d; %T %[3]v %d %d %p %p\n&quot;</span>, a, b, nums, <span class="built_in">len</span>(nums), <span class="built_in">cap</span>(nums), &amp;nums, &amp;nums[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fn7(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>)         <span class="comment">// 10 20; []int [30] 1 1 0xc0000080a8 0xc00001a0f8</span></span><br><span class="line">    fn7(<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>) <span class="comment">// 10 20; []int [30 40 50] 3 3 0xc0000080d8 0xc000010138</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="切片传递"><a href="#切片传递" class="headerlink" title="切片传递"></a>切片传递</h3><p>也可以使用切片传递给可变参数，这个功能和其他语言中的参数解构很像，但是有不完全一样。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn4</span><span class="params">(a, b <span class="type">int</span>)</span></span> &#123;&#125; <span class="comment">// 多参函数</span></span><br><span class="line"></span><br><span class="line">p := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>&#125;</span><br><span class="line">fn4(p...) <span class="comment">// 错误的，在go语言中是不允许这样的，不能用在非可变参数non-variadic上</span></span><br></pre></td></tr></table></figure><p><strong>底层原理</strong></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn6</span><span class="params">(nums ...<span class="type">int</span>)</span></span> &#123; <span class="comment">// 可变形参</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;nums: %T %[1]v %d %d %p %p\n&quot;</span>, nums, <span class="built_in">len</span>(nums), <span class="built_in">cap</span>(nums), &amp;nums, &amp;nums[<span class="number">0</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;a: %T %[1]v %d %d %p %p\n&quot;</span>, a, <span class="built_in">len</span>(a), <span class="built_in">cap</span>(a), &amp;a, &amp;a[<span class="number">0</span>])</span><br><span class="line">    fn6(a...)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">运行结果如下：</span><br><span class="line">a: []<span class="type">int</span> [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">3</span> <span class="number">3</span> <span class="number">0xc000008078</span> <span class="number">0xc000010120</span>   </span><br><span class="line">nums: []<span class="type">int</span> [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">3</span> <span class="number">3</span> <span class="number">0xc0000080a8</span> <span class="number">0xc000010120</span></span><br></pre></td></tr></table></figure><p>从上面的结果来看，可以得到这种方式并不是把a切片分解了，然后传递给fn6函数，在封装成一个新的切片nums。这里是相当于切片中的header的复制。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">fn7</span><span class="params">(x, y <span class="type">int</span>, nums ...<span class="type">int</span>)</span></span> &#123; <span class="comment">// 可变形参</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%d %d; %T %[3]v %d %d\n&quot;</span>, x, y, nums, <span class="built_in">len</span>(nums), <span class="built_in">cap</span>(nums))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;</span><br><span class="line">    <span class="comment">//fn7(a...) // 这在go语言是不可以的，原因就是切片...只能为可变参数传参，是不可以为非可变参数传参的。</span></span><br><span class="line">    <span class="comment">//fn7(1, a...) // 也是错误的，不能使用普通参数上</span></span><br><span class="line">    <span class="comment">//fn7(1, 2, 3, a...) // 也是错误的语法，不能用2中方式为可变参数传参，两种方式不能混用</span></span><br><span class="line">    <span class="comment">//fn7(1,2,[]int&#123;10,20&#125;...,a...) // 也会报错，不能连续使用切片...对可变参数传参，用一个就可以了</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 正确的语法</span></span><br><span class="line">    fn7(<span class="number">1</span>, <span class="number">2</span>, []<span class="type">int</span>&#123;<span class="number">666</span>, <span class="number">777</span>, <span class="number">888</span>&#125;...)</span><br><span class="line">    fn7(<span class="number">3</span>, <span class="number">4</span>, a...)</span><br><span class="line">    fn7(<span class="number">5</span>, <span class="number">6</span>, <span class="number">40</span>, <span class="number">50</span>, <span class="number">60</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">输出结果如下：</span><br><span class="line"><span class="number">1</span> <span class="number">2</span>; []<span class="type">int</span> [<span class="number">666</span> <span class="number">777</span> <span class="number">888</span>] <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">3</span> <span class="number">4</span>; []<span class="type">int</span> [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">3</span> <span class="number">3</span></span><br><span class="line"><span class="number">5</span> <span class="number">6</span>; []<span class="type">int</span> [<span class="number">40</span> <span class="number">50</span> <span class="number">60</span>] <span class="number">3</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>从上面的代码中可以看出，可变参数在go语言限制较多</p><ul><li>直接提供对应的实参，这时会封装成一个新的切片</li><li>可以使用切片传递的方式”切片…”，但是这种方式只能单独为可变参数提供传参，使用切片传递的方式实际上是对切片的header复制</li></ul><p>在这里和Python、JavaScript中的参数解构不一样，也确实没有它们那边的灵活方便。</p><p><strong>问题：</strong></p><p>func fn6(nums []int) {} 和 func fn6(nums …int) {} 调用时，都可以使用切片，那有什么区别呢？形参使用切片类型还是可变参数呢？</p><blockquote><p>func fn6(nums []int) {}</p><p>上面函数可以使用fn6([]int{10, 20})一种传参方式，也就是只能传入一个[]int的切片，这里也可以定义[]int类型的切片指定一个标识符，在函数调用时使用这个标识符作为实参传入。这里的本质是切片的header的复制</p></blockquote><blockquote><p>func fn6(nums …int) {}</p><p>这个函数的话可以fn6([]int{10, 20}…)和fn6(10, 20)这两种传参的方式。在使用切片传递的时候本质也是在复制切片的header</p></blockquote><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2><p>定义一个函数的话会开一个局部的作用域，其中定义的标识符仅只能函数中使用，也可以称为标识符在函数中的可见范围。我们把这种对标识符的约束可见范围，称为<strong>作用域</strong>。</p><h3 id="语句块的作用域"><a href="#语句块的作用域" class="headerlink" title="语句块的作用域"></a>语句块的作用域</h3><p>在if、for、switch等语句中使用了短格式定义的变量，可以认为定义的变量就是该语句块中的局部变量，作用域的话仅在改语句块中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">    fmt.Println(i, v) <span class="comment">// 这里的i,v只能在for语句块中可见</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(i, v) <span class="comment">// 在for语句块外面没有定义i,v，这时想要打印i,v的话是会报错的</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> f, err := os.Open(<span class="string">&quot;E:/test.txt&quot;</span>); err != <span class="literal">nil</span> &#123;</span><br><span class="line">    fmt.Println(f, err) <span class="comment">// 这里f,err只能在if语句块中使用，在if语句块外面就可以使用了</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(f, err) <span class="comment">// 这里f,err的在if语句块外是不可见的</span></span><br></pre></td></tr></table></figure><p>注意：switch、select语句中的每个子句都被视为一个隐式的代码块。</p><h3 id="显示的块作用域"><a href="#显示的块作用域" class="headerlink" title="显示的块作用域"></a>显示的块作用域</h3><p>在任何一个大括号中定义的标识符，其作用域只能在这对大括号里面中使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 块作用域</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">const</span> a = <span class="number">10</span></span><br><span class="line">    <span class="keyword">var</span> b = <span class="number">20</span></span><br><span class="line">    c := <span class="number">30</span></span><br><span class="line">    fmt.Println(a, b, c) <span class="comment">// 这里的a, b, c只能在这个&#123;&#125;大括号里面使用，出了这个&#123;&#125;大括号要使用的话就没法使用</span></span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(a, b, c) <span class="comment">// 错误的，&#123;&#125;块外不可见</span></span><br></pre></td></tr></table></figure><h3 id="universe块"><a href="#universe块" class="headerlink" title="universe块"></a>universe块</h3><p>宇宙块，也就是全局快，不过是语言内建的。预定义的标识符就在这个全局环境中，因此bool、int、nil、true、false、iota、append等等标识符全局可见，随处可用。</p><h3 id="包块"><a href="#包块" class="headerlink" title="包块"></a>包块</h3><p>每一个package包含了该包所有的源文件，形成的作用域。在包中顶层代码定义标识符的话，这也称为全局标识符。</p><p>所有包内定义的全局标识符，在这个包内可见。如果包的顶层代码中标识符首字母大写则导出，这样的话包外可见，使用时也要加上包名。例如<strong>fmt.Print()</strong></p><h3 id="函数块"><a href="#函数块" class="headerlink" title="函数块"></a>函数块</h3><p>函数声明的时候使用了花括号，所以整个函数体就是显示的代码块。这个函数就是一个块作用域。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在定义包级常量、变量时，只能使用const、var来定义</span></span><br><span class="line"><span class="keyword">const</span> A = <span class="number">10</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> (</span><br><span class="line">    b = <span class="number">20</span></span><br><span class="line">    c = <span class="number">30</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">//d := 40 // 注意短格式定义，只能用在局部作用域中</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">showB</span><span class="params">()</span></span> <span class="type">int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> b</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    fmt.Println(<span class="number">1</span>, A) <span class="comment">// 这里的A是指的是包内的全局常量</span></span><br><span class="line">    <span class="comment">//fmt.Println(1.1, &amp;A) // 这里要注意常量是不可以寻址的，常量是不可变的，在各种语言编译器中都会对常量区别对待，这也就是对常量的保护</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> A = <span class="number">100</span>           <span class="comment">// 这里是在函数块内重新定义了一个变量A，函数调用时会产生在栈帧上</span></span><br><span class="line">    fmt.Println(<span class="number">2</span>, A, &amp;A) <span class="comment">// 这里是可以访问地址的，这里用的是函数内定义的局部变量A，这里取得地址是在栈帧中的占用地址</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="number">3</span>, b, &amp;b)</span><br><span class="line">    b = <span class="number">200</span> <span class="comment">// 注意这里是赋值语句，而不是重新定义，这里只是修改了保内全局变量b的值</span></span><br><span class="line">    fmt.Println(<span class="number">3.1</span>, b, &amp;b)</span><br><span class="line">    b := <span class="number">201</span> <span class="comment">// :=这个是短格式定义，这样定义的话这个b就成了当前函数中的局部变量，是在栈帧上的</span></span><br><span class="line">    fmt.Println(<span class="number">3.2</span>, b, &amp;b)</span><br><span class="line">    fmt.Println(<span class="number">3.3</span>, b, showB()) <span class="comment">// 3.3 201 200</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    x := <span class="number">888</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">const</span> j = <span class="string">&#x27;Z&#x27;</span></span><br><span class="line">        <span class="keyword">var</span> k = <span class="string">&quot;pxt&quot;</span></span><br><span class="line">        t := <span class="literal">true</span></span><br><span class="line">        A = <span class="number">1000</span></span><br><span class="line">        b := <span class="number">2000</span></span><br><span class="line">        fmt.Println(<span class="number">4</span>, A, b, c, j, k, t) <span class="comment">// 4 1000 2000 30 90 pxt true</span></span><br><span class="line">        fmt.Println(<span class="number">4.3</span>, x)              <span class="comment">// 4.3 888</span></span><br><span class="line">        x := <span class="number">999</span></span><br><span class="line">        &#123;</span><br><span class="line">            x := <span class="number">666</span></span><br><span class="line">            fmt.Println(<span class="number">4.1</span>, A, b, c, j, k, t, x) <span class="comment">// 4.1 1000 2000 30 90 pxt true 666</span></span><br><span class="line">        &#125;</span><br><span class="line">        fmt.Println(<span class="number">4.2</span>, x) <span class="comment">// 4.2 999</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fmt.Println(j, k, t) // j, k, t块外不可见</span></span><br><span class="line">    fmt.Println(A, b) <span class="comment">// 1000 201</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i, v := <span class="keyword">range</span> []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125; &#123;</span><br><span class="line">        fmt.Println(i, v)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//fmt.Println(i, v) // 注意i, v在这个for语句块外是不可见的，它们的作用域是在这个for循环语句块里面</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>标识符作用域总结</strong></p><ul><li>标识符对外不可见，在标识符定义所在作用域外是看不到标识符的（对外不可见）</li><li>使用标识符，自己这一层定义的标识符优先，如果没有，就向外层找同名标识符–（就近原则，由近及远）</li><li>标识符对内可见，在内部的局部作用域中，可以使用外部定义的标识符（向内穿透）</li><li>包级标识符<ul><li>在定义包级标识符的包内，都可见</li><li>跨包访问，包级标识符必须以大写开头，才可以导出到包外，可以在包外使用<strong>xx包名.VarName</strong>方式来访问。例如<strong>fmt.Print()</strong></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang-列表list</title>
      <link href="/post/1e8911bc.html"/>
      <url>/post/1e8911bc.html</url>
      
        <content type="html"><![CDATA[<h1 id="Golang列表（list）"><a href="#Golang列表（list）" class="headerlink" title="Golang列表（list）"></a>Golang列表（list）</h1><p>在Golang中list是一个双向链表实现的，可以用来存储任意类型的元素。</p><h2 id="list创建和初始化"><a href="#list创建和初始化" class="headerlink" title="list创建和初始化"></a>list创建和初始化</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个字符串list</span></span><br><span class="line">l := list.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 list</span></span><br><span class="line">l.PushBack(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;two&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;three&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="list添加元素"><a href="#list添加元素" class="headerlink" title="list添加元素"></a>list添加元素</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个字符串list</span></span><br><span class="line">l := list.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 list</span></span><br><span class="line">l.PushBack(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;two&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;three&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在list中添加元素，可以使用l.PushBack(v any)和l.PushFront(v any)方式来添加元素到list</span></span><br><span class="line">l.PushBack(<span class="string">&quot;four&quot;</span>) <span class="comment">// 在尾部增加元素</span></span><br><span class="line">l.PushFront(<span class="string">&quot;zero&quot;</span>) <span class="comment">// 在首部增加元素</span></span><br><span class="line"></span><br><span class="line">fmt.Println(l.Len()) <span class="comment">// 获取当前list的长度</span></span><br></pre></td></tr></table></figure><h2 id="list删除元素"><a href="#list删除元素" class="headerlink" title="list删除元素"></a>list删除元素</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个字符串list</span></span><br><span class="line">l := list.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 list</span></span><br><span class="line">l.PushBack(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;two&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;three&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除list元素</span></span><br><span class="line">l.Remove(l.Front().Next()) <span class="comment">// 从头部删除list元素</span></span><br><span class="line">l.Remove(l.Back().Prev()) <span class="comment">// 从尾部删除list元素</span></span><br></pre></td></tr></table></figure><h2 id="list的遍历"><a href="#list的遍历" class="headerlink" title="list的遍历"></a>list的遍历</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 创建一个字符串list</span></span><br><span class="line">l := list.New()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化 list</span></span><br><span class="line">l.PushBack(<span class="string">&quot;one&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;two&quot;</span>)</span><br><span class="line">l.PushBack(<span class="string">&quot;three&quot;</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(l.Len())</span><br><span class="line"></span><br><span class="line"><span class="comment">// 遍历打印 list</span></span><br><span class="line"><span class="keyword">for</span> e := l.Front(); e != <span class="literal">nil</span>; e = e.Next() &#123;</span><br><span class="line">    fmt.Println(e.Value)</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 倒着遍历打印 list</span></span><br><span class="line"><span class="keyword">for</span> e := l.Back(); e != <span class="literal">nil</span>; e = e.Prev() &#123;</span><br><span class="line">    fmt.Println(e.Value)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang哈希表与排序</title>
      <link href="/post/29419984.html"/>
      <url>/post/29419984.html</url>
      
        <content type="html"><![CDATA[<h1 id="哈希表（map）与排序"><a href="#哈希表（map）与排序" class="headerlink" title="哈希表（map）与排序"></a>哈希表（map）与排序</h1><h2 id="Map（映射，字典）"><a href="#Map（映射，字典）" class="headerlink" title="Map（映射，字典）"></a>Map（映射，字典）</h2><p>映射Map，也有语言称为字典</p><ul><li>长度可变</li><li>存储的元素时key-value（键值对），value是可变的</li><li>key是无序不重复的，相同的key会去重</li><li>不是线性表，是无序的，就不可以使用索引，要访问的话是通过key来访问的</li><li><strong>不支持零值可用，也就是说，定义时必须使用make或字面常量构造</strong></li><li>是引用类型，有一个标头值指向了底层的hash表</li><li>哈希表</li></ul><h3 id="哈希表"><a href="#哈希表" class="headerlink" title="哈希表"></a>哈希表</h3><ul><li>map是在go语言中的实现</li><li>存储kv对，一个kv对称为一个元素，键值对entry、item</li><li>len 表示元素的个数，即kv对的个数；cap不能使用</li><li>key 是不可以重复的，无序的<ul><li>key按照某种先后顺序加入到map中，但是从哈希表中看不出顺序来</li><li>key是关键，还有唯一的意思</li><li>相同key会去重</li><li>无序<ul><li>例如 x、y 如果用序列（线性表）表达，这里可以认为x是y的前驱，y是x的后继</li><li>在hash table中，x、y如果认为是key的话，是不认为有前后依赖关系，认为是不一样的独立的不同的key，当然在物理存储上，也就是在空间中相对位置不确定</li></ul></li></ul></li><li>不是线性表，是无序的，不能使用索引</li><li>是引用类型<ul><li>有一个标头值</li><li>有一个指针指向底层的hash表</li></ul></li><li>不支持零值可用</li><li>高效的，依赖于key，用空间换时间</li></ul><h3 id="哈希表原理"><a href="#哈希表原理" class="headerlink" title="哈希表原理"></a>哈希表原理</h3><p>内存是线性编址的，容器都要划分格子（存储单元），每个存储单元占用的字节数一样多</p><p>hash(key) &#x3D;&gt; 存储单元房间号，每个通过一个简单的固定步数计算的公式就可以定位存储的内存地址对应的空间，但是有可能会出现hash冲突</p><ul><li>开地址法解决hash冲突：将冲突的kv对分配其他的地址</li><li>拉链法解决hash冲突：在对应冲突的地址空间中，使用链表，将kv对存储到链表中，尾部追加</li><li>查询<ul><li>用key查询，hash(key)算出内存地址，步骤是固定的四则运算，时间复杂度O(1)</li><li>map应该使用key来查询才是最有效率的</li></ul></li><li>问题<ul><li>1、如果冲突多了会怎么样<ul><li>冲突多了，每个对应的内存空间里面都存放着多个kv对，x多y少，性能低下，超过负载因子（0.7~0.8），就需要扩容y</li><li>不管什么容器，扩容慎重，最好在用之前能估算出大概数据规模</li></ul></li><li>2、什么是冲突的key，什么是相同的key？hash值相同key就相同吗？<ul><li>同一个key一定得到相同的hash值，冲突的key也就是hash值是相同的</li><li>相同的key就是key值是相同的</li><li>hash值相同时，key值不一定相同</li></ul></li></ul></li></ul><h3 id="哈希算法"><a href="#哈希算法" class="headerlink" title="哈希算法"></a>哈希算法</h3><p>哈希Hash算法的特征：</p><ul><li>y &#x3D; hash(x)，给定一个x一定可以得到一个固定的y值</li><li>x是输入，x的取值范围称为输入空间，x是任意值，x是任意长度（在go语言中字节序列）</li><li>y是输出，y的取值范围称为输出空间，但是输出的内容是固定长度的（字节序列长度固定）</li><li>hash函数一般设计的计算效率是很高的</li><li>输入是无穷个，但是固定字节的输出却能表示状态是有限个的，有可能不同的x经过hash得到同样的y，<strong>这样的话称为碰撞，也称为冲突，解决冲突的方法为开地址法或拉链法</strong></li><li>不同的x计算出的y值应当在输出空间中是分布均匀，为了减少碰撞</li><li>不能由y反推出x，单向散列算法，hash算法不可逆</li><li>x的一个微小变化，哪怕是一个bit位的变化，也将引起结果y的巨大变化</li></ul><p>常见的算法：</p><ul><li>SHA（Secure Hash Algorithm）安全散列算法，包含一个系列算法，分别是SHA-1、SHA-224、SHA-256、SHA-384，和SHA-512。比较常用的是SHA-256<ul><li>多半用于数字签名防篡改</li></ul></li><li>MD5（Message Digest Algorithm 5）信息摘要算法5，输出是128位，运算速度较SHA-1快<ul><li>用户密码存储</li><li>上传、下载文件的完整性效验</li><li>大的数据快速比对，例如字段很大，增加一个字段存储该字段的hash值，对比内容是否被修改</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;crypto/md5&quot;</span></span><br><span class="line">    <span class="string">&quot;crypto/sha256&quot;</span></span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    h := md5.New() <span class="comment">// 128位 /8 =  16字节</span></span><br><span class="line">    h.Write([]<span class="type">byte</span>(<span class="string">&quot;123456&quot;</span>))</span><br><span class="line">    r := md5.Sum(<span class="literal">nil</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%x len=%d\n&quot;</span>, r, <span class="built_in">len</span>(r))</span><br><span class="line">    <span class="comment">// 输出 16个字节 d4位指的是一个字节 8位</span></span><br><span class="line">    <span class="comment">// d41d8cd98f00b204e9800998ecf8427e len=16</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// https://pkg.go.dev/crypto/sha256#example-New</span></span><br><span class="line">    h1 := sha256.New()      <span class="comment">// 256位/8 = 32字节</span></span><br><span class="line">    h1.Write([]<span class="type">byte</span>(<span class="string">&quot;pxt&quot;</span>)) <span class="comment">// 提供字节流</span></span><br><span class="line">    r1 := h1.Sum(<span class="literal">nil</span>)</span><br><span class="line">    s := fmt.Sprintf(<span class="string">&quot;%x&quot;</span>, r1) <span class="comment">// 把字节序列r的每个字节以16进制来显示</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%s len=%d\n&quot;</span>, s, <span class="built_in">len</span>(r1))</span><br><span class="line">    <span class="comment">// 输出：</span></span><br><span class="line">    <span class="comment">// 54a7726e46dfcc17d941e195b42ffbe04478b55bfa9a2b83324366e3de781772 len=32</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h3><p>Map是采用的哈希表实现的。go语言中的map类型也是引用类型，有一个标头值hmap，指向的是底层的哈希表。</p><p>哈希表Hash Table</p><ul><li>可以简单理解公式为y &#x3D; hash(x)</li><li>内存是线性编址的，需要开辟一块内存空间，分割出一个个”房间”，这个房间也就是称为bucket桶，按照y值为”房间”编号</li><li>使用给出的x计算出对应的y值，可以按照某种关系计算出数据将被存储到的“房间号码”，再将数据存入该房间</li><li>即使是hash函数设计的再好，数据分布均匀，但是存储的数据很多(超过负载因子)，则需要扩容，否则的话再加入数据，冲突就会越来越多，这样就会引起效率的低下</li></ul><p>理解hash函数的原理，我们可以用除留取余法来思考，即hash(x) &#x3D; key % p，p是hash表大小，可以看做房间的个数。</p><p>hash(x0) &#x3D;&gt; Roomk ，计算出一个确定的房间号码。</p><p>hash冲突</p><ul><li>当房间有人占了，就重新找个空房间让客人住，这也就是开地址法</li><li>当房间有人占了，就挤在同一个房间内，将值用链表存储在一起，这就是链地址法，也称为拉链法，Go语言中是采用的是拉链法，但是是有些改进的</li></ul><h3 id="构造"><a href="#构造" class="headerlink" title="构造"></a>构造</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 1、定义一个nil的map</span></span><br><span class="line"><span class="keyword">var</span> m0 <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span> <span class="comment">// 定义一个map为nil,这样很危险，map中零值不可用</span></span><br><span class="line">fmt.Println(m0, m0 == <span class="literal">nil</span>)</span><br><span class="line">m0[<span class="string">&quot;a&quot;</span>] = <span class="number">100</span>   <span class="comment">// 这里语法是有问题的，map中零值不可用</span></span><br><span class="line">fmt.Println(m0) <span class="comment">// 这时就会报panic：assignment to entry in nil map</span></span><br><span class="line"><span class="comment">// 对切片为空值时添加，但是在切片里是可以对nil的切片进行append元素的</span></span><br><span class="line"><span class="keyword">var</span> s0 []<span class="type">int</span></span><br><span class="line">fmt.Println(s0, s0 == <span class="literal">nil</span>)</span><br><span class="line">s0 = <span class="built_in">append</span>(s0, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>) <span class="comment">// nil 切片，这里append时会帮我们构建一个底层数据</span></span><br><span class="line">fmt.Println(s0)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2、字面量定义map</span></span><br><span class="line"><span class="keyword">var</span> m1 = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;&#125; <span class="comment">// 这里语法是正确的，只是没有一个kv对而已，可以对这个map添加kv对，这样定义会有一个较小的起始空间大小</span></span><br><span class="line"><span class="keyword">var</span> m2 = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123; <span class="comment">// 字面量批量定义map时，&#123;&#125;花括号里面的kv对用逗号结尾，再写下一个kv对</span></span><br><span class="line">    <span class="string">&quot;a&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">&quot;b&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;c&quot;</span>: <span class="number">30</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m1, m2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3、使用make定义map</span></span><br><span class="line">m3 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>) <span class="comment">// 这里表示没有告诉未来容纳多少元素，先开辟较小的空间，如果kv对较多的话，可能会出现频繁的扩容</span></span><br><span class="line">m4 := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>,<span class="number">100</span>) <span class="comment">// 这里指的是已经告诉了未来可以容纳多少元素，先开辟好合适的空间来存储这些kv对，要注意一般空间大小要比元素个数要大很多，这样定义为了减少后面的空间扩容</span></span><br></pre></td></tr></table></figure><h3 id="Map的CURD"><a href="#Map的CURD" class="headerlink" title="Map的CURD"></a>Map的CURD</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 新增或修改</span></span><br><span class="line"><span class="keyword">var</span> m5 = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;<span class="string">&quot;a&quot;</span>: <span class="number">10</span>&#125;</span><br><span class="line">fmt.Println(m5, m5 == <span class="literal">nil</span>)</span><br><span class="line">m5[<span class="string">&quot;a&quot;</span>] = <span class="number">666</span> <span class="comment">// map中的key是不可以重复的，已经有了key是&quot;a&quot;，则会覆盖之前的value</span></span><br><span class="line">m5[<span class="string">&quot;b&quot;</span>] = <span class="number">999</span> <span class="comment">// 当key不存在的话，这时就会创建一个新的kv对</span></span><br><span class="line">fmt.Println(m5)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查找</span></span><br><span class="line"><span class="keyword">var</span> m6 = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;</span><br><span class="line">    <span class="string">&quot;a&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">&quot;b&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;c&quot;</span>: <span class="number">30</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(m6[<span class="string">&quot;a&quot;</span>]) <span class="comment">// 存在的话就返回存在的key的值</span></span><br><span class="line">fmt.Println(m6[<span class="string">&quot;z&quot;</span>]) <span class="comment">// 不存在的话就返回零值，这样不能判断&quot;z&quot;这个key是否存在，需要解析一下这个返回值</span></span><br><span class="line"><span class="keyword">if</span> v, ok := m6[<span class="string">&quot;z&quot;</span>]; !ok &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;不存在的key返回值&quot;</span>, v)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;存在的key返回值&quot;</span>, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 移除</span></span><br><span class="line"><span class="keyword">var</span> m7 = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;</span><br><span class="line">    <span class="string">&quot;a&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">&quot;b&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;c&quot;</span>: <span class="number">30</span>,</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(m7)) <span class="comment">// 返回kv对的个数</span></span><br><span class="line"><span class="built_in">delete</span>(m7, <span class="string">&quot;a&quot;</span>)      <span class="comment">// key存在的话就删除kv对</span></span><br><span class="line"><span class="built_in">delete</span>(m7, <span class="string">&quot;z&quot;</span>)      <span class="comment">// 删除不存在key不报错,这操作也不会引起panic</span></span><br><span class="line">fmt.Println(m7)</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(m7))</span><br></pre></td></tr></table></figure><h3 id="长度和遍历"><a href="#长度和遍历" class="headerlink" title="长度和遍历"></a>长度和遍历</h3><p>注意：</p><ul><li>由于map的特殊构造，是不能使用cap来查看容量的</li><li>map的key是无序的，千万不要从遍历结果来推测其内部的顺序</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Map的遍历(只能使用for range来遍历),因为map的key是无序的，没办法使用for索引遍历</span></span><br><span class="line"><span class="keyword">var</span> m8 = <span class="keyword">map</span>[<span class="type">string</span>]<span class="type">int</span>&#123;</span><br><span class="line">    <span class="string">&quot;a&quot;</span>: <span class="number">10</span>,</span><br><span class="line">    <span class="string">&quot;b&quot;</span>: <span class="number">20</span>,</span><br><span class="line">    <span class="string">&quot;c&quot;</span>: <span class="number">30</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k, v := <span class="keyword">range</span> m8 &#123;</span><br><span class="line">    fmt.Println(k, v)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(m8)) <span class="comment">// kv对的个数</span></span><br></pre></td></tr></table></figure><h2 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h2><p>Go的标准库中提供了sort库，用于给线性数据结构排序、二分法查找，但是要注意排序很耗时，尽量少用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;sort&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 排序(升序)</span></span><br><span class="line">    a1 := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">45</span>, <span class="number">89</span>, <span class="number">-5</span>, <span class="number">-1</span>&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>]) <span class="comment">// [10 45 89 -5 -1] 0xc000008078 0xc00000e360</span></span><br><span class="line">    sort.Ints(a1)                             <span class="comment">// 就地排序，默认是为升序，只要是排序，梦想都想使用O(n)，梦想遍历一遍就搞定排序。排序是非常耗时的</span></span><br><span class="line">    sort.Sort(sort.IntSlice(a1))              <span class="comment">// 这个语法和上面的sort.Ints(s)是一样的，sort.IntSlice(a)强制类型转换以施加接口方法</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>]) <span class="comment">// [-5 -1 10 45 89] 0xc000008078 0xc00000e360</span></span><br><span class="line"></span><br><span class="line">    a2 := []<span class="type">string</span>&#123;<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;aBf&quot;</span>, <span class="string">&quot;xyh&quot;</span>, <span class="string">&quot;123&quot;</span>, <span class="string">&quot;xxV&quot;</span>&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a2, &amp;a2, &amp;a2[<span class="number">0</span>]) <span class="comment">// [abc aBf xyh 123 xxV] 0xc0000080f0 0xc000050050</span></span><br><span class="line">    sort.Strings(a2)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a2, &amp;a2, &amp;a2[<span class="number">0</span>]) <span class="comment">// [123 aBf abc xxV xyh] 0xc0000080f0 0xc000050050</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 排序(降序)</span></span><br><span class="line">    sort.Sort(sort.Reverse(sort.IntSlice(a1))) <span class="comment">// 就地排序</span></span><br><span class="line">    fmt.Println(a1)                            <span class="comment">// [89 45 10 -1 -5]</span></span><br><span class="line">    sort.Sort(sort.Reverse(sort.StringSlice(a2)))</span><br><span class="line">    fmt.Println(a2) <span class="comment">// [xyh xxV abc aBf 123]</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二分法查找</span></span><br><span class="line">    a3 := []<span class="type">int</span>&#123;<span class="number">5</span>, <span class="number">46</span>, <span class="number">25</span>, <span class="number">-3</span>, <span class="number">65</span>&#125;</span><br><span class="line">    sort.Ints(a3)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 二分查找，必须是要升序</span></span><br><span class="line">    <span class="comment">// 二分法查找的前提是已经排过序了，而且还是升序</span></span><br><span class="line">    fmt.Println(a3) <span class="comment">// [-3 5 25 46 65]</span></span><br><span class="line">    a4 := sort.SearchInts(a3, <span class="number">99</span>)</span><br><span class="line">    fmt.Println(a4) <span class="comment">// 5</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang字符串</title>
      <link href="/post/50cf42f9.html"/>
      <url>/post/50cf42f9.html</url>
      
        <content type="html"><![CDATA[<h1 id="Golang字符串"><a href="#Golang字符串" class="headerlink" title="Golang字符串"></a>Golang字符串</h1><h2 id="ASCII表"><a href="#ASCII表" class="headerlink" title="ASCII表"></a>ASCII表</h2><p>ASCII（American Standard Code for Information Interchange，美国信息交换标准代码）是基于拉丁字符的一套字节编码系统</p><p><img src="/images/ASCII%E8%A1%A8.png"></p><p>注意要熟记下面表格中的特殊字符</p><table><thead><tr><th>序号</th><th>转义字符</th><th>十进制数</th><th>备注</th></tr></thead><tbody><tr><td>1</td><td>\x00</td><td>0</td><td>null字符，是表中的第一项，在C语言中是字符串的结束符</td></tr><tr><td>2</td><td>\x09或\t</td><td>9</td><td>制表符tab</td></tr><tr><td>3</td><td>\x0a或\n</td><td>10</td><td>换行</td></tr><tr><td>4</td><td>\x0d或\r</td><td>13</td><td>回车</td></tr><tr><td>5</td><td>\x30 ~ \x39</td><td>48~57</td><td>字符0~9</td></tr><tr><td>6</td><td>\x31</td><td>49</td><td>字符1</td></tr><tr><td>7</td><td>\x41</td><td>65</td><td>字符A</td></tr><tr><td>8</td><td>\x61</td><td>97</td><td>字符a</td></tr><tr><td>9</td><td>\x20</td><td>32</td><td>空格</td></tr></tbody></table><p>UTF-8、GKB都兼容了ASCII，Unicode又包括了ASCII</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&quot;a\x09b\x0ac \x31\x20\x41\x61&quot; 表示什么？</span><br><span class="line">表示为&quot;a\tb\nc  1空格Aa&quot;</span><br><span class="line"></span><br><span class="line">&#x27;A&#x27; &gt; &#x27;a&#x27;   谁大？字符比较</span><br><span class="line">false，这里&#x27;a&#x27;要比&#x27;A&#x27;大，是去查Unicode码点后再来比较的。</span><br><span class="line"></span><br><span class="line">&quot;a&quot; &gt; &quot;A&quot;   谁大？字符串比较</span><br><span class="line">true，这里&quot;a&quot;要比&quot;A&quot;大，在字符串里面比较的话是先比较第一个字符的大小，也是去查Unicode码点后再来比较的。</span><br><span class="line"></span><br><span class="line">&quot;AA&quot; &gt; &quot;Aa&quot; 谁大？</span><br><span class="line">false，这里的&quot;Aa&quot;要比&quot;AA&quot;大，这里先比较第一个字符的大小，如果第一个字符的大小相等就比较下一个字符大小，直到比出大小就结束比较，后面的字符就可以不用比较了。</span><br></pre></td></tr></table></figure><h2 id="字符"><a href="#字符" class="headerlink" title="字符"></a>字符</h2><p>本质上来说，计算机中的一切都是字节，字符串也是多个字节组合而成的，就是多个字节形成的有序序列。但是对于多字节编码的中文来说，用一个字节描述不了，需要多个字节表示一个字符，Go提供了rune类型。</p><ul><li>byte：兼容ASCII码的字符，是byte类型，即uint8的别名，占用1个字节</li><li>rune：汉字等字符，Unicode编码，是rune类型的，即int32的别名，占用4个字节</li><li>一个字符字面常量用单引号引起来</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">c := <span class="string">&#x27;张&#x27;</span>       <span class="comment">// 2个字节就可以放得下，rune是占用4个字节</span></span><br><span class="line">fmt.Println(c) <span class="comment">// unicode 码点</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%c\n&quot;</span>, c)</span><br><span class="line">d := <span class="string">&quot;张&quot;</span> <span class="comment">// 3个字节，UTF-8编码的码点，中文占用3个字节，英文占用1个字节</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, d)</span><br></pre></td></tr></table></figure><p>字符串与byte序列、rune序列转换</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    s1 := <span class="string">&quot;abc&quot;</span>                   <span class="comment">// 3字节 &quot;\x61\x62\x63&quot;</span></span><br><span class="line">    s2 := <span class="string">&quot;测试&quot;</span>                    <span class="comment">// 6个字节，字符串中使用的是UTF-8编码，其中的一个汉字占用3个字节</span></span><br><span class="line">    fmt.Println(<span class="built_in">len</span>(s1), <span class="built_in">len</span>(s2)) <span class="comment">// len对应字符串的话是取的字符串中的所有字符所占的字节数，这样是len(s1)为3,len(s2)为6</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 注意[]byte表示的是字节序列，[]rune表示的是rune(int32)序列</span></span><br><span class="line">    <span class="comment">// string =&gt; []byte    最常用， string =&gt; []rune</span></span><br><span class="line">    fmt.Println([]<span class="type">byte</span>(s1)) <span class="comment">// string =&gt; []byte []uint8 十六进制表示[0x61 0x62 0x63] 十进制表示[97 98 99]</span></span><br><span class="line">    fmt.Println([]<span class="type">rune</span>(s1)) <span class="comment">// string =&gt; []rune []int32 [97 98 99]</span></span><br><span class="line"></span><br><span class="line">    fmt.Println([]<span class="type">byte</span>(s2))             <span class="comment">// string =&gt; []byte UTF-8中的中文字体一个占用3个字节这里也就是6个字节，长度也就为6 [230 181 139 232 175 149]</span></span><br><span class="line">    fmt.Println([]<span class="type">rune</span>(s2))             <span class="comment">// string =&gt; []rune 2个元素 [27979 35797] 这里的每个字符从UTF-8 &gt; Unicode码点</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%x %x\n&quot;</span>, <span class="number">27979</span>, <span class="number">35797</span>) <span class="comment">// 27979=6d4b 35797=8bd5 要加上0x前缀的话就将 %x 换成 %#x 格式符</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// []byte =&gt; string 常用的， []rune =&gt; string</span></span><br><span class="line">    fmt.Println(<span class="type">string</span>([]<span class="type">byte</span>&#123;<span class="number">49</span>, <span class="number">0x61</span>, <span class="number">65</span>&#125;)) <span class="comment">// 转成字符串为&quot;1aA&quot;,这里要注意进制问题别看错了</span></span><br><span class="line">    fmt.Println(<span class="type">string</span>([]<span class="type">rune</span>&#123;<span class="number">27979</span>, <span class="number">35797</span>&#125;)) <span class="comment">// rune是使用的Unicode，但是字符串内部是使用的utf-8 这里转码得到的是&quot;测试&quot; UTF-8编码中的汉字占用3个字节，所以这里占用了6个字节</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Println(s2[<span class="number">0</span>], s2[<span class="number">1</span>], s2[<span class="number">2</span>])           <span class="comment">// 当使用索引来访问字符串中的字符时,实际上是按照字节来访问的，这里分别是取的s2中的第一个、第二个、第三个字节的值 230 181 139</span></span><br><span class="line">    fmt.Println(<span class="type">string</span>([]<span class="type">byte</span>&#123;<span class="number">230</span>, <span class="number">181</span>, <span class="number">139</span>&#125;)) <span class="comment">// 类型是string =&gt; &quot;测&quot;，这里是将三个字节组成的字节数组强制转换成string输出，而这三个字节就对应了Unicode字符的&quot;测&quot;的三个字节</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    fmt.Println(<span class="type">string</span>(<span class="number">126</span>))                      <span class="comment">// 查ASCII表，找到码点转换即可 类型是string &quot;\x7e&quot; &quot;~&quot;</span></span><br><span class="line">    fmt.Println(<span class="type">string</span>(<span class="number">0x6d4b</span>))                   <span class="comment">// 去查Unicode码点表，在go语言中一个整数可以去查Unicode码点对应的字符，转换过程也就是将整数的值解析成对应的Unicode码点，在将该码点转换成对应的Unicode字符 这里打印出来是&quot;测&quot;</span></span><br><span class="line">    fmt.Println(<span class="type">string</span>([]<span class="type">byte</span>&#123;<span class="number">0x41</span>, <span class="number">0x42</span>, <span class="number">0x43</span>&#125;)) <span class="comment">// 类型是string，这里是将字节切片转换成字符串，这里要注意这种单字节的转换成字符串的话，是用于ASCII码中的字符来对应码点打印出来是&quot;ABC&quot;</span></span><br><span class="line">    fmt.Println(<span class="type">string</span>(<span class="number">0x616263</span>))                 <span class="comment">// 这里的整数值不在Unicode编码返回内，没有找到对应的码点转换，这时转换操作就会失败</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意：</p><ul><li>string(一个整数)，强制类型转换一个整数，相当于把整数当Unicode码点，在去查一个字符，最后返回的是一个字符串。</li><li>string(整数序列)，强制类型转换一个整数序列，也是将整数当Unicode码点去查字符，最后也是转成字符串。</li><li>这里是将整数当成unicode码点，再将得到的码点去查unicode码表，用码点找到表中对应的字符，在强制类型转换成字符串。</li></ul><h2 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h2><ul><li>是字面常量，只读，是不可变的</li><li>线性数据结构，可以使用索引来检索</li><li>值类型</li><li>是utf-8编码</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> stringStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">    str unsafe.Pointer <span class="comment">// 存放了一个指针</span></span><br><span class="line">    <span class="built_in">len</span> <span class="type">int</span> <span class="comment">// 字符串的长度，返回的是字符串占用的字节数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="字符串长度"><a href="#字符串长度" class="headerlink" title="字符串长度"></a>字符串长度</h3><p>使用内建函数len，是返回的字符串所占用的字节数，时间复杂度为O(1)，字符串是字面常量，在定义时就知道了长度，并记录了下来到元数据中。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s1 := <span class="string">&quot;abc测试&quot;</span></span><br><span class="line">fmt.Println(<span class="built_in">len</span>(s1)) <span class="comment">// 占用9个字节，因为打印字符串的长度是返回的是字符串占用的字节数，所以这里打印的len(s1)为9</span></span><br></pre></td></tr></table></figure><h3 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h3><ul><li>在go语言中是不支持负索引的，索引范围是[0-len(s)-1]</li><li>即使字符串中有中文字符，索引指的是按照字节的偏移量来编的</li><li>时间复杂度O(1)，使用索引计算该字符相对开头的偏移量即可</li><li>对于顺序表来说，使用索引查找效率是最高的</li><li>s[i]是获取索引i处的UTF-8编码的一个字节</li></ul><h3 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h3><p>C风格使用索引遍历，这里相当于字节遍历</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s1 := <span class="string">&quot;abc测试&quot;</span> <span class="comment">// 9个字节，index[0-8] [97 98 99 230 181 139 232 175 149]</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s1); i++ &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%d %v %[2]T %[2]c\n&quot;</span>, i, s1[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/for-string.png"></p><p>for-range遍历，安全的遍历字符</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s1 := <span class="string">&quot;abc测试&quot;</span> <span class="comment">// 9个字节，index[0-8] [97 98 99 230 181 139 232 175 149]</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> s1 &#123; <span class="comment">// 按照字符来遍历的</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%d %v [%[2]T] %v \n&quot;</span>, i, v, s1[i]) <span class="comment">// 注意i不连续。v的类型rune，查unicode码点转化</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/images/for-range-string.png"></p><h3 id="strings库"><a href="#strings库" class="headerlink" title="strings库"></a>strings库</h3><p>strings提供了大多数字符串的操作函数，使用方便。</p><p>注意：字符串是字面常量，不可修改，基本上操作都是返回的是新的字符串。</p><h4 id="拼接"><a href="#拼接" class="headerlink" title="拼接"></a>拼接</h4><ul><li>strings.Join：使用特定间隔拼接字符串切片</li><li>strings.Builder：多次拼接，推荐使用</li><li>fmt.Sprintf：方便快捷，推荐使用</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">s0 := <span class="string">&quot;abc&quot;</span></span><br><span class="line">s1 := <span class="string">&quot;测试&quot;</span></span><br><span class="line">s2 := s0 + s1 <span class="comment">// 类型string 占用9个字节 index[0,8] [97 98 99 230 181 139 232 175 149]</span></span><br><span class="line">fmt.Println(s2)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Sprintf =&gt; string 推荐用法</span></span><br><span class="line">fmt.Println(fmt.Sprintf(<span class="string">&quot;%s***%s&quot;</span>, s0, s1))</span><br><span class="line">fmt.Printf(<span class="string">&quot;%s\n&quot;</span>, fmt.Sprintf(<span class="string">&quot;%s+++%s&quot;</span>, s0, s1))</span><br><span class="line"></span><br><span class="line"><span class="comment">// join 使用间隔符拼接字符串切片</span></span><br><span class="line">fmt.Println(strings.Join([]<span class="type">string</span>&#123;s0, s1&#125;, <span class="string">&quot;---&quot;</span>)) <span class="comment">// 手里正好有字符串切片时，要使用固定连接符连接可以使用strings.Join</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 频繁拼接字符串 strings.Builder    bytes.Buffer</span></span><br><span class="line"><span class="keyword">var</span> result strings.Builder <span class="comment">// result是该结构体的零值</span></span><br><span class="line">result.WriteString(s0)</span><br><span class="line">result.WriteByte(<span class="string">&#x27;\x20&#x27;</span>)</span><br><span class="line">result.WriteRune(<span class="string">&#x27;\x20&#x27;</span>)</span><br><span class="line">result.WriteRune(<span class="string">&#x27;测&#x27;</span>)</span><br><span class="line">result.Write([]<span class="type">byte</span>&#123;<span class="number">232</span>, <span class="number">175</span>, <span class="number">149</span>&#125;)</span><br><span class="line">s := result.String()</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]s\n&quot;</span>, s)</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">abc测试</span><br><span class="line">abc***测试                        </span><br><span class="line">abc+++测试                        </span><br><span class="line">abc---测试                        </span><br><span class="line"><span class="type">string</span> abc  测试</span><br></pre></td></tr></table></figure><ul><li>简单拼接字符串常用+、fmt.Sprintf</li><li>假设手里正好有字符串的序列的话可以考虑使用join</li><li>如果要频繁多次拼接的话，strings.Builder是推荐的方式</li><li>strings.Builder和bytes.Buffer这两个用法是相同的</li></ul><h4 id="查询"><a href="#查询" class="headerlink" title="查询"></a>查询</h4><ul><li>strings.Index：从左至右搜索，返回子串第一次出现的字节索引位置。没有找到的话就返回-1，子串为空时返回的是0。</li><li>strings.LastIndex：从右至左搜索，返回子串第一次出现的字节索引位置。没有找到的话就返回-1。</li><li>strings.IndexByte、strings.IndexRune与strings.Index类似；strings.LastIndexByte与strings.LastIndex类似。  </li><li>strings.IndexAny：从左至右搜索，找到给定的字符集字符串中任意一个字符就返回索引位置。未找到返回-1。</li><li>strings.Contains<em>方法本质上就是Index</em>方法，只不过返回bool值，方便使用bool值时使用。  </li><li>strings.LastIndexAny与strings.IndexAny搜索方向相反。</li><li>strings.Count：从左至右搜索字串，返回字串出现的次数。</li></ul><p>时间复杂度是O(n)，效率不高，不过该用的时候还是要用，但是要少用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;www.stars.com小张测试&quot;</span></span><br><span class="line">fmt.Println(<span class="string">&quot;张&quot;</span>, <span class="string">&quot;张&quot;</span>[<span class="number">0</span>])</span><br><span class="line">fmt.Println(</span><br><span class="line">    strings.Index(s, <span class="string">&quot;张&quot;</span>),</span><br><span class="line">    strings.LastIndex(s, <span class="string">&quot;c&quot;</span>),</span><br><span class="line">    strings.IndexAny(s, <span class="string">&quot;张s&quot;</span>),</span><br><span class="line">    strings.IndexByte(s, <span class="number">229</span>),</span><br><span class="line">    strings.IndexRune(s, <span class="number">24352</span>),</span><br><span class="line">    strings.Contains(s, <span class="string">&quot;张&quot;</span>),</span><br><span class="line">    strings.Count(s, <span class="string">&quot;s&quot;</span>),</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">张 <span class="number">229</span></span><br><span class="line"><span class="number">16</span> <span class="number">10</span> <span class="number">4</span> <span class="number">13</span> <span class="number">16</span> <span class="literal">true</span> <span class="number">2</span></span><br></pre></td></tr></table></figure><h4 id="大小写"><a href="#大小写" class="headerlink" title="大小写"></a>大小写</h4><ul><li>strings.ToLower：转换为小写</li><li>strings.ToUpper：转换为大写</li></ul><p>时间复杂度O(n)</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">b := <span class="string">&quot;abc&quot;</span></span><br><span class="line">c := <span class="string">&quot;ABC&quot;</span></span><br><span class="line">fmt.Println(strings.ToLower(c)) <span class="comment">// ToLower 转换为小写</span></span><br><span class="line">fmt.Println(strings.ToUpper(b)) <span class="comment">// ToUpper 转换为大写</span></span><br></pre></td></tr></table></figure><h4 id="前后缀"><a href="#前后缀" class="headerlink" title="前后缀"></a>前后缀</h4><ul><li>strings.HasPrefix：是否以子串开头</li><li>strings.HasSuffix：是否以子串结尾</li></ul><p>时间复杂度O(1)，效率高</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">a := <span class="string">&quot;www.stars.com小张测试&quot;</span></span><br><span class="line">fmt.Println(strings.HasPrefix(a, <span class="string">&quot;www&quot;</span>)) <span class="comment">// HasPrefix 查找是否以子串开头 效率高 时间复杂度O(1)</span></span><br><span class="line">fmt.Println(strings.HasSuffix(a, <span class="string">&quot;com&quot;</span>)) <span class="comment">// HasSuffix 查找是否以子串结尾 效率高 时间复杂度O(1)</span></span><br><span class="line">fmt.Println(strings.Contains(a, <span class="string">&quot;m&quot;</span>))    <span class="comment">// 效率低下,需要遍历一遍查看是否有子串 时间复杂度O(n)</span></span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="literal">true</span></span><br><span class="line"><span class="literal">false</span></span><br><span class="line"><span class="literal">true</span></span><br></pre></td></tr></table></figure><h4 id="移除"><a href="#移除" class="headerlink" title="移除"></a>移除</h4><ul><li>strings.TrimSpace：去除字符串两端的空白字符。</li><li>strings.TrimPrefix、strings.TrimSuffix：如果开头或结尾匹配，则去除。否则，返回原字符串的副本。</li><li>strings.TrimLeft：字符串开头的字符如果在字符集中，则全部移除，直到碰到第一个不在字符集中的字符为止。</li><li>strings.TrimRight：字符串结尾的字符如果在字符集中，则全部移除，直到碰到第一个不在字符集中的字符为止。</li><li>strings.Trim：字符串两头的字符如果在字符集中，则全部移除，直到左或右都碰到第一个不在字符集中的字符为止。</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(strings.TrimSpace(<span class="string">&quot;\v\n\r \tabc\txyz\t \v\r\n&quot;</span>))</span><br><span class="line">fmt.Println(strings.TrimPrefix(<span class="string">&quot;www.stars.com-小张测试&quot;</span>, <span class="string">&quot;www.&quot;</span>))</span><br><span class="line">fmt.Println(strings.TrimSuffix(<span class="string">&quot;www.stars.com-小张测试&quot;</span>, <span class="string">&quot;.edu&quot;</span>))</span><br><span class="line">fmt.Println(strings.TrimLeft(<span class="string">&quot;abcdddeabeccc&quot;</span>, <span class="string">&quot;abcd&quot;</span>))</span><br><span class="line">fmt.Println(strings.TrimRight(<span class="string">&quot;abcdddeabeccc&quot;</span>, <span class="string">&quot;abcd&quot;</span>))</span><br><span class="line">fmt.Println(strings.Trim(<span class="string">&quot;abcddddaeabeccc&quot;</span>, <span class="string">&quot;abcd&quot;</span>))</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">abc     xyz</span><br><span class="line">stars.com-小张测试    </span><br><span class="line">www.stars.com-小张测试</span><br><span class="line">eabeccc               </span><br><span class="line">abcdddeabe            </span><br><span class="line">eabe</span><br></pre></td></tr></table></figure><h4 id="分割"><a href="#分割" class="headerlink" title="分割"></a>分割</h4><ul><li>strings.Split：按照给定的分割子串去分割，返回切割后的字符串切片。<ul><li>切割字符串是被切掉了，是不会出现在结果中</li><li>没有切到，也就会返回一个元素的切片，元素就是被切的字符串</li><li>分割字符串为空串时，那么返回将被切割字符串按照每个rune字符分解后转成string存入切片返回</li></ul></li><li>strings.SplitN(s, sep string, n int)返回的类型是[]string ，n表示最终切片中有几个元素<ul><li>n &#x3D;&#x3D; 0，返回空字符串，切成0个子串</li><li>n &gt; 0，返回切片元素的个数<ul><li>n &#x3D;&#x3D; 1，返回一个元素的切片，元素为z，相当于啥也没切到返回一个元素的切片</li><li>n &gt; 1，按照切割符切割。返回多个元素的切片。按照切割符切成的段数最多有x段，当n &lt; x 时，会有部分剩余字符串没有切；当n &#x3D;&#x3D; x 时，字符串s正好从头切到尾切完，返回所有段的切片；当n &gt; x时，和n &#x3D;&#x3D; x是一样的。n表示切割出来的子串的上限，也就是切片里面至多有n个元素。</li></ul></li><li>n &lt; 1，相当于Split，能切多少就切出多少。</li></ul></li><li>strings.SplitAfter和strings.Split相似，strings.SplitAfter就是不把切割符切掉。</li><li>strings.SplitAfterN和strings.SplitN相似，strings.SplitAfterN也是不把切割符切掉。</li><li>strings.Cut(s string, sep string) (before string, after string, found bool)<ul><li>内部使用Index找切割符，所以是从左至右搜索切割点，可以认为就是切一刀，一刀两段</li><li>没有切到，返回 原字符串，false</li><li>切到了，匹配切割符部分要切掉，返回 切割符前部分，切割符后部分，true</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;www.stars.com-小张测试&quot;</span></span><br><span class="line"><span class="comment">// 下面这三种字符串分割较为常用</span></span><br><span class="line">fmt.Println(strings.Split(s, <span class="string">&quot;.&quot;</span>))</span><br><span class="line">fmt.Println(strings.Split(s, <span class="string">&quot;=&quot;</span>))</span><br><span class="line">fmt.Println(strings.Split(s, <span class="string">&quot;&quot;</span>)) <span class="comment">// 这里是按照字符来切的，但是返回类型是[]string utf-8</span></span><br><span class="line"><span class="comment">// a := strings.Split(s, &quot;&quot;)</span></span><br><span class="line"><span class="comment">// for _, v := range a &#123;</span></span><br><span class="line"><span class="comment">//     fmt.Printf(&quot;%T %[1]v\n&quot;, v)</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">fmt.Println(strings.SplitAfter(s, <span class="string">&quot;.&quot;</span>))</span><br><span class="line">fmt.Println(strings.SplitAfter(s, <span class="string">&quot;=&quot;</span>))</span><br><span class="line">fmt.Println(strings.SplitAfter(s, <span class="string">&quot;&quot;</span>))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(strings.SplitN(s, <span class="string">&quot;.&quot;</span>, <span class="number">1</span>))      <span class="comment">// 返回的切片只能有1个元素</span></span><br><span class="line">fmt.Println(strings.SplitN(s, <span class="string">&quot;.&quot;</span>, <span class="number">2</span>))      <span class="comment">// 返回的切片只能有2个元素</span></span><br><span class="line">fmt.Println(strings.SplitAfterN(s, <span class="string">&quot;.&quot;</span>, <span class="number">2</span>)) <span class="comment">// 返回的切片只能有2个元素</span></span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">fmt.Println(strings.Cut(s, <span class="string">&quot;.&quot;</span>))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">[www stars com-小张测试]</span><br><span class="line">[www.stars.com-小张测试]</span><br><span class="line">[w w w . s t a r s . c o m - 小 张 测 试]</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">[www. stars. com-小张测试]</span><br><span class="line">[www.stars.com-小张测试]</span><br><span class="line">[w w w . s t a r s . c o m - 小 张 测 试]</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">[www.stars.com-小张测试]</span><br><span class="line">[www stars.com-小张测试]</span><br><span class="line">[www. stars.com-小张测试]</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">www stars.com-小张测试 <span class="literal">true</span></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br></pre></td></tr></table></figure><h4 id="替换"><a href="#替换" class="headerlink" title="替换"></a>替换</h4><ul><li>strings.Replace(s string, old string, new string, n int) string<ul><li>n &lt; 0，等价于ReplaceAll，指的是全部都替换</li><li>n &#x3D;&#x3D; 0，或old &#x3D;&#x3D;new，就是返回原字符串</li><li>n &gt; 0，至多替换n次，如果n超过找到old子串的次数x，也就只能替换x次了</li><li>没有找到替换处，就返回原字符串</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">s := <span class="string">&quot;www.stars.com-小张测试com,com,com,com,com&quot;</span></span><br><span class="line">fmt.Println(strings.Replace(s, <span class="string">&quot;com&quot;</span>, <span class="string">&quot;org&quot;</span>, <span class="number">5</span>))</span><br><span class="line">fmt.Println(strings.Replace(s, <span class="string">&quot;com&quot;</span>, <span class="string">&quot;org&quot;</span>, <span class="number">0</span>))</span><br><span class="line">fmt.Println(strings.Replace(s, <span class="string">&quot;m&quot;</span>, <span class="string">&quot;M&quot;</span>, <span class="number">-1</span>))</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">www.stars.org-小张测试org,org,org,org,com</span><br><span class="line">www.stars.com-小张测试com,com,com,com,com</span><br><span class="line">www.stars.coM-小张测试coM,coM,coM,coM,coM</span><br></pre></td></tr></table></figure><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><ul><li>strings.Repeat(s string, count int) string<ul><li>使用给定的字符串重复n次拼接成一个新的字符串</li></ul></li><li>strings.Map(mapping func(rune) rune, s string) string<ul><li>按照给定处理每个rune字符的函数依次处理每个字符后，在拼接成字符串返回。要注意Map是一对一的映射，不能减少元素个数。</li></ul></li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(strings.Repeat(<span class="string">&quot;abc&quot;</span>, <span class="number">3</span>))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">s := <span class="string">&quot;www.stars.com-小张测试&quot;</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%d %c\n&quot;</span>, i, v)</span><br><span class="line">&#125;</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">s1 := strings.Map(<span class="function"><span class="keyword">func</span><span class="params">(r <span class="type">rune</span>)</span></span> <span class="type">rune</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]v %[1]c\n&quot;</span>, r)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;a&#x27;</span> &lt;= r &amp;&amp; r &lt;= <span class="string">&#x27;z&#x27;</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> r - <span class="number">0x20</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">&#125;, s)</span><br><span class="line">fmt.Println(s1, <span class="string">&quot;!!!&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="类型转换"><a href="#类型转换" class="headerlink" title="类型转换"></a>类型转换</h2><h3 id="数值类型转换"><a href="#数值类型转换" class="headerlink" title="数值类型转换"></a>数值类型转换</h3><ul><li>低精度向高精度转换可以，高精度向低精度转化会损失精度</li><li>无符号向有符号转换，最高位是符号位</li><li>byte和int可以相互转换</li><li>float和int可以相互转换，float到int会丢失精度</li><li><strong>bool和int不能相互转换</strong></li><li>不同长度的int和float之间可以相互转换</li></ul><p>原码、反码、和补码是计算机中三种常见的编码方式。</p><ul><li>原码（Sign-Magnitude）：原码是最为直观的表示方式，其中最高位是表示符号位（0表示正数，1表示负数），其余位表示数值的绝对值。例如：+7 的原码是00000111，-7的原码是10000111.</li><li>反码（Ones’ Complement）：反码是通过对原码取反得到的，符号位不变，正数的反码与原码相同，负数的反码是将原码中的后7位取反，例如：+7 的反码00000111，-7 的反码11111000.</li><li>补码(Two’s Complement)：补码是对反码进行加1操作得到的，正数的补码与原码是相同的，而补码是在反码的基础上再加1；最高位任然还是表示的符号位，例如：+7 的补码是00000111，-7 补码是11111001.</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> i <span class="type">int8</span> = <span class="number">-1</span></span><br><span class="line"><span class="keyword">var</span> j = <span class="type">uint8</span>(i)</span><br><span class="line">fmt.Println(i, j) <span class="comment">// 打印出i=-1 j=255</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(<span class="type">int</span>(<span class="number">3.14</span>)) <span class="comment">// 这里的语法是错误的，不允许无类型float常量转到int</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a = <span class="number">3.14</span> <span class="comment">// 定义有类型变量转换是没有问题的</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T: %[1]v =&gt; %T: %[2]d\n&quot;</span>, a, <span class="type">int</span>(a)) <span class="comment">// float64: 3.14 =&gt; int: 3</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// byte rune本质上就是整数和无类型常量可以直接计算，自动转换</span></span><br><span class="line">b := <span class="string">&#x27;a&#x27;</span> <span class="comment">// rune类型 int32</span></span><br><span class="line">c := b + <span class="number">6</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v&quot;</span>, c) <span class="comment">// int32 103</span></span><br></pre></td></tr></table></figure><p>如果上面不使用无类型常量，有类型的计算的话类型不一致是会报错的，因为Go是对类型要求非常苛刻的语言，需要强制类型转换。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">d := <span class="string">&#x27;a&#x27;</span> <span class="comment">// 缺省类型是rune，int32</span></span><br><span class="line">e := <span class="number">6</span> <span class="comment">// 缺省类型是int</span></span><br><span class="line">c := d + e <span class="comment">// rune和int不能相加，这里要相加的话需要强制类型转换；比如c := int(d) + e 或者 c := d + rune(e)</span></span><br><span class="line">fmt.Println(c)</span><br></pre></td></tr></table></figure><h3 id="类型别名和类型定义"><a href="#类型别名和类型定义" class="headerlink" title="类型别名和类型定义"></a>类型别名和类型定义</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a <span class="type">byte</span> = <span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="keyword">var</span> b <span class="type">uint8</span> = <span class="number">97</span></span><br><span class="line">fmt.Println(a, b, a+b) <span class="comment">// 这里的byte是uint8类型的一个别名，其实可以认为byte就是uint8类型</span></span><br></pre></td></tr></table></figure><p>原因是在源码中定义了<span style="background-color:gray">type byte &#x3D; uint8</span>，这里的byte就是uint8的别名。</p><p>在Go v1.9版本开始就使用了类型别名，将byte等的定义修改了类型别名的方式。</p><p>uint8的别名说明就是uint8的另外一个名字罢了，和uint8是一回事。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> myByte <span class="type">uint8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a <span class="type">byte</span> = <span class="string">&#x27;b&#x27;</span></span><br><span class="line"><span class="keyword">var</span> b <span class="type">uint8</span> = <span class="number">97</span></span><br><span class="line">fmt.Println(a, b, a+b)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> c myByte = <span class="number">50</span></span><br><span class="line">fmt.Println(a, c, a+c) <span class="comment">// 这里的类型不一致，需要计算的话，必须强制类型转换才可以，不过转换是否成功，需要自己判断一下</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> myByte <span class="type">uint8</span> <span class="comment">// 这是新类型定义，这两个是不同的类型</span></span><br><span class="line"><span class="keyword">type</span> <span class="type">byte</span> = <span class="type">uint8</span> <span class="comment">// 这是定义类型的别名，而这两个是同一个类型</span></span><br></pre></td></tr></table></figure><h3 id="字符串转换"><a href="#字符串转换" class="headerlink" title="字符串转换"></a>字符串转换</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(<span class="type">string</span>(<span class="number">126</span>))</span><br><span class="line">fmt.Println(strconv.Itoa(<span class="number">126</span>))</span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line">~</span><br><span class="line"><span class="number">126</span> </span><br><span class="line"></span><br><span class="line">s1 := <span class="string">&quot;126&quot;</span></span><br><span class="line">fmt.Println(strconv.Atoi(s1))             <span class="comment">// 十进制理解为126</span></span><br><span class="line">fmt.Println(strconv.ParseInt(s1, <span class="number">10</span>, <span class="number">64</span>)) <span class="comment">// 十进制理解126</span></span><br><span class="line">fmt.Println(strconv.ParseInt(s1, <span class="number">16</span>, <span class="number">64</span>)) <span class="comment">// 十六进制理解0x126</span></span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line"><span class="number">126</span> &lt;<span class="literal">nil</span>&gt;  </span><br><span class="line"><span class="number">126</span> &lt;<span class="literal">nil</span>&gt;  </span><br><span class="line"><span class="number">294</span> &lt;<span class="literal">nil</span>&gt;</span><br><span class="line"></span><br><span class="line">s2 := <span class="string">&quot;115.6&quot;</span></span><br><span class="line">fmt.Println(strconv.ParseFloat(s2, <span class="number">64</span>))</span><br><span class="line">fmt.Println(strconv.ParseBool(<span class="string">&quot;true&quot;</span>))</span><br><span class="line"><span class="comment">// 输出</span></span><br><span class="line"><span class="number">115.6</span> &lt;<span class="literal">nil</span>&gt;</span><br><span class="line"><span class="literal">true</span> &lt;<span class="literal">nil</span>&gt;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang线性表-数组、切片</title>
      <link href="/post/f56d4cea.html"/>
      <url>/post/f56d4cea.html</url>
      
        <content type="html"><![CDATA[<h1 id="Golang线性表"><a href="#Golang线性表" class="headerlink" title="Golang线性表"></a>Golang线性表</h1><h2 id="数据结构"><a href="#数据结构" class="headerlink" title="数据结构"></a>数据结构</h2><h3 id="数值处理"><a href="#数值处理" class="headerlink" title="数值处理"></a>数值处理</h3><h4 id="取整"><a href="#取整" class="headerlink" title="取整"></a>取整</h4><ul><li>&#x2F;整数除法，截取整数部分</li><li>math.Ceil 向上取整</li><li>math.Floor 向下取整</li><li>math.Round 四舍五入</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(<span class="number">5</span>/<span class="number">2</span>, <span class="number">7</span>/<span class="number">2</span>, <span class="number">11</span>/<span class="number">2</span>)</span><br><span class="line">fmt.Println(<span class="number">-3</span>/<span class="number">2</span>, <span class="number">-5</span>/<span class="number">2</span>, <span class="number">-13</span>/<span class="number">2</span>)</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">fmt.Println(math.Ceil(<span class="number">4.4</span>), math.Ceil(<span class="number">8.05</span>), math.Ceil(<span class="number">4.8</span>))</span><br><span class="line">fmt.Println(math.Ceil(<span class="number">-4.46</span>), math.Ceil(<span class="number">-8.05</span>), math.Ceil(<span class="number">-4.8</span>))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">fmt.Println(math.Floor(<span class="number">4.4</span>), math.Floor(<span class="number">8.05</span>), math.Floor(<span class="number">4.8</span>))</span><br><span class="line">fmt.Println(math.Floor(<span class="number">-4.46</span>), math.Floor(<span class="number">-8.05</span>), math.Floor(<span class="number">-4.8</span>))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">fmt.Println(math.Round(<span class="number">4.4</span>), math.Round(<span class="number">8.05</span>), math.Round(<span class="number">4.8</span>))</span><br><span class="line">fmt.Println(math.Round(<span class="number">-4.46</span>), math.Round(<span class="number">-8.05</span>), math.Round(<span class="number">-4.8</span>))</span><br><span class="line">fmt.Println(math.Round(<span class="number">0.5</span>), math.Round(<span class="number">1.5</span>), math.Round(<span class="number">2.5</span>), math.Round(<span class="number">3.5</span>))</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">2</span> <span class="number">3</span> <span class="number">5</span></span><br><span class="line"><span class="number">-1</span> <span class="number">-2</span> <span class="number">-6</span></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line"><span class="number">5</span> <span class="number">9</span> <span class="number">5</span></span><br><span class="line"><span class="number">-4</span> <span class="number">-8</span> <span class="number">-4</span></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line"><span class="number">4</span> <span class="number">8</span> <span class="number">4</span></span><br><span class="line"><span class="number">-5</span> <span class="number">-9</span> <span class="number">-5</span></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line"><span class="number">4</span> <span class="number">8</span> <span class="number">5</span></span><br><span class="line"><span class="number">-4</span> <span class="number">-8</span> <span class="number">-5</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span></span><br></pre></td></tr></table></figure><h4 id="其他数值处理"><a href="#其他数值处理" class="headerlink" title="其他数值处理"></a>其他数值处理</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">fmt.Println(math.Abs(<span class="number">-8.2</span>))                               <span class="comment">// 取绝对值</span></span><br><span class="line">fmt.Println(math.E, math.Pi)                              <span class="comment">// 常数</span></span><br><span class="line">fmt.Println(math.MaxInt16, math.MinInt16)                 <span class="comment">// 常量，极值</span></span><br><span class="line">fmt.Println(math.Log10(<span class="number">100</span>), math.Log2(<span class="number">8</span>))                <span class="comment">// 对数</span></span><br><span class="line">fmt.Println(math.Max(<span class="number">7</span>, <span class="number">10</span>), math.Min(<span class="number">-5</span>, <span class="number">8</span>))             <span class="comment">// 最大值，最小值</span></span><br><span class="line">fmt.Println(math.Pow(<span class="number">2</span>, <span class="number">4</span>), math.Pow10(<span class="number">4</span>))                <span class="comment">// 幂</span></span><br><span class="line">fmt.Println(math.Mod(<span class="number">5</span>, <span class="number">3</span>), <span class="number">5</span>%<span class="number">3</span>)                          <span class="comment">// 取模</span></span><br><span class="line">fmt.Println(math.Sqrt(<span class="number">2</span>), math.Sqrt(<span class="number">4</span>), math.Pow(<span class="number">9</span>, <span class="number">0.5</span>)) <span class="comment">// 开方</span></span><br></pre></td></tr></table></figure><p>math库里面还有三角函数可以使用，这里我就不做示例了。</p><h3 id="标准输出"><a href="#标准输出" class="headerlink" title="标准输出"></a>标准输出</h3><ul><li>Scan：空白字符分割</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> n <span class="type">int</span></span><br><span class="line">    <span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        name <span class="type">string</span></span><br><span class="line">        age  <span class="type">int</span></span><br><span class="line">    )</span><br><span class="line">    fmt.Print(<span class="string">&quot;请输入您的名字和年龄：&quot;</span>)</span><br><span class="line">    n, err = fmt.Scan(&amp;name, &amp;age)    <span class="comment">// 在控制台中输入时，输入的值以空白字符来进行分割</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(n)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]s %[2]T %[2]d\n&quot;</span>, name, age)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> t1, t2 <span class="type">int</span></span><br><span class="line">    fmt.Print(<span class="string">&quot;请输入两个整数：&quot;</span>)</span><br><span class="line">    n, err = fmt.Scan(&amp;t1, &amp;t2)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(n)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]d %T %[2]d\n&quot;</span>, t1, t2)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果少一个数据的话，Scan这里就会进行阻塞；当输入的数据多了后，这里只取需要的数据即可，后面多输入的等程序中的下一个Scan读取。</p><ul><li>Scanf：读取输入，按照格式匹配解析。如果解析失败，立即报错，那么就会影响后面的Scanf。</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> n <span class="type">int</span></span><br><span class="line">    <span class="keyword">var</span> err <span class="type">error</span></span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        name <span class="type">string</span></span><br><span class="line">        age  <span class="type">int</span></span><br><span class="line">    )</span><br><span class="line">    fmt.Print(<span class="string">&quot;请输入您的名字和年龄：&quot;</span>)</span><br><span class="line">    n, err = fmt.Scanf(<span class="string">&quot;%s %d\n&quot;</span>, &amp;name, &amp;age) <span class="comment">// 这里要有\n以匹配回车</span></span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(n, name, age)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> weight, height <span class="type">int</span></span><br><span class="line">    fmt.Print(<span class="string">&quot;请输入两个整数：&quot;</span>)</span><br><span class="line">    n, err = fmt.Scanf(<span class="string">&quot;%d %d\n&quot;</span>, &amp;weight, &amp;height)</span><br><span class="line">    <span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">        <span class="built_in">panic</span>(err)</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(n)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T %[1]d %T %[2]d\n&quot;</span>, weight, height)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><span style="background-color:gray">fmt.Scanf(“%s %d\n”, &amp;name, &amp;age)</span> 这里的%会和后面的非空白字符分不清楚，这个除了用空白字符可以分清楚，其他的字符都会被看出是字符串中的字符，这里建议格式字符串中，一律使用空格等空白字符分割。</p><h2 id="线性数据结构"><a href="#线性数据结构" class="headerlink" title="线性数据结构"></a>线性数据结构</h2><p><strong>抽象概念</strong></p><ul><li>线性表：简称表，是一种抽象的数学概念，是一个有限序列可以存放元素，是一个有序的存放元素的容器。</li></ul><p><strong>物理实现</strong></p><ul><li>顺序表：使用连续的内存单元来存储该序列的所有元素，内存的顺序就是数据的顺序，可以说是已经排好队的一个容器，数组Array就是一个顺序表；它需要开辟连续的内存空间，变量指向顺序表的第一个元素的内存地址，而容器占用的内存可以被称为 容量(cap)，容量指的就是最多可以容纳多少个元素；当前容器的元素个数也被称为 长度(len) ，是用一个元数据来记录这些值的。</li></ul><p>从CURD的方面来分析：</p><ul><li>C(create)<ul><li>容器元素个数加1</li><li>使用append如同排队，在队尾增加元素</li><li>insert 插队<ul><li>在队尾插队的话就相当于append，影响不大</li><li>中间插队的话，是要占用当前的位置，将之前的当前位置与其后的元素数据要往后移</li><li>当要在队首插入时，就会将所有的元素往后移在插入</li><li>当数据量大的时候，这个代价就有点大了，因为挪动数据是需要消耗时间的，一旦数据量很大时，消耗的时间也会很长</li></ul></li></ul></li><li>D(delete)<ul><li>容器的元素个数减1</li><li>pod队尾移除一个元素，这样影响最小</li><li>remove<ul><li>如果是队尾的话，就是相当于pop</li><li>如果在中间离队的话，后面的数据统统往前移</li><li>如果在队首离队的话，后面的数据统统往前移</li></ul></li></ul></li><li>U(update)<ul><li>元素个数不变</li><li>首先定位需要修改的元素<ul><li>使用索引定位，通用公式：”首地址 + 该类型所占的字节数 * 偏移”，所以定位要使用索引来计算得到的元素内存地址，这样的话就不用去都遍历一遍了，效率极高</li><li>如果使用内容定位，需要进行内容比较，再通过遍历的方式去挨个比较，这样的话效率低下，要知道最惨的结果就是遍历完了，发现没有对应的这个元素</li></ul></li><li>更新内容</li></ul></li><li>R(read)<ul><li>定位元素<ul><li>使用索引定位，通用公式：首地址 + 该类型所占的字节数 * 偏移，所以定位要使用索引计算得到的元素内存地址，这样的话就不用去都遍历一遍了，效率极高</li><li>如果使用内容定位，需要进行内容比较，再通过遍历的方式去挨个比较，这样的话效率低下，最惨的结果就是遍历完了，发现没有对应的这个元素</li><li>使用索引计算与规模n有关，使用固定的步骤就可以计算数元素的位置，时间复杂度为O(1)</li></ul></li><li>获取内容：使用索引直接定位该位置，取走内容</li><li>遍历：容器的元素，不管有没有顺序，我们都会不重复的将所有元素挨个摸个遍， 从首地址开始，挨个遍历一遍去内容</li></ul></li></ul><p>前提： 需要看数据的规模量大不大，如果数据规模小的话，到时影响不大，一旦数据规模大起来的话，操作起来就很麻烦；这里的顺序表仅仅适合在尾部做增删的操作，但是这又会出现存储元素空间的扩容的问题。</p><ul><li>链接表：每一个元素存储在内存中，但是元素不一定是连续的存储在内存中的，一般都是散落在内存的不同位置，前一个元素指向下一个元素（链接），head首部元素，tail尾部元素；链表是一个容器可以存放元素，定义一个变量指向链表中的第一个元素地址；不需要提前开辟内存空间。<ul><li>单向链表：指的是前一个元素指向下一个元素的链接</li><li>双向链表：指的是前一个元素指向下一个元素，而下一个元素也指向上一个元素，可以理解是双向奔赴的意思</li><li>列表（list）往往都是链表来实现的，但是Python是例外</li></ul></li></ul><p>从CURD的方面来分析：</p><ul><li>C(create)<ul><li>容器的元素个数加1</li><li>尾部追加，原来的尾巴将会指向新的尾巴，容器改tail的指向；没有数据的挪动，很快</li><li>中间插入，断开原来的链接，分别和新的元素链接，也没有数据的挪动，这样代价也不大</li><li>首部插入，将原来的头和新的头互指一下，容器改head的指向，没有数据的挪动，代价也不高</li></ul></li><li>D(delete)<ul><li>容器元素个数会减1</li><li>尾部删除，可以用tail定位尾部，当前尾部的前一个元素就成为新的tail，删除旧的tail的元素</li><li>中间删除，遍历定位，当前元素删除，前面那个元素跟后面那个元素重新链接即可</li><li>首部删除，用head定位首部，当前head的下一个元素成为新的head，删除旧的head元素</li></ul></li><li>U(update)<ul><li>元素的个数不变</li><li>定位元素<ul><li>使用索引定位，由于元素是散落在内存中的，就不可以使用顺序表的公式来定位元素，首先要找到开头，然后在依次的去遍索引，但是取的每一个节点中保存的下一个元素的地址，在使用该地址去定位下一个元素的元素的位置；这样和顺序表比起来，会略慢一些，但是由于都是使用的地址，效率还是不错的。</li><li>使用内容定位，这个需要遍历查找，效率低下</li></ul></li><li>找到元素后直接更新内容即可</li></ul></li><li>R(read)<ul><li>定位元素<ul><li>使用索引定位，由于元素是散落在内存中的，就不可以使用顺序表的公式来定位元素，首先要找到开头，然后在依次的去遍索引，但是取的每一个节点中保存的下一个元素的地址，在使用该地址去定位下一个元素的元素的位置；这样和顺序表比起来，会略慢一些，但是由于都是使用的地址，效率还是不错的。</li><li>使用内容定位，这个需要遍历查找，效率低下</li></ul></li><li>找到内容后取走即可</li></ul></li></ul><p>在数据规模量大时，如果增删在中间或者头部的话（也包括尾部），这里更适合使用链接表，这样就不需要扩容，随便在内存中找一个位置存放当前元素即可，在修改指向（即链接地址）。</p><p>数组等类型，如同地铁站排好的队伍，有序，可以插队、离队，可以索引。</p><p>链表，如同操场上手拉手的小朋友，有序，但排列随意，或者可以想象成一串带线的珠子，随意盘方在桌上。也可以离队、插队，也可以索引。</p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>数组是由顺序表实现的，容器是不可变的，也就是容器中的元素个数是不可以改变的；数组中必须给定长度，以后数组这个容器就不能增删元素了；是支持索引的，是值类型。</p><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a0 []<span class="type">int</span> <span class="comment">// 这个是定义切片，用的零值</span></span><br><span class="line"><span class="keyword">var</span> a1 [<span class="number">3</span>]<span class="type">int</span> <span class="comment">// 明确元素个数，使用零值[0 0 0] 类型为：[3]int</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a2 [...]<span class="type">int</span> <span class="comment">// 这里的语法是错误的, ...这个是可以推导出元素个数的，但是得要给元素</span></span><br><span class="line"><span class="keyword">var</span> a2 = [<span class="number">3</span>]<span class="type">int</span>&#123;&#125; <span class="comment">// 数组的字面定义 类型为：[3]int, &#123;&#125;表示字面量定义处，左边推导类型。[0 0 0]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v; %T %[2]v\n&quot;</span>, a1, a2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a3 [<span class="number">3</span>]<span class="type">int</span>=[<span class="number">3</span>]<span class="type">int</span>&#123;&#125; <span class="comment">// 这样写是可以的，就不用推导类型了，但是这样写会觉得啰嗦，一般都不这样写</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> length = <span class="number">3</span> <span class="comment">// 这里定义了一个变量，当数组的长度引用这个变量会报错的，因为go语言中的数组要定长的</span></span><br><span class="line"><span class="keyword">const</span> length = <span class="number">3</span></span><br><span class="line"><span class="keyword">var</span> a4 = [length]<span class="type">int</span>&#123;&#125; <span class="comment">// []这个里面的值只能是常量，var定义的是变量，后面是可以变的，而这里的数组是要定长的，所以要使用常量const来定义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a5 := [<span class="number">3</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125; <span class="comment">// len,cap的值都是3，但是&#123;&#125;里面就给了两个元素，其他的元素就用定义的类型的零值填充,a5打印出来的是[1 2 0]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v %d %d\n&quot;</span>, a5, <span class="built_in">len</span>(a5), <span class="built_in">cap</span>(a5)) <span class="comment">// array中的len=cap值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a6 := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>&#125; <span class="comment">// 这里使用...是使用&#123;&#125;里面的元素来推导出数组的长度，这里可以推导出len和cap都是2，打印的数组值是[1 2]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v %d %d\n&quot;</span>, a6, <span class="built_in">len</span>(a6), <span class="built_in">cap</span>(a6))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a7 := [<span class="number">5</span>]<span class="type">int</span>&#123;<span class="number">1</span>: <span class="number">10</span>, <span class="number">4</span>: <span class="number">20</span>&#125; <span class="comment">// 给指定的索引初始化值，其余的用零值填充，a7打印出来的是[0 10 0 0 20]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v %d %d\n&quot;</span>, a7, <span class="built_in">len</span>(a7), <span class="built_in">cap</span>(a7))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// a8 := [3][4]int&#123;&#123;10, 20&#125;, &#123;20, 89&#125;, &#123;8, 28&#125;&#125; // 这里的类型是[3][4]int 第一维的len和cap值为3，第二维的len和cap值为4</span></span><br><span class="line">a8 := [...][<span class="number">4</span>]<span class="type">int</span>&#123;&#123;<span class="number">10</span>, <span class="number">20</span>&#125;, &#123;<span class="number">20</span>, <span class="number">89</span>&#125;, &#123;<span class="number">8</span>, <span class="number">28</span>&#125;&#125; <span class="comment">// ...只能用在第一维度的数组中,这个定义的二维数组中第一维有3个，第二维有4个，可以看做为3行4列的一个表,a8打印出来的是[[10 20 0 0] [20 89 0 0] [8 28 0 0]]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v %d %d %d %d\n&quot;</span>, a8, <span class="built_in">len</span>(a8), <span class="built_in">cap</span>(a8), <span class="built_in">len</span>(a8[<span class="number">0</span>]), <span class="built_in">cap</span>(a8[<span class="number">0</span>]))</span><br></pre></td></tr></table></figure><h4 id="长度和容量"><a href="#长度和容量" class="headerlink" title="长度和容量"></a>长度和容量</h4><ul><li>cap即capacity，指的是容量，表示可以给数组分配的内存空间可以容纳多少个元素</li><li>len即length，指的是长度，表示目前容器中有多少个元素</li></ul><p>由于创建数组是就必须确定好元素的个数，而且后面是不可以修改长度的，所以不需要预留多余的内存空间，这里的len和cap的值对于数组来说是相等的。</p><h4 id="索引"><a href="#索引" class="headerlink" title="索引"></a>索引</h4><p>在go语言中是不支持负索引，通过[index]来获取改索引位置上的值，索引范围就是[0,长度-1]，使用索引是最快的定位方式了。</p><h4 id="修改"><a href="#修改" class="headerlink" title="修改"></a>修改</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a := [<span class="number">5</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v %d %d\n&quot;</span>, a, <span class="built_in">len</span>(a), <span class="built_in">cap</span>(a))</span><br><span class="line">fmt.Println(<span class="built_in">len</span>(a) - <span class="number">1</span>) <span class="comment">// len(a)是指的a这个数组的长度，而长度-1是指这个数组最后位元素的索引数</span></span><br><span class="line">a[<span class="number">2</span>] += <span class="number">10</span> <span class="comment">// 索引为2的元素的值先加个10在重新赋值给自己</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v %d %d\n&quot;</span>, a, <span class="built_in">len</span>(a), <span class="built_in">cap</span>(a))</span><br><span class="line">a[<span class="built_in">len</span>(a)<span class="number">-2</span>] = <span class="number">8</span> <span class="comment">// 指的是将最后位元素的前一位元素值修改成8</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%T %[1]v %d %d\n&quot;</span>, a, <span class="built_in">len</span>(a), <span class="built_in">cap</span>(a))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">[<span class="number">5</span>]<span class="type">int</span> [<span class="number">1</span> <span class="number">2</span> <span class="number">3</span> <span class="number">4</span> <span class="number">5</span>] <span class="number">5</span> <span class="number">5</span></span><br><span class="line"><span class="number">4</span>                                                          </span><br><span class="line">[<span class="number">5</span>]<span class="type">int</span> [<span class="number">1</span> <span class="number">2</span> <span class="number">13</span> <span class="number">4</span> <span class="number">5</span>] <span class="number">5</span> <span class="number">5</span>                                    </span><br><span class="line">[<span class="number">5</span>]<span class="type">int</span> [<span class="number">1</span> <span class="number">2</span> <span class="number">13</span> <span class="number">8</span> <span class="number">5</span>] <span class="number">5</span> <span class="number">5</span>                                    </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br></pre></td></tr></table></figure><h4 id="遍历"><a href="#遍历" class="headerlink" title="遍历"></a>遍历</h4><ul><li>索引遍历</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a := [<span class="number">5</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;%d %v\n&quot;</span>, i, a[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>for range遍历</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a := [...]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> a &#123; <span class="comment">// i指的是索引，v指的是元素的值</span></span><br><span class="line">    fmt.Println(i, v, a[i]) <span class="comment">// 其实这里的v和a[i]取的值是一样的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a [<span class="number">3</span>]<span class="type">int</span> <span class="comment">// 在内存值开辟连续空间存放长度为3的数组，使用定义的类型零值填充</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line">    fmt.Println(i, a[i], &amp;a[i])</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a, &amp;a, &amp;a[<span class="number">0</span>])</span><br><span class="line">a[<span class="number">0</span>] = <span class="number">88</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a, &amp;a, &amp;a[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">0</span> <span class="number">0</span> <span class="number">0xc000010138</span></span><br><span class="line"><span class="number">1</span> <span class="number">0</span> <span class="number">0xc000010140</span></span><br><span class="line"><span class="number">2</span> <span class="number">0</span> <span class="number">0xc000010148</span></span><br><span class="line">[<span class="number">0</span> <span class="number">0</span> <span class="number">0</span>] <span class="number">0xc000010138</span> <span class="number">0xc000010138</span> </span><br><span class="line">[<span class="number">88</span> <span class="number">0</span> <span class="number">0</span>] <span class="number">0xc000010138</span> <span class="number">0xc000010138</span></span><br></pre></td></tr></table></figure><ul><li>数组是必须要在编译时就确定好长度，之后就不能修改长度了</li><li>数组的首个元素地址也就是数组的地址（类似于C语言）</li><li>所有的元素一个接一个顺序存储在内存中</li><li>数组内元素的值是可以改变的，但是元素地址是不变的</li></ul><p>一个元素在内存中占用多少字节和元素的类型有关，一个元素的存储单元后面一定是第二个元素的存单元，因为数组是顺序表，这个前面的代码中的每个元素间隔8个字节，自己的电脑也是64位的，这样也符合int类型的定义。</p><p>如果数据元素是字符串类型呢？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a = [<span class="number">3</span>]<span class="type">string</span>&#123;<span class="string">&quot;abc&quot;</span>, <span class="string">&quot;pxt&quot;</span>, <span class="string">&quot;xyz&quot;</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(a); i++ &#123;</span><br><span class="line">    fmt.Println(i, a[i], &amp;a[i])</span><br><span class="line">&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a, &amp;a, &amp;a[<span class="number">0</span>])</span><br><span class="line">a[<span class="number">0</span>] = <span class="string">&quot;tttttttttt&quot;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%v %p %p\n&quot;</span>, a, &amp;a, &amp;a[<span class="number">0</span>])</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">0</span> abc <span class="number">0xc000074540</span></span><br><span class="line"><span class="number">1</span> pxt <span class="number">0xc000074550</span></span><br><span class="line"><span class="number">2</span> xyz <span class="number">0xc000074560</span></span><br><span class="line">[abc pxt xyz] <span class="number">0xc000074540</span> <span class="number">0xc000074540</span>       </span><br><span class="line">[tttttttttt pxt xyz] <span class="number">0xc000074540</span> <span class="number">0xc000074540</span></span><br></pre></td></tr></table></figure><ul><li>数组的首个元素的地址就是数组的地址</li><li>所有元素都是按照顺序存储在内存中的</li><li>元素的值可以被修改，但是元素的地址是不变的</li></ul><p>上面的输出的结果，每个元素间隔16个字节是为什么呢？这说明了什么？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> stringStruct <span class="keyword">struct</span> &#123;</span><br><span class="line">    str unsafe.Pointer    <span class="comment">// 指针</span></span><br><span class="line">    <span class="built_in">len</span> <span class="type">int</span>    <span class="comment">// 长度 是按照占用的字节来算的</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>字符串是字面常量，一旦定义了就不可以改变了，不同的字符串长度不一，当数组采用string为元素时，经过测试发现存储间隔是一样的，都是占用的16字节，这说明了字符串比我们想象的还要复杂一些，而在这16个字节中还存放着一个指针，指向字符串的内存地址。</p></blockquote><h4 id="值类型"><a href="#值类型" class="headerlink" title="值类型"></a>值类型</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">showAddr</span><span class="params">(arr [5]<span class="type">int</span> /*副本，将值完全复制了一份*/)</span></span> [<span class="number">5</span>]<span class="type">int</span> <span class="comment">/*又生成了一个副本*/</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;arr: %v %p\n&quot;</span>, arr, &amp;arr)</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 数组的值类型</span></span><br><span class="line">    z := [<span class="number">5</span>]<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">11</span>, <span class="number">12</span>&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;z: %v %p\n&quot;</span>, z, &amp;z)</span><br><span class="line"></span><br><span class="line">    g := z <span class="comment">// 建立副本</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;g: %v %p\n&quot;</span>, g, &amp;g)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    w := showAddr(z)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;w: %v %p\n&quot;</span>, w, &amp;w)</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    z = [<span class="number">5</span>]<span class="type">int</span>&#123;&#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;z: %v %p\n&quot;</span>, z, &amp;z)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">z: [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">0</span> <span class="number">0</span>] <span class="number">0xc0000be060</span></span><br><span class="line">g: [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">0</span> <span class="number">0</span>] <span class="number">0xc0000be0c0</span>         </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">arr: [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">0</span> <span class="number">0</span>] <span class="number">0xc0000be150</span>       </span><br><span class="line">w: [<span class="number">10</span> <span class="number">11</span> <span class="number">12</span> <span class="number">0</span> <span class="number">0</span>] <span class="number">0xc0000be120</span>         </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">z: [<span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span> <span class="number">0</span>] <span class="number">0xc0000be060</span></span><br></pre></td></tr></table></figure><ul><li>数组是值，值是完全复制的，生成了一个副本</li><li>用数组给其他的标识符赋值的时候，值也是被复制了一个副本</li><li>函数传入参数的时候，这时的值也是被复制了一个副本</li><li>函数返回值用数组，也是会复制，生成一个副本</li><li>这样的话就会导致创建的副本太多，可能就会大量的浪费内存资源，这时我们就会使用到切片来防止浪费内存的情况出现</li></ul><h3 id="切片"><a href="#切片" class="headerlink" title="切片"></a>切片</h3><ul><li>容器可变</li><li>长度可变</li><li>底层是基于数组的，依赖于顺序表，表现的也像一个可变容量和长度的顺序表</li><li>引用类型，和值类型是有区别的</li></ul><h4 id="定义-1"><a href="#定义-1" class="headerlink" title="定义"></a>定义</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">a1 := []<span class="type">int</span>&#123;&#125; <span class="comment">// 字面量定义，类型是[]int,&#123;&#125;表示内部是手写的字面元素，一个元素都没有的切片，len为0，cap为0</span></span><br><span class="line"><span class="keyword">var</span> a2 []<span class="type">int</span>  <span class="comment">// 类型是[]int，用零值[]，len为0，cap为0</span></span><br><span class="line">fmt.Println(<span class="string">&quot;a1:&quot;</span>, a1, <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">fmt.Println(<span class="string">&quot;a2:&quot;</span>, a2, <span class="built_in">len</span>(a2), <span class="built_in">cap</span>(a2))</span><br><span class="line"></span><br><span class="line"><span class="comment">// make函数，构建切片、map、chan</span></span><br><span class="line"><span class="keyword">var</span> a3 = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>) <span class="comment">// 第一个参数长度len，第二个参数cap</span></span><br><span class="line">fmt.Println(<span class="string">&quot;a3:&quot;</span>, a3, <span class="built_in">len</span>(a3), <span class="built_in">cap</span>(a3))</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a4 = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">1</span>, <span class="number">5</span>) <span class="comment">// len:1,cap:5，第一个房间住了，其他的房间没有住,打印出的是[0]</span></span><br><span class="line">fmt.Println(<span class="string">&quot;a4:&quot;</span>, a4, <span class="built_in">len</span>(a4), <span class="built_in">cap</span>(a4))</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a5 = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">0</span>, <span class="number">5</span>) <span class="comment">// 元素个数为0，容量是5，指的是5个房间都没有使用,打印出来的是[]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a5 %v %p %v %v\n&quot;</span>, a5, &amp;a5, <span class="built_in">len</span>(a5), <span class="built_in">cap</span>(a5))</span><br><span class="line"></span><br><span class="line">a5 = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">5</span>, <span class="number">5</span>) <span class="comment">// 长度为5，这5个元素都用的是零值，容量是5，打印出来是[0 0 0 0 0]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a5 %v %p %v %v\n&quot;</span>, a5, &amp;a5, <span class="built_in">len</span>(a5), <span class="built_in">cap</span>(a5))</span><br></pre></td></tr></table></figure><h4 id="内存模型-1"><a href="#内存模型-1" class="headerlink" title="内存模型"></a>内存模型</h4><p><img src="/images/slice-memory-model.png"></p><p>切片的本质就是对底层数组一个连续片段的引用，这个片段可以是整个底层数组，也可以是由起始和终止索引标识一些项的子集。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// https://github.com/golang/go/blob/master/src/runtime/slice.go</span></span><br><span class="line"><span class="comment">// slice header（标头值） 或 descriptor（描述符）</span></span><br><span class="line"><span class="keyword">type</span> slice <span class="keyword">struct</span> &#123;</span><br><span class="line">    array unsafe.Pointer <span class="comment">// 指针，指向底层数组的首地址</span></span><br><span class="line">    <span class="built_in">len</span> <span class="type">int</span> <span class="comment">// 表示当前切片的元素个数</span></span><br><span class="line">    <span class="built_in">cap</span> <span class="type">int</span> <span class="comment">// 表示当前切片可以最多存放多少个元素</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">注意上面三个结构体的属性都是小写，所以也就是包外不可见。<span class="built_in">len</span>函数取的就是<span class="built_in">len</span>属性，<span class="built_in">cap</span>函数取的就是<span class="built_in">cap</span>属性。</span><br><span class="line">指针可以通过取底层数组的第一个元素的地址，也就是切片的第一个元素的地址。</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// var a0 = make([]int&#123;&#125;, 1, 5)    // 切片长度len为1，容量cap为5，本质上数据的存储利用底层数组，元素是存储在底层数组中，打印出[0]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> a0 = []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125;</span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %v %v&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">    <span class="comment">// []int 切片类型</span></span><br><span class="line">    <span class="comment">// 元素有3个，len为3，容量cap为3</span></span><br><span class="line">    <span class="comment">// 打印[10 20 30]</span></span><br><span class="line">    <span class="comment">// &amp;a0表示切片的地址，header这个结构体的地址</span></span><br><span class="line">    <span class="comment">// &amp;a0[0] 第一个元素的地址，由于第一个元素存在底层数组中，数组的第一个元素地址就是数组的地址</span></span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">a0 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc000008078</span> <span class="number">0xc000010198</span> <span class="number">3</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><h4 id="追加"><a href="#追加" class="headerlink" title="追加"></a>追加</h4><p>append在切片的尾部追加元素，长度加1</p><p>当增加元素后，是有可能超过当前的容量的，当超过当前容量的话，就会触发底层数组的扩容。</p><h4 id="长度和容量-1"><a href="#长度和容量-1" class="headerlink" title="长度和容量"></a>长度和容量</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a0 = []<span class="type">int</span>&#123;<span class="number">10</span>&#125; <span class="comment">// len 1,cap 1 [0]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line"></span><br><span class="line">a0 = <span class="built_in">make</span>([]<span class="type">int</span>, <span class="number">2</span>, <span class="number">5</span>) <span class="comment">// len 2,cap 5 a0的地址不变，即标头值地址不变 [0 0]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">a0 = <span class="built_in">append</span>(a0, <span class="number">20</span>) <span class="comment">// 返回一个新的标头值 新的指针或新的len或新的cap，一定变的len [0 0 20]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">a1 := <span class="built_in">append</span>(a0, <span class="number">1</span>, <span class="number">2</span>)  <span class="comment">// append返回新的header信息，使用新的变量存储,共用底层数组 [0 0 20 1 2]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">a2 := <span class="built_in">append</span>(a0, <span class="number">8</span>) <span class="comment">// append返回新的header信息，使用新的变量存储,共用底层数组 [0 0 20 8]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a2 %v %p %p %d %d\n&quot;</span>, a2, &amp;a2, &amp;a2[<span class="number">0</span>], <span class="built_in">len</span>(a2), <span class="built_in">cap</span>(a2))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">a3 := <span class="built_in">append</span>(a2, <span class="number">6</span>, <span class="number">6</span>, <span class="number">6</span>) <span class="comment">// 这里换底层数组了，之前的数组放不下要添加的元素了，就重新在内存中换了个地方存放新的底层数组 len为7 cap为10 [0 0 20 8 6 6 6]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a2 %v %p %p %d %d\n&quot;</span>, a2, &amp;a2, &amp;a2[<span class="number">0</span>], <span class="built_in">len</span>(a2), <span class="built_in">cap</span>(a2))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a3 %v %p %p %d %d\n&quot;</span>, a3, &amp;a3, &amp;a3[<span class="number">0</span>], <span class="built_in">len</span>(a3), <span class="built_in">cap</span>(a3))</span><br><span class="line">fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">a4 := <span class="built_in">append</span>(a3, <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>, <span class="number">9</span>) <span class="comment">// 又重新生成新的底层数组 len为11 cap为20 [0 0 20 8 6 6 6 9 9 9 9]</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a2 %v %p %p %d %d\n&quot;</span>, a2, &amp;a2, &amp;a2[<span class="number">0</span>], <span class="built_in">len</span>(a2), <span class="built_in">cap</span>(a2))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a3 %v %p %p %d %d\n&quot;</span>, a3, &amp;a3, &amp;a3[<span class="number">0</span>], <span class="built_in">len</span>(a3), <span class="built_in">cap</span>(a3))</span><br><span class="line">fmt.Printf(<span class="string">&quot;a4 %v %p %p %d %d\n&quot;</span>, a4, &amp;a4, &amp;a4[<span class="number">0</span>], <span class="built_in">len</span>(a4), <span class="built_in">cap</span>(a4))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">控制台输出：</span><br><span class="line">a0 [10] 0xc000008078 0xc00001a0a8 1 1</span><br><span class="line">a0 [0 0] 0xc000008078 0xc00000e450 2 5</span><br><span class="line">a0 [0 0 20] 0xc000008078 0xc00000e450 3 5</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">a0 [0 0 20] 0xc000008078 0xc00000e450 3 5</span><br><span class="line">a1 [0 0 20 1 2] 0xc0000080d8 0xc00000e450 5 5</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">a0 [0 0 20] 0xc000008078 0xc00000e450 3 5</span><br><span class="line">a1 [0 0 20 8 2] 0xc0000080d8 0xc00000e450 5 5</span><br><span class="line">a2 [0 0 20 8] 0xc000008120 0xc00000e450 4 5</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">a0 [0 0 20] 0xc000008078 0xc00000e450 3 5</span><br><span class="line">a1 [0 0 20 8 2] 0xc0000080d8 0xc00000e450 5 5</span><br><span class="line">a2 [0 0 20 8] 0xc000008120 0xc00000e450 4 5</span><br><span class="line">a3 [0 0 20 8 6 6 6] 0xc000008180 0xc000014230 7 10</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">a0 [0 0 20] 0xc000008078 0xc00000e450 3 5</span><br><span class="line">a1 [0 0 20 8 2] 0xc0000080d8 0xc00000e450 5 5</span><br><span class="line">a2 [0 0 20 8] 0xc000008120 0xc00000e450 4 5</span><br><span class="line">a3 [0 0 20 8 6 6 6] 0xc000008180 0xc000014230 7 10</span><br><span class="line">a4 [0 0 20 8 6 6 6 9 9 9 9] 0xc0000081f8 0xc00002a0a0 11 20</span><br></pre></td></tr></table></figure><ul><li>append一定返回一个新的切片，但是本质上说是新的header（标头值）</li><li>append可以添加若干个元素<ul><li>增加若干元素时，当前长度 + 新增元素个数 &lt;&#x3D; cap 的话就不会发生扩容<ul><li>原切片使用原来的底层数组，返回的新切片也使用这个底层数组</li><li>返回的新切片有新的长度</li><li>原切片长度不变</li></ul></li><li>如果增加元素时，当前长度 + 新增元素个数 &gt; cap 的话就需要发生扩容了<ul><li>这时会生成新的底层数组，新生成的切片使用该新数组，将旧元素复制到新的数组，其后在追加元素</li><li>原切片底层数组、长度、容量不会改变</li></ul></li></ul></li></ul><h4 id="扩容策略"><a href="#扩容策略" class="headerlink" title="扩容策略"></a>扩容策略</h4><p><a href="https://go.dev/src/runtime/slice.go">https://go.dev/src/runtime/slice.go</a></p><p>在老版本（1.18-）实际上，当扩容后的cap&lt;1024时，扩容翻倍，容量变成之前的2倍；当cap&gt;&#x3D;1024时，变成之前的1.25倍。</p><p>而在新版（1.18+）阈值就变成了256，当扩容后的cap&lt;256时，扩容翻倍，容量变成之前的2倍；当cap&gt;&#x3D;256时，<span style="background-color:gray">newcap +&#x3D; (newcap + 3*threshold) &#x2F;4</span>，计算后就是<span style="background-color:gray">newcap &#x3D; newcap + newcap&#x2F;4 + 192</span>，即在1.25倍后再加192。</p><p>扩容是创建新的底层数组，把原内存数据拷贝到新内存空间，然后在新的内存空间上执行元素追加操作。</p><p>切片频繁扩容的话成本会非常高，所以尽量早些估算出要使用的大小，一次性给够，建议使用make来定义切片，常用make([]int, 0, 100)。</p><h4 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h4><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">showAddr</span><span class="params">(arr []<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;arr %v %p %p %d %d\n&quot;</span>, arr, &amp;arr, &amp;arr[<span class="number">0</span>], <span class="built_in">len</span>(arr), <span class="built_in">cap</span>(arr))</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(arr) &gt; <span class="number">0</span> &#123;</span><br><span class="line">        arr[<span class="number">0</span>] = <span class="number">666</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;arr %v %p %p %d %d\n&quot;</span>, arr, &amp;arr, &amp;arr[<span class="number">0</span>], <span class="built_in">len</span>(arr), <span class="built_in">cap</span>(arr))</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a0 := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125; <span class="comment">// len 3,cap 3</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">    a1 := a0 <span class="comment">// a1新变量，a1是a0的header的副本，减少了内容的复制，底层数组保持才是内容，复制了标头值24bytes</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">    a2 := showAddr(a0) <span class="comment">// 对于切片来说，复制的是header（标头值）</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0)) </span><br><span class="line">    fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">    fmt.Printf(<span class="string">&quot;a2 %v %p %p %d %d\n&quot;</span>, a2, &amp;a2, &amp;a2[<span class="number">0</span>], <span class="built_in">len</span>(a2), <span class="built_in">cap</span>(a2))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">a0 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc000008078</span> <span class="number">0xc000010138</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">a1 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc0000080a8</span> <span class="number">0xc000010138</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">arr [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc0000080f0</span> <span class="number">0xc000010138</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">arr [<span class="number">666</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc0000080f0</span> <span class="number">0xc000010138</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">a0 [<span class="number">666</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc000008078</span> <span class="number">0xc000010138</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">a1 [<span class="number">666</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc0000080a8</span> <span class="number">0xc000010138</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">a2 [<span class="number">666</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc0000080d8</span> <span class="number">0xc000010138</span> <span class="number">3</span> <span class="number">3</span></span><br></pre></td></tr></table></figure><p>从上面结果可以发现，都是使用的同一个底层数组，如果修改切片中的某个已有元素，那么所有的切片都可以看到。</p><p>当上面的showAddr函数中对切片在增加元素会发生什么？</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">showAddr</span><span class="params">(arr []<span class="type">int</span>)</span></span> []<span class="type">int</span> &#123;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;arr %v %p %p %d %d\n&quot;</span>, arr, &amp;arr, &amp;arr[<span class="number">0</span>], <span class="built_in">len</span>(arr), <span class="built_in">cap</span>(arr))</span><br><span class="line">    <span class="comment">// if len(arr) &gt; 0 &#123;</span></span><br><span class="line">    <span class="comment">//     arr[0] = 666</span></span><br><span class="line">    <span class="comment">// &#125;</span></span><br><span class="line">    arr = <span class="built_in">append</span>(arr, <span class="number">666</span>, <span class="number">999</span>)</span><br><span class="line">    fmt.Printf(<span class="string">&quot;arr %v %p %p %d %d\n&quot;</span>, arr, &amp;arr, &amp;arr[<span class="number">0</span>], <span class="built_in">len</span>(arr), <span class="built_in">cap</span>(arr))</span><br><span class="line">    <span class="keyword">return</span> arr</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    a0 := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">20</span>, <span class="number">30</span>&#125; <span class="comment">// len 3,cap 3</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0))</span><br><span class="line">    a1 := a0 <span class="comment">// a1新变量，a1是a0的header的副本，减少了内容的复制，底层数组保持才是内容，复制了标头值24bytes</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">    a2 := showAddr(a0) <span class="comment">// 对于切片来说，复制的是header（标头值）</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;a0 %v %p %p %d %d\n&quot;</span>, a0, &amp;a0, &amp;a0[<span class="number">0</span>], <span class="built_in">len</span>(a0), <span class="built_in">cap</span>(a0)) </span><br><span class="line">    fmt.Printf(<span class="string">&quot;a1 %v %p %p %d %d\n&quot;</span>, a1, &amp;a1, &amp;a1[<span class="number">0</span>], <span class="built_in">len</span>(a1), <span class="built_in">cap</span>(a1))</span><br><span class="line">    fmt.Printf(<span class="string">&quot;a2 %v %p %p %d %d\n&quot;</span>, a2, &amp;a2, &amp;a2[<span class="number">0</span>], <span class="built_in">len</span>(a2), <span class="built_in">cap</span>(a2))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line">a0 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc000100048</span> <span class="number">0xc00010a060</span> <span class="number">3</span> <span class="number">3</span></span><br><span class="line">a1 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc000100078</span> <span class="number">0xc00010a060</span> <span class="number">3</span> <span class="number">3</span>         </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~     </span><br><span class="line">arr [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc0001000c0</span> <span class="number">0xc00010a060</span> <span class="number">3</span> <span class="number">3</span>        </span><br><span class="line">arr [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span> <span class="number">666</span> <span class="number">999</span>] <span class="number">0xc0001000c0</span> <span class="number">0xc000120060</span> <span class="number">5</span> <span class="number">6</span></span><br><span class="line">a0 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc000100048</span> <span class="number">0xc00010a060</span> <span class="number">3</span> <span class="number">3</span>         </span><br><span class="line">a1 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span>] <span class="number">0xc000100078</span> <span class="number">0xc00010a060</span> <span class="number">3</span> <span class="number">3</span>         </span><br><span class="line">a2 [<span class="number">10</span> <span class="number">20</span> <span class="number">30</span> <span class="number">666</span> <span class="number">999</span>] <span class="number">0xc0001000a8</span> <span class="number">0xc000120060</span> <span class="number">5</span> <span class="number">6</span></span><br></pre></td></tr></table></figure><p>这时可以从上面结果发现showAddr传入的a0，在底层数组中在添加了两个元素，会发现返回的a2和之前的a0不共用一个底层数组了，a2换底层数组了，这使a2和a0就分道扬镳了。</p><p>其实将一个切片给一个标识符赋值时，这是使用值拷贝，但是切片拷贝的是标头值（header）。标头值内的指针也被复制，刚复制完都是指向的同一个底层数组罢了，但是一旦操作切片扩容了，另一个切片增加元素，那么就不能简单的归结为”切片是引用类型，拷贝了地址”这样的简单的话来解释了，这时就需要根据具体的问题来具体的分析了。</p><p><b style="color:red">Go语言值全都是值传递，整型、数组这样的类型的值是完全复制，slice、map、channel、interface、function这样的引用类型也是值拷贝，不过复制的是标头值（header）。</b></p><h4 id="截取子切片"><a href="#截取子切片" class="headerlink" title="截取子切片"></a>截取子切片</h4><p>就是选取当前切片中的一段生成一个新的切片，但是他们都是共同一个底层数组的，但是标头值（header）中的三个属性会变，截取的格式为slice[start:end]，坚持前包后不包的一个原则。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 截取子切片</span></span><br><span class="line">    s1 := []<span class="type">int</span>&#123;<span class="number">10</span>, <span class="number">30</span>, <span class="number">50</span>, <span class="number">70</span>, <span class="number">90</span>&#125; <span class="comment">// header控制slice： len cap array，pointer 这里的切片len和cap都为5</span></span><br><span class="line">    fmt.Println(<span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))   <span class="comment">// 打印的是header的len和cap</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s1); i++ &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%d: %d, %p\n&quot;</span>, i, s1[i], &amp;s1[i])</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s1: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s1, &amp;s1, &amp;s1[<span class="number">0</span>], <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">    s2 := s1 <span class="comment">// 这里是赋值语句，值复制，本质上是header的复制，是共用底层数组的</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s2: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s2, &amp;s2, &amp;s2[<span class="number">0</span>], <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2))</span><br><span class="line">    s3 := s1[:] <span class="comment">// 表示从头到尾，切出一个新的切片出来，标头值是新的，用header中len,cap表示底层数组的哪一段</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s3: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s3, &amp;s3, &amp;s3[<span class="number">0</span>], <span class="built_in">len</span>(s3), <span class="built_in">cap</span>(s3))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    s4 := s1[<span class="number">1</span>:] <span class="comment">// 这个表示索引0的元素不要了，也是就说的是将头掐了，但是还是共用底层数组，header中的指针偏移1，len为4，cap为4</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s4: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s4, &amp;s4, &amp;s4[<span class="number">0</span>], <span class="built_in">len</span>(s4), <span class="built_in">cap</span>(s4))</span><br><span class="line">    s5 := s1[<span class="number">1</span>:<span class="number">4</span>] <span class="comment">// 掐头去尾，共用底层数组，header中的指针偏移1，len为3，cap为4</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s5: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s5, &amp;s5, &amp;s5[<span class="number">0</span>], <span class="built_in">len</span>(s5), <span class="built_in">cap</span>(s5))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    s6 := s1[:<span class="number">4</span>] <span class="comment">// 这个就是去掉尾巴，但还是共用底层数组，header中的指针偏移1，len为4，cap为5</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s6: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s6, &amp;s6, &amp;s6[<span class="number">0</span>], <span class="built_in">len</span>(s6), <span class="built_in">cap</span>(s6))</span><br><span class="line">    <span class="comment">//s6 = append(s6, 666) // 因为s6之前的len为4，cap为5，所以这时添加一个元素是可以添加的，但是再要添加元素的话就会容量爆了，出现扩容了</span></span><br><span class="line">    <span class="comment">//fmt.Printf(&quot;s6: %v %p, [%p, %-2d %-2d]\n&quot;, s6, &amp;s6, &amp;s6[0], len(s6), cap(s6))</span></span><br><span class="line">    <span class="comment">//fmt.Printf(&quot;s1: %v %p, [%p, %-2d %-2d]\n&quot;, s1, &amp;s1, &amp;s1[0], len(s1), cap(s1))</span></span><br><span class="line">    <span class="comment">//fmt.Printf(&quot;s2: %v %p, [%p, %-2d %-2d]\n&quot;, s2, &amp;s2, &amp;s2[0], len(s2), cap(s2))</span></span><br><span class="line">    <span class="comment">//fmt.Printf(&quot;s3: %v %p, [%p, %-2d %-2d]\n&quot;, s3, &amp;s3, &amp;s3[0], len(s3), cap(s3))</span></span><br><span class="line">    <span class="comment">//fmt.Printf(&quot;s4: %v %p, [%p, %-2d %-2d]\n&quot;, s4, &amp;s4, &amp;s4[0], len(s4), cap(s4))</span></span><br><span class="line">    <span class="comment">//fmt.Printf(&quot;s5: %v %p, [%p, %-2d %-2d]\n&quot;, s5, &amp;s5, &amp;s5[0], len(s5), cap(s5))</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    s7 := s1[<span class="number">1</span>:<span class="number">1</span>] <span class="comment">// 共用底层数组，header中指针偏移1，len为0，cap为4</span></span><br><span class="line">    <span class="comment">// fmt.Printf(&quot;s7: %v %p, [%p, %-2d %-2d]\n&quot;, s7, &amp;s7, &amp;s7[0], len(s7), cap(s7)) // 由于len为0，这里就不能使用s7[0]了，用了运行时会报错的</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s7: %v %p, [%-2d %-2d]\n&quot;</span>, s7, &amp;s7, <span class="built_in">len</span>(s7), <span class="built_in">cap</span>(s7))</span><br><span class="line">    s7 = <span class="built_in">append</span>(s7, <span class="number">11</span>, <span class="number">22</span>) <span class="comment">// 这时在s7中添加两个元素，这时的s7中的len为2，cap为4，因为还是共用底层数组的，s7是从s1[1]开始添加元素的，这样就使得s1[1]=11,s1[2]=22了，相当于修改了其中的值</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s1: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s1, &amp;s1, &amp;s1[<span class="number">0</span>], <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s7: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s7, &amp;s7, &amp;s7[<span class="number">0</span>], <span class="built_in">len</span>(s7), <span class="built_in">cap</span>(s7))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line">    s7 = <span class="built_in">append</span>(s7, <span class="number">33</span>, <span class="number">44</span>, <span class="number">55</span>) <span class="comment">// 这时还在s7上面新增3个元素的话，就超出了当前的cap值，就会出现扩容的情况，这时的s7就换成新的底层数组了</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s7: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s7, &amp;s7, &amp;s7[<span class="number">0</span>], <span class="built_in">len</span>(s7), <span class="built_in">cap</span>(s7))</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s1: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s1, &amp;s1, &amp;s1[<span class="number">0</span>], <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    s8 := s1[<span class="number">4</span>:<span class="number">4</span>] <span class="comment">// 有掐头，去尾，header中指针偏移4，len为0，cap为1，这里还是共用底层数组，因为最后一个元素是没有在这个切片中的，这个s8切片还可以容纳一个元素，再多的话就需要扩容了</span></span><br><span class="line">    <span class="comment">// fmt.Printf(&quot;s8: %d %p, [%p, %-2d %-2d]\n&quot;, s8, &amp;s8, &amp;s8[0], len(s8), cap(s8)) // 因为这个切片的长度为0，要使用s8[0]的话是会报错的</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s8: %v %p, [%-2d %-2d]\n&quot;</span>, s8, &amp;s8, <span class="built_in">len</span>(s8), <span class="built_in">cap</span>(s8))</span><br><span class="line"></span><br><span class="line">    s9 := s1[<span class="number">5</span>:<span class="number">5</span>] <span class="comment">// 有掐头，去尾，header中指针偏移5，len为0，cap为0，这里还是共用底层数组，这时往这个切片中添加元素的话就直接扩容</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s9: %v %p, [%-2d %-2d]\n&quot;</span>, s9, &amp;s9, <span class="built_in">len</span>(s9), <span class="built_in">cap</span>(s9))</span><br><span class="line">    s9 = <span class="built_in">append</span>(s9, <span class="number">11</span>) <span class="comment">// len 1 cap 1，这时的s9切片是使用的新的底层数组了，和s1没有关系了</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s1: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s1, &amp;s1, &amp;s1[<span class="number">0</span>], <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s9: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s9, &amp;s9, &amp;s9[<span class="number">0</span>], <span class="built_in">len</span>(s9), <span class="built_in">cap</span>(s9))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">上面代码的输出结果：</span><br><span class="line">5 5</span><br><span class="line">0: 10, 0xc00000e360</span><br><span class="line">1: 30, 0xc00000e368                                     </span><br><span class="line">2: 50, 0xc00000e370                                     </span><br><span class="line">3: 70, 0xc00000e378                                     </span><br><span class="line">4: 90, 0xc00000e380                                     </span><br><span class="line">s1: [10 30 50 70 90] 0xc000008078, [0xc00000e360, 5  5 ]</span><br><span class="line">s2: [10 30 50 70 90] 0xc0000080a8, [0xc00000e360, 5  5 ]</span><br><span class="line">s3: [10 30 50 70 90] 0xc0000080d8, [0xc00000e360, 5  5 ]</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               </span><br><span class="line">s4: [30 50 70 90] 0xc000008108, [0xc00000e368, 4  4 ]   </span><br><span class="line">s5: [30 50 70] 0xc000008138, [0xc00000e368, 3  4 ]      </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~               </span><br><span class="line">s6: [10 30 50 70] 0xc000008168, [0xc00000e360, 4  5 ]</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">s7: [] 0xc000008198, [0  4 ]</span><br><span class="line">s1: [10 11 22 70 90] 0xc000008078, [0xc00000e360, 5  5 ]</span><br><span class="line">s7: [11 22] 0xc000008198, [0xc00000e368, 2  4 ]</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">s7: [11 22 33 44 55] 0xc000008198, [0xc000014600, 5  8 ]</span><br><span class="line">s1: [10 11 22 70 90] 0xc000008078, [0xc00000e360, 5  5 ]</span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">s8: [] 0xc000008228, [0  1 ]</span><br><span class="line">s9: [] 0xc000008258, [0  0 ]</span><br><span class="line">s1: [10 11 22 70 90] 0xc000008078, [0xc00000e360, 5  5 ]</span><br><span class="line">s9: [11] 0xc000008258, [0xc00001a230, 1  1 ]</span><br></pre></td></tr></table></figure><p><img src="/images/son-slice.png"></p><p>从上面的代码和图可以看出，截取的这个操作都是从同一个底层数组上取的段，所以子切片和原始切片共同一个底层数组。</p><ul><li>通过指针可以确定底层数组是从哪里开始共享的</li><li>容量是底层数组从偏移的元素到结尾能容纳多少个元素</li></ul><p>截取子切片本质上是利用原来的切片的部分元素，是共用一个底层数组的，所以截取子切片操作是没有可能构建一个新的底层数组的，因此也不会导致扩容。</p><p>其实数组也是可以切片，会生成新的切片。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="comment">// 数组切片</span></span><br><span class="line">    s1 := [...]<span class="type">int</span>&#123;<span class="number">20</span>, <span class="number">40</span>, <span class="number">60</span>, <span class="number">80</span>, <span class="number">100</span>&#125; <span class="comment">// len为5，cap也为5，这是定义的一个数组</span></span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(s1); i++ &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%d: %v, %p\n&quot;</span>, i, s1[i], &amp;s1[i])</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s1: %v %p [%p,%-2d,%-2d]\n&quot;</span>, s1, &amp;s1, &amp;s1[<span class="number">0</span>], <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    s2 := s1[<span class="number">1</span>:]           <span class="comment">// 掐头，指的是将底层数组的第一个元素掐掉不要，返回的是切片，s2本质就是依赖于底层数组的header，header中的指针偏移了1，len为4，cap也为4</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%T\n&quot;</span>, s2) <span class="comment">// 类型是[]int,这里切数组的话就是将这个数组当成底层数组来切了</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s2: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s2, &amp;s2, &amp;s2[<span class="number">0</span>], <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    s2[<span class="number">0</span>] = <span class="number">666</span> <span class="comment">// 这里将s2修改了第一个元素，相当于修改了s1数组的第二个元素，所以这里的s1：[20 666 60 80 100] s2：[666 60 80 100]</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s1: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s1, &amp;s1, &amp;s1[<span class="number">0</span>], <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s2: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s2, &amp;s2, &amp;s2[<span class="number">0</span>], <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2))</span><br><span class="line">    fmt.Println(<span class="string">&quot;~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~&quot;</span>)</span><br><span class="line"></span><br><span class="line">    s2 = <span class="built_in">append</span>(s2, <span class="number">110</span>, <span class="number">130</span>) <span class="comment">// 这里触发了底层数组的扩容，前面的s2的len和cap都是4了，在使用append添加元素就会扩容，分道扬镳，这时s2就使用新的底层数组了，将之前的值拷贝过来在新增元素</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;s1: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s1, &amp;s1, &amp;s1[<span class="number">0</span>], <span class="built_in">len</span>(s1), <span class="built_in">cap</span>(s1))</span><br><span class="line">    fmt.Printf(<span class="string">&quot;s2: %v %p, [%p, %-2d %-2d]\n&quot;</span>, s2, &amp;s2, &amp;s2[<span class="number">0</span>], <span class="built_in">len</span>(s2), <span class="built_in">cap</span>(s2))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">上面代码的输出结果：</span><br><span class="line">0: 20, 0xc00000e360</span><br><span class="line">1: 40, 0xc00000e368</span><br><span class="line">2: 60, 0xc00000e370</span><br><span class="line">3: 80, 0xc00000e378</span><br><span class="line">4: 100, 0xc00000e380</span><br><span class="line">s1: [20 40 60 80 100] 0xc00000e360 [0xc00000e360,5 ,5 ]   </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">[]int</span><br><span class="line">s2: [40 60 80 100] 0xc000008078, [0xc00000e368, 4  4 ]    </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">s1: [20 666 60 80 100] 0xc00000e360, [0xc00000e360, 5  5 ]</span><br><span class="line">s2: [666 60 80 100] 0xc000008078, [0xc00000e368, 4  4 ]   </span><br><span class="line">~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~</span><br><span class="line">s1: [20 666 60 80 100] 0xc00000e360, [0xc00000e360, 5  5 ]</span><br><span class="line">s2: [666 60 80 100 110 130] 0xc000008078, [0xc0000145c0, 6  8 ]</span><br></pre></td></tr></table></figure><p><strong>切片的总结：</strong></p><ul><li>使用slice[start:end]表示截取切片，新切片的长度为end-start，规则就是前包后不包</li><li>start的缺省是表示从索引0开始，最大的值是不能超过cap(slice)</li><li>end的缺省是len(slice)，表示取到末尾，包含了最后一个元素，要注意这里的缺省不是cap而是len<ul><li>a1[4:]相当于a1[4:len(a1)]</li></ul></li><li>如果start和end都使用缺省的话，就相当于从头取到尾</li><li>start和end同时给定值是，这时的start &lt;&#x3D; end<ul><li><strong>start、end最大都不可以超过容量值</strong></li><li>假设当前容量为8，长度为5，有以下情况<ul><li>s1[:]，这样是可以的，共用底层数组，相当于对header的拷贝，也就是指针、长度、容量都是一样的，也就是cap为8，len为5</li><li>s1[1:]，这样是可以的，共用底层数组，相当于跳过了底层数组中的第一个元素，header中指针偏移1，长度len为4，容量cap为7</li><li>s1[1:4]，这样也是可以的，共用的底层数组，掐头、去尾，header中的指针偏移1，长度len为3，容量cap为7</li><li>s1[:8]，这样是可以的，共用的底层数组，end最多写成8（因为后面不包），如果写成s1[:9]的话就不可以了，end是不可以超过容量的，所以改切片长度和容量都为8，这时如果append这个切片的话就会扩容了</li><li>s1[8:]，这写法是错误的，因为这时的end用的是缺省为当前长度5，这里需要符合start &lt;&#x3D; end</li><li>s1[8:8]，这样写是可以的，共用底层数组，但是这个切片的容量和长度都为0了，要注意这个和s1[:8]的区别，这时这个切片要append的话就扩容生成新的底层数组了</li><li>s1[7:7]，这样写是可以的，共用底层数组，header中的指针偏移7，长度为0，容量为1，这时这个切片还可以append一个元素，再多添加的话就扩容</li><li>s1[0:0]，这样写是可以的，共用底层数组，这个切片的长度为0，容量为8</li></ul></li></ul></li><li>新的切片刚产生时，和原序列（数组、切片）开始共用同一个底层数组，但是每一个切片都自己独立的内存空间保存指针、len、cap</li><li>一旦一个切片扩容，就和原来共用的一个底层数组的序列分道扬镳，从此陌路</li><li>掐头，会导致首地址的变化，从而会引起cap的变化</li><li>去尾，会导致len的变化，但是要append的话就要小心了，添加的元素加上当前的元素个数没超过容量的话添加的元素会覆盖之前的元素，当超过了容量时就要扩容了，和之前的底层数组就没有关系了</li></ul>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Golang分支循环与随机数</title>
      <link href="/post/e388ed3e.html"/>
      <url>/post/e388ed3e.html</url>
      
        <content type="html"><![CDATA[<h1 id="分支、循环、随机数"><a href="#分支、循环、随机数" class="headerlink" title="分支、循环、随机数"></a>分支、循环、随机数</h1><h2 id="单分支"><a href="#单分支" class="headerlink" title="单分支"></a>单分支</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition &#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 例子</span></span><br><span class="line"><span class="keyword">if</span> <span class="number">5</span> &gt; <span class="number">1</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;5大于1&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 在Go语言中，花括号一定要跟着if、for、func等行的最后，不然的话就会出现语法错误，这有就是为了解决C风格、Java风格的争斗了。</p><ul><li>condition这个必须是bool型，在go语言中不能使用其他类型来等效为布尔值，if 1 {}这样是错误的。</li><li>语句块中可以写其他的代码。</li><li>如果condition为true的话才能执行其后的代码块。</li></ul><h2 id="多分支"><a href="#多分支" class="headerlink" title="多分支"></a>多分支</h2><ul><li>多分支结构，从上向下依次判断分支的条件，只要一个条件成立，其后的语句块将会被执行，那么其他的条件就都不会去执行了；</li><li>前一个分支条件被测试过，下一个条件相当于也隐含着这个条件；</li><li>写多分支的时候一定要考虑清除是否要写else分支，以防逻辑漏洞；</li><li>分支和循环都可以互相嵌套，但是嵌套不宜过深，特别是循环嵌套的时候，最多两层循环就差不多了，在多的话就需要思考一下逻辑了；</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> condition1 &#123;</span><br><span class="line">    代码块<span class="number">1</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> condition2 &#123;</span><br><span class="line">    代码块<span class="number">2</span></span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> condition3 &#123;</span><br><span class="line">    代码块<span class="number">3</span></span><br><span class="line">&#125; ... &#123;</span><br><span class="line">    ...</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> conditionN &#123;</span><br><span class="line">    代码块N</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    代码块</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>平摊式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a := <span class="number">6</span></span><br><span class="line"><span class="keyword">if</span> a &lt; <span class="number">0</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;negative&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> a &gt; <span class="number">0</span> &#123; <span class="comment">// 走到这里一定 a 不小于 0</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;positive&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123; <span class="comment">// 走到这里一定 a 不大于、也不小于 0</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;zero&quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>嵌套式</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a := <span class="number">6</span></span><br><span class="line"><span class="keyword">if</span> a == <span class="number">0</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;zero&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> a &lt; <span class="number">0</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;negative&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123; <span class="comment">// 走到这里一定 a 不小于 0</span></span><br><span class="line">        fmt.Println(<span class="string">&quot;positive&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>示例：判断奇偶数</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> num <span class="type">int</span></span><br><span class="line">    fmt.Scanf(<span class="string">&quot;%d&quot;</span>, &amp;num) <span class="comment">// Scan是运行这个go文件时可以接受用户从控制台中传入的值</span></span><br><span class="line">    <span class="keyword">if</span> num%<span class="number">2</span> == <span class="number">1</span> &#123; <span class="comment">// 这里还可以将num%2换成num&amp;1 这里的&amp;符号是位与运算符</span></span><br><span class="line">        fmt.Printf(<span class="string">&quot;你输入的值 %d 为奇数&quot;</span>, num)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;你输入的值 %d 为偶数&quot;</span>, num)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="switch分支"><a href="#switch分支" class="headerlink" title="switch分支"></a>switch分支</h2><p>这里要特别注意的是Go语言的switch有别于C语言的switch，这里的case是独立代码块，不能穿透。</p><p>go的switch分支语法：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">switch</span> var1 &#123;</span><br><span class="line"><span class="keyword">case</span> val1:</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">case</span> val2:</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">a := <span class="number">20</span></span><br><span class="line"><span class="keyword">switch</span> a &#123; <span class="comment">// 这里等待比较的是a</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;ten&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">20</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;twenty&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>: <span class="comment">// 或的关系</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;&gt;=30 and &lt;=50&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;other&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">也可以写成</span><br><span class="line"><span class="keyword">switch</span> a := <span class="number">20</span>; a &#123; <span class="comment">// 这里等待比较的是a</span></span><br><span class="line"><span class="keyword">case</span> <span class="number">10</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;ten&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">20</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;twenty&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> <span class="number">30</span>, <span class="number">40</span>, <span class="number">50</span>: <span class="comment">// 或的关系</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;&gt;=30 and &lt;=50&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;other&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这两种方法都是可以的，但是这里就存在于全局的作用域和局部的作用域了，第一种a是可以switch外的语句再次使用的，而第二种就只能在这个单独的switch使用了。</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">a := <span class="number">23</span></span><br><span class="line"><span class="keyword">switch</span> &#123; <span class="comment">// 没有待比较变量，意味着表达式是true，是布尔型</span></span><br><span class="line"><span class="keyword">case</span> a &gt; <span class="number">0</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;positive&quot;</span>)</span><br><span class="line"><span class="keyword">case</span> a &lt; <span class="number">0</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;negative&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;zero&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">也可以写成</span><br><span class="line"><span class="keyword">switch</span> a := <span class="number">23</span>; &#123; <span class="comment">// 没有待比较变量，意味着表达式是true，是布尔型</span></span><br><span class="line"><span class="keyword">case</span> a &gt; <span class="number">0</span>: <span class="comment">// 如果待比较值是true，a &gt; 0如果返回true，就进入</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;positive&quot;</span>)</span><br><span class="line">    <span class="comment">// fallthrough // 穿透</span></span><br><span class="line"><span class="keyword">case</span> a &lt; <span class="number">0</span>: <span class="comment">// 如果待比较值是true，a &lt; 0如果返回true，就进入</span></span><br><span class="line">    fmt.Println(<span class="string">&quot;negative&quot;</span>)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">    fmt.Println(<span class="string">&quot;zero&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 这两种方法都是可以的，但是这里就存在于全局的作用域和局部的作用域了，第一种a是可以switch外的语句再次使用的，而第二种就只能在这个单独的switch使用了。</span></span><br></pre></td></tr></table></figure><p>在C语言中是有switch穿透这个说法的，而在go语言中就没有这个说法了，但是是在是想要实现穿透的效果的话，我们可以使用 <span style="background-color:gray">fallthrough</span> 来穿透当前的case语句块，但是大家在使用C语言的时候，一般都不想使用这种穿透，在非必要的情况下不要使用 <span style="background-color:gray">fallthrough</span> 。</p><p>示例：工作日与周末的判断</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> a <span class="type">int</span></span><br><span class="line">    fmt.Scanf(<span class="string">&quot;%d&quot;</span>, &amp;a)</span><br><span class="line">    <span class="keyword">switch</span> a &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;周天&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;周一&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;周二&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;周三&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;周四&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;周五&quot;</span>)</span><br><span class="line">    <span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">        fmt.Println(<span class="string">&quot;周六&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">0</span> || a == <span class="number">6</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;这是周末&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> a &gt;= <span class="number">1</span> &amp;&amp; a &lt;= <span class="number">5</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;这是工作日&quot;</span>)</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        fmt.Println(<span class="string">&quot;请输入正确的值0-6&quot;</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="特殊if分支"><a href="#特殊if分支" class="headerlink" title="特殊if分支"></a>特殊if分支</h2><p>在switch可以写成switch a :&#x3D;18; a这种形式，也就是可以在表达式a前面写一个语句后再接一个分号结尾就好，if语句也是可以这样的；这样的语法的话定义的变量作用域只能只能在当前的if或switch中使用。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> score, line := <span class="number">90</span>, <span class="number">80</span>; score &gt; line &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;perfect&quot;</span>)</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    fmt.Println(<span class="string">&quot;good&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// score,line作用域只能在当前的if语句中使用</span></span><br></pre></td></tr></table></figure><h2 id="for循环"><a href="#for循环" class="headerlink" title="for循环"></a>for循环</h2><p>注意：Go语言中是没有提供while关键字的，在go语言中就for循环。</p><h3 id="C分格的for循环"><a href="#C分格的for循环" class="headerlink" title="C分格的for循环"></a>C分格的for循环</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> [初始操作];[循环条件];[循环后操作] &#123;</span><br><span class="line">    循环体</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>初始操作：第一次进入循环前执行，语句只能执行一次，之后不再执行</li><li>循环条件：要求返回的值为bool，每次进入循环体钱进行判断，如果每次条件满足返回true，就进入循环执行一次循环体；否则循环结束</li><li>循环后操作：每次循环体执行完，在执行下一次循环条件之前，要执行一下该操作</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> a := <span class="number">0</span>; a &lt; <span class="number">10</span>; a++ &#123;</span><br><span class="line">    fmt.Println(a)</span><br><span class="line">&#125; <span class="comment">// 初始操作中的短格式定义的a的作用域只能在这个for中使用</span></span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 特殊写法</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">6</span>; i &lt; <span class="number">10</span>; &#123;&#125;    <span class="comment">// 没有循环后的操作，这句代码的话会形成死循环，因为i定义的值为6，条件是一直符合的</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="number">5</span>; ; &#123;&#125; <span class="comment">// 没条件就相当于true</span></span><br><span class="line"><span class="keyword">for</span> i &lt; <span class="number">10</span> &#123;&#125; <span class="comment">// for condition &#123;&#125;，condition就是循环条件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> ;; &#123;&#125; <span class="comment">// 死循环</span></span><br><span class="line"><span class="comment">// 死循环简写如下</span></span><br><span class="line"><span class="keyword">for</span> &#123;&#125; <span class="comment">// 死循环 相对于 for true &#123;&#125;</span></span><br></pre></td></tr></table></figure><p>示例：求一个数的阶乘</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    <span class="keyword">var</span> a <span class="type">int</span></span><br><span class="line">    c := <span class="number">1</span></span><br><span class="line">    fmt.Scanf(<span class="string">&quot;%d&quot;</span>, &amp;a)</span><br><span class="line">    <span class="keyword">for</span> b := <span class="number">1</span>; b &lt;= a; b++ &#123;</span><br><span class="line">        c *= b</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Print(c, <span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="continue"><a href="#continue" class="headerlink" title="continue"></a>continue</h4><p>中止当前这一次循环体执行，直接执行“循环后操作”，进入到下一次的循环的条件判断</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span> == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h4 id="break"><a href="#break" class="headerlink" title="break"></a>break</h4><p>终止当前循环的执行，结束了</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; ; i++ &#123;</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span> == <span class="number">0</span> &#123; <span class="comment">// i &amp; 1 == 0 也是判断是否是偶数的</span></span><br><span class="line">        <span class="keyword">continue</span> <span class="comment">// 结束当前循环的这一趟的执行，执行第三部分后，直接去测试，看看能否进行下一趟</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> i &gt;= <span class="number">10</span> &#123;</span><br><span class="line">        <span class="keyword">break</span> <span class="comment">// 终止打破了当前循环，当前循环结束执行</span></span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><p>除了break，函数的return结束函数执行，当然也是可以把函数中的循环打断的。</p><h4 id="goto和label"><a href="#goto和label" class="headerlink" title="goto和label"></a>goto和label</h4><p>这个是一个被很多语言尘封或者废弃的关键字，它会破坏结构化编程，但是确实能够便利的无线跳转。</p><ul><li>跳出多重循环使用，但是问题是为什么要用多重循环？</li><li>到同一处标签处统一处理，例如统一错误处理。问题是，写个函数也可以实现。</li></ul><p>有时候也能简化一些代码，但是它是双刃剑，不要轻易使用。</p><p>goto需要配合标签label使用，label就像代码中的锚点，goto将无条件跳到那里开始向后执行代码。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i := <span class="number">0</span>; ; i++ &#123;</span><br><span class="line">    <span class="keyword">if</span> i%<span class="number">2</span> == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> i &gt; <span class="number">10</span> &#123;</span><br><span class="line">        <span class="keyword">goto</span> condition</span><br><span class="line">    &#125;</span><br><span class="line">    fmt.Println(i)</span><br><span class="line">&#125;</span><br><span class="line">condition:</span><br><span class="line">    fmt.Println(<span class="string">&quot;done&quot;</span>)</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">1</span>   </span><br><span class="line"><span class="number">3</span>   </span><br><span class="line"><span class="number">5</span>   </span><br><span class="line"><span class="number">7</span>   </span><br><span class="line"><span class="number">9</span>   </span><br><span class="line">done</span><br></pre></td></tr></table></figure><p>continue、break也是可以指定label的，方便某些循环使用，但是，建议不要这么写，弄不好的话代码逻辑就会很乱。</p><h3 id="for-range"><a href="#for-range" class="headerlink" title="for range"></a>for range</h3><table><thead><tr><th>类型</th><th>变量</th><th>Range expression</th><th>第一个值</th><th>第二个值</th></tr></thead><tbody><tr><td>array or slice</td><td>a</td><td>[n]E, *[n]E []E</td><td>index i int</td><td>a[i] E</td></tr><tr><td>string</td><td>s</td><td>“abcd”</td><td>index i int utf-8字节偏移</td><td>unicode值 rune</td></tr><tr><td>map</td><td>m</td><td>map[K]V</td><td>key k K</td><td>m[k] V</td></tr><tr><td>channel</td><td>c</td><td>chan E, &lt;-chan E 通道或只读通道</td><td>element e E</td><td>无</td></tr></tbody></table><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">a := <span class="string">&quot;0828测试&quot;</span></span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> a &#123; <span class="comment">// for range读取字符串时返回的是一个个字符（整数），而字符是ASCII或Unicode对应的编码值</span></span><br><span class="line">    fmt.Printf(<span class="string">&quot;%d %[2]d %[2]c %#[2]X\n&quot;</span>, i, v)</span><br><span class="line">&#125;</span><br><span class="line">b := <span class="string">&quot;测试&quot;</span></span><br><span class="line">fmt.Printf(<span class="string">&quot;%x\n&quot;</span>, b) <span class="comment">// 中文在字符串中是UTF-8编码，是占3个字节的</span></span><br><span class="line">fmt.Println(<span class="string">&quot;\xe6\xb5\x8b\xe8\xaf\x95&quot;</span>)</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">0</span> <span class="number">48</span> <span class="number">0</span> <span class="number">0X30</span></span><br><span class="line"><span class="number">1</span> <span class="number">56</span> <span class="number">8</span> <span class="number">0X38</span>      </span><br><span class="line"><span class="number">2</span> <span class="number">50</span> <span class="number">2</span> <span class="number">0X32</span>      </span><br><span class="line"><span class="number">3</span> <span class="number">56</span> <span class="number">8</span> <span class="number">0X38</span>      </span><br><span class="line"><span class="number">4</span> <span class="number">27979</span> 测 <span class="number">0X6D4B</span></span><br><span class="line"><span class="number">7</span> <span class="number">35797</span> 试 <span class="number">0X8BD5</span></span><br><span class="line">e6b58be8af95     </span><br><span class="line">测试</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">这里的索引就是字节的偏移量，从索引可以看出，中文在字符串中是utf<span class="number">-8</span>编码，占用<span class="number">3</span>个字节</span><br><span class="line">但是<span class="keyword">for</span> <span class="keyword">range</span>读取字符串时是返回的是一个个字符（整数），而字符是ASCII或Unicode对应的编码值</span><br><span class="line">%d 这里打印的是Unicode编码值</span><br><span class="line">%c 打印的是字符</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">arr := [<span class="number">5</span>]<span class="type">int</span>&#123;<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>&#125;</span><br><span class="line"><span class="keyword">for</span> i, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">    fmt.Println(i, v, arr[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只打印索引</span></span><br><span class="line"><span class="keyword">for</span> i := <span class="keyword">range</span> arr &#123;</span><br><span class="line">    fmt.Println(i, arr[i])</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 只打印值</span></span><br><span class="line"><span class="keyword">for</span> _, v := <span class="keyword">range</span> arr &#123;</span><br><span class="line">    fmt.Print(v, <span class="string">&quot; &quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">控制台输出：</span><br><span class="line"><span class="number">0</span> <span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span>     </span><br><span class="line"><span class="number">2</span> <span class="number">5</span> <span class="number">5</span>     </span><br><span class="line"><span class="number">3</span> <span class="number">7</span> <span class="number">7</span>     </span><br><span class="line"><span class="number">4</span> <span class="number">9</span> <span class="number">9</span>     </span><br><span class="line"><span class="number">0</span> <span class="number">1</span>       </span><br><span class="line"><span class="number">1</span> <span class="number">3</span>       </span><br><span class="line"><span class="number">2</span> <span class="number">5</span>       </span><br><span class="line"><span class="number">3</span> <span class="number">7</span>       </span><br><span class="line"><span class="number">4</span> <span class="number">9</span>       </span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">5</span> <span class="number">7</span> <span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="随机数"><a href="#随机数" class="headerlink" title="随机数"></a>随机数</h2><p>标准库”math&#x2F;rand”</p><p>我们使用的是伪随机数，是内部写好的公式计算出来的，这公式运行提供一个种子，有这个种子作为起始值来开始计算。</p><ul><li>src :&#x3D; rand.NewSource(100)，使用种子100创建一个随机数源</li><li>rand.New(rand.NewSource(time.Now().UnixNano()))，利用当前时间的纳秒值来做种子</li><li>r10 :&#x3D; rand.New(src)，使用源创建随机生成器</li><li>r10.Intn(5)，返回[0-5)的随机整数</li></ul><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">    <span class="string">&quot;fmt&quot;</span></span><br><span class="line">    <span class="string">&quot;math/rand&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">main</span><span class="params">()</span></span> &#123;</span><br><span class="line">    src := rand.NewSource(<span class="number">100</span>)</span><br><span class="line">    r10 := rand.New(src)</span><br><span class="line">    r1 := rand.New(rand.NewSource(<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="number">10</span>; i++ &#123;</span><br><span class="line">        fmt.Printf(<span class="string">&quot;%d %d %d\n&quot;</span>, r10.Intn(<span class="number">5</span>), r1.Intn(<span class="number">5</span>), rand.Intn(<span class="number">5</span>))</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>全局随机数生成器globalRand</p><p>在go1.20版本之前它的种子是默认为1的，<span style="background-color:gray">var globalRand &#x3D; New(&amp;lockedSource{src: NewSource(1).(*rngSource)})</span> ，如果要更改globalRand的种子的话，就需要使用rand.Seed(2)修改种子，<span style="background-color:gray">rand.Intn(5)</span> 就是使用种子来生成随机数。</p><p>在go1.20版本之后，globalRand就已经改变成使用随机种子了，参考官方文档：<a href="https://go.dev/doc/go1.20">https://go.dev/doc/go1.20</a></p><p>如果想使用旧版globalRand的行为，可以手动设定种子源 <span style="background-color:gray">rand.Seed(1)</span> 或使用环境变量 <span style="background-color:gray">os.Setenv(“GODEBUG”, “randautoseed&#x3D;0”)</span> 。  </p>]]></content>
      
      
      <categories>
          
          <category> Golang </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Golang </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建nexus私仓</title>
      <link href="/post/69724f3e.html"/>
      <url>/post/69724f3e.html</url>
      
        <content type="html"><![CDATA[<p>Nexus是一个强大的maven仓库管理器，它极大地简化了自己内部仓库的维护和外部仓库的访问。</p><p>maven的官方仓库： <a href="https://repo.maven.apache.org/">https://repo.maven.apache.org/</a></p><p>Nexus官方下载地址：<a href="https://help.sonatype.com/repomanager3/product-information/download">https://help.sonatype.com/repomanager3/product-information/download</a></p><p><img src="/images/nexus-download.png"></p><h1 id="部署Nexus"><a href="#部署Nexus" class="headerlink" title="部署Nexus"></a>部署Nexus</h1><p>安装的内存推荐使用4G或以上，内存太小的话会导致无法启动的服务的。</p><p>系统安装要求文档： <a href="https://help.sonatype.com/repomanager3/product-information/system-requirements">https://help.sonatype.com/repomanager3/product-information/system-requirements</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装nexus之前也需要安装jdk环境，nexus也是依赖于java环境的，在这里我准备了oracle的jdk和一个安装脚本。</span></span><br><span class="line">root@master1:~<span class="comment"># ls</span></span><br><span class="line">jdk-8u311-all-linux-x64.tar.gz  snap</span><br><span class="line">root@master1:~<span class="comment"># tar xf jdk-8u311-all-linux-x64.tar.gz</span></span><br><span class="line">root@master1:~<span class="comment"># ls</span></span><br><span class="line">install_jdk.sh  jdk-8u311-all-linux-x64.tar.gz  jdk-8u311-linux-x64.tar.gz  snap</span><br><span class="line">root@master1:~<span class="comment"># cat install_jdk.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">DIR=`<span class="built_in">pwd</span>`</span><br><span class="line">JDK_FILE=<span class="string">&quot;jdk-8u311-linux-x64.tar.gz&quot;</span></span><br><span class="line">JDK_DIR=<span class="string">&quot;/usr/local&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">color</span></span> () &#123;</span><br><span class="line">    RES_COL=60</span><br><span class="line">    MOVE_TO_COL=<span class="string">&quot;echo -en \\033[<span class="variable">$&#123;RES_COL&#125;</span>G&quot;</span></span><br><span class="line">    SETCOLOR_SUCCESS=<span class="string">&quot;echo -en \\033[1;32m&quot;</span></span><br><span class="line">    SETCOLOR_FAILURE=<span class="string">&quot;echo -en \\033[1;31m&quot;</span></span><br><span class="line">    SETCOLOR_WARNING=<span class="string">&quot;echo -en \\033[1;33m&quot;</span></span><br><span class="line">    SETCOLOR_NORMAL=<span class="string">&quot;echo -en \E[0m&quot;</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;<span class="variable">$2</span>&quot;</span> &amp;&amp; <span class="variable">$MOVE_TO_COL</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;[&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="variable">$1</span> = <span class="string">&quot;success&quot;</span> -o <span class="variable">$1</span> = <span class="string">&quot;0&quot;</span> ] ;<span class="keyword">then</span></span><br><span class="line">        <span class="variable">$&#123;SETCOLOR_SUCCESS&#125;</span></span><br><span class="line">        <span class="built_in">echo</span> -n $<span class="string">&quot;  OK  &quot;</span>    </span><br><span class="line">    <span class="keyword">elif</span> [ <span class="variable">$1</span> = <span class="string">&quot;failure&quot;</span> -o <span class="variable">$1</span> = <span class="string">&quot;1&quot;</span>  ] ;<span class="keyword">then</span></span><br><span class="line">        <span class="variable">$&#123;SETCOLOR_FAILURE&#125;</span></span><br><span class="line">        <span class="built_in">echo</span> -n $<span class="string">&quot;FAILED&quot;</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="variable">$&#123;SETCOLOR_WARNING&#125;</span></span><br><span class="line">        <span class="built_in">echo</span> -n $<span class="string">&quot;WARNING&quot;</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="variable">$&#123;SETCOLOR_NORMAL&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> -n <span class="string">&quot;]&quot;</span></span><br><span class="line">    <span class="built_in">echo</span>                                                                                                                              </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">install_jdk</span></span> () &#123;</span><br><span class="line"><span class="keyword">if</span> !  [  -f <span class="string">&quot;<span class="variable">$DIR</span>/<span class="variable">$JDK_FILE</span>&quot;</span> ];<span class="keyword">then</span></span><br><span class="line">    color 1 <span class="string">&quot;<span class="variable">$JDK_FILE</span> 文件不存在&quot;</span> </span><br><span class="line">    <span class="built_in">exit</span>; </span><br><span class="line"><span class="keyword">elif</span> [ -d <span class="variable">$JDK_DIR</span>/jdk ];<span class="keyword">then</span></span><br><span class="line">    color 1  <span class="string">&quot;JDK 已经安装&quot;</span> </span><br><span class="line">    <span class="built_in">exit</span></span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">    [ -d <span class="string">&quot;<span class="variable">$JDK_DIR</span>&quot;</span> ] || <span class="built_in">mkdir</span> -pv <span class="variable">$JDK_DIR</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">tar xvf <span class="variable">$DIR</span>/<span class="variable">$JDK_FILE</span>  -C <span class="variable">$JDK_DIR</span></span><br><span class="line"><span class="built_in">cd</span>  <span class="variable">$JDK_DIR</span> &amp;&amp; <span class="built_in">ln</span> -s jdk1.8.* jdk </span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;  /etc/profile.d/jdk.sh &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">export JAVA_HOME=$JDK_DIR/jdk</span></span><br><span class="line"><span class="string">export JRE_HOME=\$JAVA_HOME/jre</span></span><br><span class="line"><span class="string">export CLASSPATH=\$JAVA_HOME/lib/:\$JRE_HOME/lib/</span></span><br><span class="line"><span class="string">export PATH=\$PATH:\$JAVA_HOME/bin</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line">.  /etc/profile.d/jdk.sh</span><br><span class="line">java -version &amp;&amp; color 0 <span class="string">&quot;JDK 安装完成&quot;</span> || &#123; color 1  <span class="string">&quot;JDK 安装失败&quot;</span> ; <span class="built_in">exit</span>; &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">install_jdk</span><br><span class="line">root@master1:~<span class="comment"># bash install_jdk.sh</span></span><br><span class="line">root@master1:~<span class="comment"># java -version</span></span><br><span class="line">java version <span class="string">&quot;1.8.0_311&quot;</span></span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_311-b11)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.311-b11, mixed mode)</span><br><span class="line"></span><br><span class="line">下载nexus二进制包并启动服务</span><br><span class="line">root@master1:~<span class="comment"># mkdir -p /data/service/ &amp;&amp; cd $_</span></span><br><span class="line">root@master1:/data/service<span class="comment"># ls</span></span><br><span class="line">nexus-3.48.0-01-unix.tar.gz</span><br><span class="line">root@master1:/data/service<span class="comment"># tar xf nexus-3.48.0-01-unix.tar.gz</span></span><br><span class="line">root@master1:/data/service<span class="comment"># ln -s /data/service/nexus-3.48.0-01 /data/service/nexus</span></span><br><span class="line">root@master1:/data/service<span class="comment"># vi /lib/systemd/system/nexus.service</span></span><br><span class="line">root@master1:/data/service<span class="comment"># cat /lib/systemd/system/nexus.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=nexus service</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">ExecStart=/data/service/nexus/bin/nexus start</span><br><span class="line">ExecStop=/data/service/nexus/bin/nexus stop</span><br><span class="line">User=root</span><br><span class="line">Restart=on-abort</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">root@master1:/data/service<span class="comment"># systemctl enable nexus.service</span></span><br><span class="line">Created symlink /etc/systemd/system/multi-user.target.wants/nexus.service → /lib/systemd/system/nexus.service.</span><br><span class="line">root@master1:/data/service<span class="comment"># systemctl start nexus.service</span></span><br></pre></td></tr></table></figure><p>服务启动后，就可以用浏览器访问 IP:8081</p><p><img src="/images/nexus-web1.png"></p><p><img src="/images/nexus-web2.png"></p><p><img src="/images/nexus-web3.png"></p><p><img src="/images/nexus-web4.png"></p><blockquote><p>Hosted：本地仓库，通常我们会部署自己的构建到这一类型的仓库，例如公司的第三方库</p><p>Proxy：代理仓库，它们被用于代理远程的公共仓库，如maven中央仓库（官方仓库）</p><p>Group：仓库组，这个用于合并多个hosted&#x2F;proxy仓库，当你的项目希望在多个repository使用资源时就不需要多次的引用了，只需要引用一个group就可以了</p></blockquote><h1 id="创建blob数据目录"><a href="#创建blob数据目录" class="headerlink" title="创建blob数据目录"></a>创建blob数据目录</h1><p>默认的blob数据目录时在default下面</p><p><img src="/images/nexus-web5.png"></p><p><img src="/images/nexus-web6.png"></p><p><img src="/images/nexus-web7.png"></p><h1 id="使用nexus构建私有的apt仓库并测试"><a href="#使用nexus构建私有的apt仓库并测试" class="headerlink" title="使用nexus构建私有的apt仓库并测试"></a>使用nexus构建私有的apt仓库并测试</h1><p><img src="/images/nexus-web8.png"></p><p><img src="/images/nexus-web9.png"></p><p><img src="/images/nexus-web10.png"></p><p>在目标测试主机上设置私仓地址</p><p><img src="/images/nexus-web11.png"></p><p><img src="/images/nexus-web12.png"></p><h1 id="使用nexus构建私有的yum仓库并测试"><a href="#使用nexus构建私有的yum仓库并测试" class="headerlink" title="使用nexus构建私有的yum仓库并测试"></a>使用nexus构建私有的yum仓库并测试</h1><p><img src="/images/nexus-web13.png"></p><p><img src="/images/nexus-web14.png"></p><p><img src="/images/nexus-web15.png"></p><p>在目标测试主机上设置私仓地址</p><p><img src="/images/nexus-web16.png"></p><p><img src="/images/nexus-web17.png"></p>]]></content>
      
      
      <categories>
          
          <category> Nexus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nexus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>分析ExitCode定位Pod的异常退出原因</title>
      <link href="/post/18e3b330.html"/>
      <url>/post/18e3b330.html</url>
      
        <content type="html"><![CDATA[<h1 id="分析ExitCode定位Pod的异常退出原因"><a href="#分析ExitCode定位Pod的异常退出原因" class="headerlink" title="分析ExitCode定位Pod的异常退出原因"></a>分析ExitCode定位Pod的异常退出原因</h1><p>使用 <span style="background-color:grey">kubectl describe pods podName</span> 查看异常 pod 的状态：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Containers :</span><br><span class="line">  kubedns :  </span><br><span class="line">      Container ID : docker://5fb8adf9ee62afc6d3f6f3d9590041818750b392dff015d7091eaaf99cf1c945</span><br><span class="line">      Image: ccr.ccs.tencentyun.com/library/kubedns-amd64:1.14.4</span><br><span class="line">      Image ID: docker-pullable://ccr.ccs.tencentyun.com/library/kubedns- amd64@sha256:40790881bbe9ef4ae4ff7fe8b892498eecb7fe6dcc22661402f271e03f7de344</span><br><span class="line">      Ports: 10053/UDP, 10053/TCP, 10055/TCP</span><br><span class="line">      Host Ports: 0/UDP, 0/TCP, 0/TCP</span><br><span class="line">      Args:</span><br><span class="line">        --domain=cluster.local.</span><br><span class="line">        --dns-port=10053</span><br><span class="line">        --config-dir=/kube-dns-config</span><br><span class="line">        --v=2</span><br><span class="line">      State: Running</span><br><span class="line">        Started: Tue, 15 Aug 2022 10:58:49 +0800</span><br><span class="line">      Last State: Terminated</span><br><span class="line">        Reason: Error</span><br><span class="line">        Exit Code: 255</span><br><span class="line">        Started: Tue, 15 Aug 2022 10:40:42 +0800</span><br><span class="line">        Finished: Tue, 15 Aug 2022 10:58:27 +0800</span><br><span class="line">      Ready: True</span><br><span class="line">      Restart Count: 1</span><br></pre></td></tr></table></figure><p>在容器列表里看 <span style="background-color:grey">Last State</span> 字段，其中 <span style="background-color:grey">ExitCode</span> 即程序上次退出时的状态码，如果不为0，表示异常退出，我们可以分析下原因。</p><h2 id="退出状态码的区间"><a href="#退出状态码的区间" class="headerlink" title="退出状态码的区间"></a>退出状态码的区间</h2><ul><li>必须在 0-255 之间</li><li>0 表示正常退出</li><li>外界中断将程序退出的时候状态码区间在 129-255，(操作系统给程序发送中断信号，比如 <span style="background-color:grey">kill -9</span> 是 <span style="background-color:grey">SIGKILL</span> ， <span style="background-color:grey">ctrl+c</span> 是 <span style="background-color:grey">SIGINT</span> )</li><li>一般程序自身原因导致的异常退出状态区间在 1-128 (这只是一般约定，程序如果一定要用129-255的状态码也是可以的)</li></ul><p>假如写代码指定的退出状态码时不在 0-255 之间，例如: <span style="background-color:grey">exit(-1)</span> ，这时会自动做一个转换，最终呈现的状态码还是会在 0-255 之间。我们把状态码记为 <span style="background-color:grey">code</span></p><ul><li>当指定的退出时状态码为负数，那么转换公式如下:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">256 - (|code| % 256)</span><br></pre></td></tr></table></figure><ul><li>当指定的退出时状态码为正数，那么转换公式如下:</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">code % 256</span><br></pre></td></tr></table></figure><h2 id="常见异常状态码"><a href="#常见异常状态码" class="headerlink" title="常见异常状态码"></a>常见异常状态码</h2><ul><li>137 (被 <span style="background-color:grey">SIGKILL</span> 中断信号杀死)<ul><li>此状态码一般是因为 pod 中容器内存达到了它的资源限制( resources.limits )，一般 是内存溢出(OOM)，CPU达到限制只需要不分时间片给程序就可以。因为限制资源是通过 linux 的 cgroup 实现的，所以 cgroup 会将此容器强制杀掉，类似于 <span style="background-color:grey">kill -9</span> ， 此时在 <span style="background-color:grey">describe pod</span> 中可以看到 Reason 是 <span style="background-color:grey">OOMKilled</span></li><li>不管是 cgroup 限制杀掉进程还是因为节点机器本身资源不够导致进程死掉，都可以从系统日志中找到记录: ubuntu 的系统日志在 <span style="background-color:grey">&#x2F;var&#x2F;log&#x2F;syslog</span> ，centos 的系统日志在 <span style="background-color:grey">&#x2F;var&#x2F;log&#x2F;messages</span> ，都可以用 <span style="background-color:grey">journalctl -k</span> 来查看系统日志</li><li>也可能是 livenessProbe (存活检查) 失败，kubelet 杀死的 pod</li><li>还可能是被恶意木马进程杀死</li></ul></li><li>1 和 255<ul><li>这种可能是一般错误，具体错误原因只能看容器日志，因为很多程序员写异常退出时习惯用 <span style="background-color:grey">exit(1)</span> 或 <span style="background-color:grey">exit(-1)</span> ，-1 会根据转换规则转成 255</li></ul></li></ul><h1 id="状态码参考"><a href="#状态码参考" class="headerlink" title="状态码参考"></a>状态码参考</h1><h2 id="Linux-标准中断信号"><a href="#Linux-标准中断信号" class="headerlink" title="Linux 标准中断信号"></a>Linux 标准中断信号</h2><p>Linux 程序被外界中断时会发送中断信号，程序退出时的状态码就是中断信号值加上 128 得到的，比如 <span style="background-color:grey">SIGKILL</span> 的中断信号值为 9，那么程序退出状态码就为 9+128&#x3D;137。以下是标准信号值参考：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">Signal  Value Action Comment</span><br><span class="line">──────────────────────────────────────────────────────────────────────</span><br><span class="line">SIGHUP           1      Term    Hangup detected on controlling terminal or death of controlling process</span><br><span class="line">SIGINT           2      Term    Interrupt from keyboard</span><br><span class="line">SIGQUIT          3      Core    Quit from keyboard</span><br><span class="line">SIGILL           4      Core    Illegal Instruction</span><br><span class="line">SIGABRT          6      Core    Abort signal from abort(3)</span><br><span class="line">SIGFPE           8      Core    Floating-point exception</span><br><span class="line">SIGKILL          9      Term    Kill signal</span><br><span class="line">SIGSEGV         11      Core    Invalid memory reference</span><br><span class="line">SIGPIPE         13      Term    Broken pipe: write to pipe with no readers; see pipe(7)</span><br><span class="line">SIGALRM         14      Term    Timer signal from alarm(2)</span><br><span class="line">SIGTERM         15      Term    Termination signal</span><br><span class="line">SIGUSR1     30,10,16    Term    User-defined signal 1</span><br><span class="line">SIGUSR2     31,12,17    Term    User-defined signal 2</span><br><span class="line">SIGCHLD     20,17,18    Ign     Child stopped or terminated</span><br><span class="line">SIGCONT     19,18,25    Cont    Continue <span class="keyword">if</span> stopped</span><br><span class="line">SIGSTOP     17,19,23    Stop    Stop process</span><br><span class="line">SIGTSTP     18,20,24    Stop    Stop typed at terminal</span><br><span class="line">SIGTTIN     21,21,26    Stop    Terminal input <span class="keyword">for</span> background process</span><br><span class="line">SIGTTOU     22,22,27    Stop    Terminal output <span class="keyword">for</span> background process</span><br></pre></td></tr></table></figure><h2 id="C-C-退出状态码"><a href="#C-C-退出状态码" class="headerlink" title="C&#x2F;C++ 退出状态码"></a>C&#x2F;C++ 退出状态码</h2><p><span style="background-color:grey">&#x2F;usr&#x2F;include&#x2F;sysexits.h</span> 试图将退出状态码标准化(仅限 C&#x2F;C++):</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#define EX_OK            0       /* successful termination */</span><br><span class="line">#define EX__BASE        64      /* base value for error messages */</span><br><span class="line">#define EX_USAGE        64      /* command line usage error */</span><br><span class="line">#define EX_DATAERR      65      /* data format error */</span><br><span class="line">#define EX_NOINPUT      66      /* cannot open input */</span><br><span class="line">#define EX_NOUSER       67      /* addressee unknown */</span><br><span class="line">#define EX_NOHOST       68      /* host name unknown */</span><br><span class="line">#define EX_UNAVAILABLE  69      /* service unavailable */</span><br><span class="line">#define EX_SOFTWARE     70      /* internal software error */</span><br><span class="line">#define EX_OSERR        71      /* system error (e.g., can&#x27;t fork) */</span><br><span class="line">#define EX_OSFILE       72      /* critical OS file missing */</span><br><span class="line">#define EX_CANTCREAT    73      /* can&#x27;t create (user) output file */</span><br><span class="line">#define EX_IOERR        74      /* input/output error */</span><br><span class="line">#define EX_TEMPFAIL     75      /* temp failure; user is invited to retry */</span><br><span class="line">#define EX_PROTOCOL     76      /* remote error in protocol */</span><br><span class="line">#define EX_NOPERM       77      /* permission denied */</span><br><span class="line">#define EX_CONFIG       78      /* configuration error */</span><br><span class="line">#define EX__MAX         78      /* maximum listed value */</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-Pod偶尔存活检测失败</title>
      <link href="/post/e6f0365d.html"/>
      <url>/post/e6f0365d.html</url>
      
        <content type="html"><![CDATA[<h1 id="Pod-偶尔存活检查失败"><a href="#Pod-偶尔存活检查失败" class="headerlink" title="Pod 偶尔存活检查失败"></a>Pod 偶尔存活检查失败</h1><p>现象: Pod 偶尔会存活检查失败，导致 Pod 重启，业务偶尔连接异常。</p><p>之前从未遇到这种情况，在自己测试环境尝试复现也没有成功，只有在用户这个环境才可以复现。这个用户环境流量较大，感觉跟连接数或并发量有关。</p><p>用户反馈说在友商的环境里没这个问题。</p><p>对比友商的内核参数发现有些区别，尝试将节点内核参数改成跟友商的一样，发现问题没有复现了。</p><p>再对比分析下内核参数差异，最后发现是 backlog 太小导致的，节点的 <span style="color:red">net.ipv4.tcp_max_syn_backlog</span> 默认是 1024，如果短时间内并发新建 TCP 连接太多，SYN 队列就可能溢出，导致部分新连接无法建立。</p><p>解释一下：</p><p><img src="/images/tcp-connect.png"></p><p>TCP 连接建立会经过三次握手，server 收到 SYN 后会将连接加入 SYN 队列，当收到最后一个 ACK 后连接建立，这时会将连接从 SYN 队列中移动到 ACCEPT 队列。在 SYN 队列中的连接都是没有建立完全的连接，处于半连接状态。如果 SYN 队列比较小，而短时间内并发新建的连接比较多，同时处于半连接状态的连接就多，SYN 队列就可能溢出，<span style="color:red">tcp_max_syn_backlog</span> 可以控制 SYN 队列大小，用户节点的 backlog 大小默认是 1024，改成 8096 后就可以解决问题。</p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-Pod的常见状态与异常状态排错</title>
      <link href="/post/58a285.html"/>
      <url>/post/58a285.html</url>
      
        <content type="html"><![CDATA[<h1 id="Pod的常见状态与异常状态的排错"><a href="#Pod的常见状态与异常状态的排错" class="headerlink" title="Pod的常见状态与异常状态的排错"></a>Pod的常见状态与异常状态的排错</h1><p><strong>Pod调度的流程</strong></p><p><img src="/images/pod-scheduling-process.png"></p><p><strong>Pod常见状态效果图</strong></p><p><img src="/images/pod-status.png"></p><h2 id="常用的命令"><a href="#常用的命令" class="headerlink" title="常用的命令"></a>常用的命令</h2><p>排查过程中常用的命令：</p><ul><li>查看Pod状态：kubectl get pods podName -o wide</li><li>查看Pod的yaml文件配置：kubectl get pods podName -o yaml</li><li>查看Pod的事件：kubectl describe pods -n namespaceName podName</li><li>查看容器的日志：kubectl logs podName -n namespaceName -c container-name</li></ul><h2 id="Pod常见的状态"><a href="#Pod常见的状态" class="headerlink" title="Pod常见的状态"></a>Pod常见的状态</h2><ul><li>Unschedulable：# Pod不能被调度，kube-scheduler没有匹配到合适的node节点</li><li>PodScheduled: # pod正处于调度中，在kube-scheduler刚开始调度的时候，还没有将pod分配到指定的node，在筛选出合适的节点后就会更新etcd数据，将pod分配到指定的node</li><li>Pending: # 正在创建Pod但是Pod中的容器还没有全部被创建完成，当前处于此状态的Pod应该检查Pod依赖的存储是否有权限挂载等</li><li>Failed: # Pod中有容器启动失败而导致pod工作异常</li><li>Unknown: # 由于某种原因无法获得pod的当前状态，通常是由于与pod所在的node节点通信错误</li><li>Initialized: # 所有pod中的初始化容器已经完成了</li><li>ImagePullBackOff: # Pod所在的node节点下载镜像失败</li><li>Running: # Pod内部的容器已经被创建并且启动</li><li>Ready: # 表示pod中的容器已经可以提供访问服务</li><li>Error: # pod启动过程中发生了错误</li><li>NodeLost：# Pod所在的节点失联</li><li>Waiting：# Pod等待启动</li><li>Terminating: # Pod正在被销毁</li><li>CrashLoopBackOff: # pod，但是kubelet正在将它重启</li><li>InvalidImageName: #node节点无法解析镜像名称导致的镜像无法下载</li><li>ImageInspectError: # 无法校验镜像，镜像不完整导致</li><li>ErrImageNeverPull: # 策略禁止拉取镜像，镜像中心权限是私有等</li><li>RegistryUnavailable: # 镜像服务器不可用，网络原因或harbor宕机</li><li>ErrImagePull: # 镜像拉取出错，超时或下载被强制终止</li><li>CreateContainerConfigError: # 不能创建kubelet使用的容器配置</li><li>CreateContainerError: # 创建容器失败</li><li>RunContainerError: # pod运行失败，容器中没有初始化PID为1的守护进程等</li><li>ContainersNotInitialized: # pod没有初始化完毕</li><li>ContainersNotReady: # pod没有准备完毕</li><li>ContainerCreating: # pod正在创建中</li><li>DockerDaemonNotReady: # node节点decker服务没有启动</li><li>NetworkPluginNotReady: # 网络插件没有启动</li></ul><h2 id="Pod异常状态排查"><a href="#Pod异常状态排查" class="headerlink" title="Pod异常状态排查"></a>Pod异常状态排查</h2><h3 id="Pod一直处于pending状态"><a href="#Pod一直处于pending状态" class="headerlink" title="Pod一直处于pending状态"></a>Pod一直处于pending状态</h3><p>当Pod出现Pending状态就说明Pod还没调度到某个节点，需要查看一下Pod的事件来进一步的判断原因，比如：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe pod tikv-0</span><br><span class="line">...</span><br><span class="line">Events:</span><br><span class="line">  Type Reason Age From Message</span><br><span class="line">  ---- ------ ---- ---- -------</span><br><span class="line">  Warning FailedScheduling 3m (x106 over 33m) default-scheduler 0/4 nodes are available: 1 node(s) had no available volume zone, 2 Insufficient cpu, 3 Insufficient memory.</span><br></pre></td></tr></table></figure><p>下面是我遇到的一些原因与解决方法：</p><hr/><ul><li><b style="color:red">节点资源不够</b></li></ul><p>节点资源不够有以下几种情况：</p><p>1、CPU的负载过高</p><p>2、剩余可以被分配的内存不够了</p><p>3、剩余可用的GPU数量不够</p><p>如何查看Node节点资源是否足够？我们可以通过下面的命令来查看node资源的情况，并还要关注下面的其他信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe node nodeName</span><br></pre></td></tr></table></figure><ul><li><span style="color:red">Allocatable</span>：表示此节点能够申请到的资源总和</li><li><span style="color:red">Allocated resources</span>：表示此节点已分配的资源（Allocatable减去节点上所有Pod总的Request）</li></ul><p>前者与后者相减，可得出剩余可申请的资源。如果这个值小于Pod的request的话，就不满足Pod的资源要求，Scheduler在Predicates（预选）阶段就会剔除掉这个Node，也就不会调度上去了。</p><hr/><ul><li><b style="color:red">不满足nodeSelector与affinity</b></li></ul><blockquote><p>如果 Pod 包含 nodeSelector 指定了节点需要包含的 label，调度器将只会考虑将 Pod 调度到 包含这些 label 的Node 上，如果没有 Node 有这些 label 或者有这些 label 的 Node 其它 条件不满足也将会无法调度。参考官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/scheduling-eviction/assign-pod-node/">https://kubernetes.io/zh-cn/docs/concepts/scheduling-eviction/assign-pod-node/</a></p></blockquote><p>如果 Pod 包含 affinity（亲和性）的配置，调度器根据调度算法也可能算出没有满足条件的 Node，从而无法调度。affinity 有以下几类：</p><ul><li><span style="color:red">nodeAffinity</span>：节点亲和性，可以看成是增强版的 nodeSelector，用于限制 Pod 只允许 被调度到某一部分 Node。</li><li><span style="color:red">podAffinity</span>：Pod 亲和性，用于将一些有关联的 Pod 调度到同一个地方，同一个地方可以<br>是指同一个节点或同一个可用区的节点等。</li><li><span style="color:red">podAntiAffinity</span>：Pod 反亲和性，用于避免将某一类 Pod 调度到同一个地方避免单点故障，比如将集群 DNS 服务的 Pod 副本都调度到不同节点，避免一个节点挂了造成整个集群DNS 解析失败，使得业务中断。</li></ul><hr/><ul><li><b style="color:red">Node存在Pod没有容忍的污点</b></li></ul><blockquote><p>如果节点上存在污点 (Taints)，而 Pod 没有响应的容忍 (Tolerations)，Pod 也将不会调度上去。通过 describe node 可以看下 Node 有哪些 Taints：</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl describe nodes host1</span><br><span class="line">...</span><br><span class="line">Taints: special=<span class="literal">true</span>:NoSchedule</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>污点既可以是手动添加也是可以被自动添加，可以看一下下面的内容。</p><p><strong>手动添加污点</strong></p><p>通过类似以下方式可以给节点添加污点：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl taint node host1 special=<span class="literal">true</span>:NoSchedule</span><br><span class="line">node <span class="string">&quot;host1&quot;</span> tainted</span><br></pre></td></tr></table></figure><p>另外，有些场景下希望新加的节点默认不调度 Pod，直到调整完节点上某些配置才允许调度，就给新加的节点都加上 <span style="color:red">node.kubernetes.io&#x2F;unschedulable</span> 这个污点。</p><p><strong>自动添加的污点</strong></p><p>如果节点运行状态不正常，污点也可以被自动添加，从 v1.12 开始， TaintNodesByCondition特性进入 Beta 默认开启，controller manager 会检查 Node 的 Condition，如果命中条件就自动为 Node 加上相应的污点，这些 Condition 与 Taints 的对应关系如下:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Conditon Value Taints </span><br><span class="line">-------- ----- ------</span><br><span class="line">OutOfDisk True node.kubernetes.io/out-of-disk</span><br><span class="line">Ready False node.kubernetes.io/not-ready</span><br><span class="line">Ready Unknown node.kubernetes.io/unreachable</span><br><span class="line">MemoryPressure True node.kubernetes.io/memory-pressure</span><br><span class="line">PIDPressure True node.kubernetes.io/pid-pressure</span><br><span class="line">DiskPressure True node.kubernetes.io/disk-pressure</span><br><span class="line">NetworkUnavailable True node.kubernetes.io/network-unavailable</span><br></pre></td></tr></table></figure><p>解释下上面各种条件的意思:</p><ul><li>OutOfDisk 为 True 表示节点磁盘空间不够了</li><li>Ready 为 False 表示节点不健康</li><li>Ready 为 Unknown 表示节点失联，在 node-monitor-grace-period 这么长的时间内没有上报状态 controller-manager 就会将 Node 状态置为 Unknown (默认 40s)</li><li>MemoryPressure 为 True 表示节点内存压力大，实际可用内存很少</li><li>PIDPressure 为 True 表示节点上运行了太多进程，PID 数量不够用了</li><li>DiskPressure 为 True 表示节点上的磁盘可用空间太少了</li><li>NetworkUnavailable 为 True 表示节点上的网络没有正确配置，无法跟其它 Pod 正常通信</li></ul><p>另外在云环境下，例如腾讯云的TKE，添加新的节点会先给这个node加上 <span style="color:red">node.cloudprovider.kubernetes.io&#x2F;uninitialized</span> 的污点，等Node初始化成功后才自动移除这个污点，避免Pod被调度到没初始化好的Node上。</p><hr/><ul><li><b style="color:red">低版本 kube-scheduler 的 bug</b></li></ul><p>可能是低版本的 kube-scheduler 的bug,可以升级下调度器的版本。 </p><hr/><ul><li><b style="color:red">kube-scheduler 没有正常运行</b></li></ul><p>检查master上的kube-scheduler是否运行正常，异常的话可以尝试一下重启临时恢复。</p><hr/><ul><li><b style="color:red">驱逐后其它可用节点与当前节点有状态应用不在同一个可用区</b></li></ul><blockquote><p>有时候服务部署成功运行过，但在某个时候节点突然挂了，此时就会触发驱逐，创建新的副本调度到其它节点上，对于已经挂载了磁盘的 Pod，它通常需要被调度到跟当前节点和磁盘在同一个可用区，如果集群中同一个可用区的节点不满足调度条件，即使其它可用区节点各种条件都满足，但不跟当前节点在同一个可用区，也是不会调度的。为什么需要限制挂载了磁盘的 Pod 不能漂移到其它可用区的节点？试想一下，云上的磁盘虽然可以被动态挂载到不同机器，但也只是相对同一个数据中心，通常不允许跨数据中心挂载磁盘设备，因为网络时延会极大的降低 IO 速率。</p></blockquote><h3 id="Pod-一直处于-ContainerCreating-或-Waiting-状态"><a href="#Pod-一直处于-ContainerCreating-或-Waiting-状态" class="headerlink" title="Pod 一直处于 ContainerCreating 或 Waiting 状态"></a>Pod 一直处于 ContainerCreating 或 Waiting 状态</h3><hr/><ul><li><b style="color:red">Pod配置错误</b></li></ul><p>1、检查是否打包了正确的镜像</p><p>2、检查配置了正确的容器参数</p><hr/><ul><li><b style="color:red">挂载 Volume 失败</b></li></ul><p>Volume 挂载失败也分许多种情况，先列下我这里目前已知的。</p><p><strong>Pod 漂移没有正常解挂之前的磁盘</strong></p><blockquote><p>在云尝试托管的 K8S 服务环境下，默认挂载的 Volume 一般是块存储类型的云硬盘，如果某个节点 挂了，kubelet 无法正常运行或与 apiserver 通信，到达时间阀值后会触发驱逐，自动在其它节点 上启动相同的副本 (Pod 漂移)，但是由于被驱逐的 Node 无法正常运行并不知道自己被驱逐了，也 就没有正常执行解挂，cloud-controller-manager 也在等解挂成功后再调用云厂商的接口将磁盘 真正从节点上解挂，通常会等到一个时间阀值后 cloud-controller-manager 会强制解挂云盘， 然后再将其挂载到 Pod 最新所在节点上，这种情况下 ContainerCreating 的时间相对长一点，但 一般最终是可以启动成功的，除非云厂商的 cloud-controller-manager 逻辑有 bug。</p></blockquote><hr/><ul><li><b style="color:red">磁盘爆满</b></li></ul><p>启动 Pod 会调 CRI 接口创建容器，容器运行时创建容器时通常会在数据目录下为新建的容器创建一些目录和文件，如果数据目录所在的磁盘空间满了就会创建失败并报错:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Events：</span><br><span class="line">    Type Reason Age From</span><br><span class="line">Message</span><br><span class="line">     ---- ------ ---- ----</span><br><span class="line"> Warning FailedCreatePodSandBox 2m (x4307 over 16h) kubelet, 10.179.80.31 (combined from similar events): Failed create pod sandbox: rpc error: code = Unknown desc = failed to create a sandbox <span class="keyword">for</span> pod <span class="string">&quot;apigateway-6dc48bf8b6-l8xrw&quot;</span>: Error response from daemon: <span class="built_in">mkdir</span> /var/lib/docker/aufs/mnt/1f09d6c1c9f24e8daaea5bf33a4230de7dbc758e3b22785e8ee21e3e3d921214 no space left on device</span><br></pre></td></tr></table></figure><p>解决方法可以参考：<a href="https://atuhf.github.io/post/3b1b3443.html">https://atuhf.github.io/post/3b1b3443.html</a></p><hr/><ul><li><b style="color:red">节点的内存碎片化</b></li></ul><p>如果节点上内存碎片化严重，缺少大页内存，会导致即使总的剩余内存较多，但还是会申请内存失败，解决方法可以参考：<a href="https://atuhf.github.io/post/fb12c4c0.html">https://atuhf.github.io/post/fb12c4c0.html</a></p><hr/><ul><li><b style="color:red">limit 设置太小或者单位不对</b></li></ul><blockquote><p>如果 limit 设置过小以至于不足以成功运行 Sandbox 也会造成这种状态，常见的是因为 memory limit 单位设置不对造成的 limit 过小，比如误将 memory 的 limit 单位像 request 一样设 置为小 m ，这个单位在 memory 不适用，会被 k8s 识别成 byte， 应该用 Mi 或M</p></blockquote><blockquote><p>举个例子: 如果 memory limit 设为 1024m 表示限制 1.024 Byte，这么小的内存， pause 容器一起来就会被 cgroup-oom kill 掉，导致 pod 状态一直处于 ContainerCreating。这种情况通常会报下面的 event:</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Pod sandbox changed, it will be killed and re-created。</span><br></pre></td></tr></table></figure><p>kubelet报错：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">to start sandbox container <span class="keyword">for</span> pod ... Error response from daemon: OCI runtime create failed: container_linux.go:348: starting container process caused <span class="string">&quot;process_linux.go:301: running exec setns process for init caused \&quot;signal: killed\&quot;&quot;</span>: unknown</span><br></pre></td></tr></table></figure><hr/><ul><li><b style="color:red">拉取镜像失败</b></li></ul><p>镜像拉取失败也分很多情况，这里列举下:</p><ul><li>配置了错误的镜像</li><li>Kubelet 无法访问镜像仓库（比如默认 pause 镜像在 gcr.io 上，国内环境访问需要特殊处理）</li><li>拉取私有镜像的 <span style="color:red">imagePullSecret</span> 没有配置或配置有误</li><li>镜像太大，拉取超时（可以适当调整 kubelet 的 <span style="color:red">—image-pull-progress-deadline</span> 和 <span style="color:red">—runtime-request-timeout</span> 选项）</li></ul><hr/><ul><li><b style="color:red">CNI 网络错误</b></li></ul><p>如果发生CNI网络错误通常是需要检查下网络插件的配置和运行状态，如果没有正确运行通常表现为：</p><ul><li>无法配置 Pod 网络</li><li>无法分配 Pod IP</li></ul><hr/><ul><li><b style="color:red">controller-manager 异常</b></li></ul><p>查看 master 上 kube-controller-manager 状态，异常的话尝试重启。</p><hr/><ul><li><b style="color:red">存在同名容器</b></li></ul><p>如果节点上已经有同名的容器，创建的sandbox救护失败，event：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Warning FailedCreatePodSandBox 2m kubelet, 10.205.8.91 Failed create pod sandbox: rpc error: code = Unknown desc = failed to create a sandbox <span class="keyword">for</span> pod <span class="string">&quot;lomp-ext-d8c8b8c46-4v8tl&quot;</span>: operation <span class="built_in">timeout</span>: context deadline exceeded</span><br><span class="line">Warning FailedCreatePodSandBox 3s (x12 over 2m) kubelet, 10.205.8.91 Failed create pod sandbox: rpc error: code = Unknown desc = failed to create a sandbox <span class="keyword">for</span> pod <span class="string">&quot;lomp-ext-d8c8b8c46-4v8tl&quot;</span>: Error response from daemon: Conflict. The container name <span class="string">&quot;/k8s_POD_lomp-ext-d8c8b8c46- 4v8tl_default_65046a06-f795-11e9-9bb6-b67fb7a70bad_0&quot;</span> is already <span class="keyword">in</span> use by container <span class="string">&quot;30aa3f5847e0ce89e9d411e76783ba14accba7eb7743e605a10a9a862a72c1e2&quot;</span>. You have to remove (or rename) that container to be able to reuse that name.</span><br></pre></td></tr></table></figure><h3 id="Pod-处于-CrashLoopBackOff-状态"><a href="#Pod-处于-CrashLoopBackOff-状态" class="headerlink" title="Pod 处于 CrashLoopBackOff 状态"></a>Pod 处于 CrashLoopBackOff 状态</h3><p>Pod 如果处于 <span style="color:red">CrashLoopBackOff</span> 状态说明之前是启动了，只是又异常退出了，只要 Pod 的 <span style="color:red">restartPolicy</span> 不是 Never 就可能被重启拉起，此时 Pod 的 <span style="color:red">RestartCounts</span> 通常是大于 0 的，可以先看下容器进程的退出状态码来缩小问题范围</p><hr/><ul><li><b style="color:red">容器进程主动退出</b></li></ul><p>如果是容器进程主动退出的话，退出的状态码一般在 0-128 之间，除了可能是业务程序的BUG，还有可能是更多的原因，可以看文章后面的容器进程主动退出的内容。</p><hr/><ul><li><b style="color:red">系统OOM</b></li></ul><blockquote><p>如果发生系统 OOM，可以看到 Pod 中容器退出状态码是 137，表示被 <span style="color:red">SIGKILL</span> 信号杀死，同时内核会报错: <span style="color:red">Out of memory: Kill process …</span> 。大概率是节点上部署了其它非 K8S 管理的进程消耗了比较多的内存，或者 kubelet 的 <span style="color:red">–kube-reserved</span> 和 <span style="color:red">–system-reserved</span> 配的比较小，没有预留足够的空间给其它非容器进程，节点上所有 Pod 的实际内存占用总量不会超过 &#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;memory&#x2F;kubepods 这里 cgroup 的限制，这个限制等于 <span style="color:red">capacity - “kube-reserved” - “system-reserved”</span> ，如果预留空间设置合理，节点上其它非容器进程(kubelet,dockerd, kube-proxy, sshd 等) 内存占用没有超过 kubelet 配置的预留空间是不会发生系统 OOM 的，可以根据实际需求做合理的调整。</p></blockquote><hr/><ul><li><b style="color:red">cgroup OOM</b></li></ul><p>如果是 cgrou OOM 杀掉的进程，从 Pod 事件的下 <span style="color:red">Reason</span> 可以看到是 <span style="color:red">OOMKilled</span> ，说明容器实际占用的内存超过 limit 了，同时内核日志会报: &#96;&#96;。 可以根据需求调整下 limit。</p><hr/><ul><li><b style="color:red">节点内存碎片化</b></li></ul><p>如果节点上内存碎片化严重，缺少大页内存，会导致即使总的剩余内存较多，但还是会申请内存失败，解决方法可以参考：<a href="https://atuhf.github.io/post/fb12c4c0.html">https://atuhf.github.io/post/fb12c4c0.html</a></p><hr/><ul><li><b style="color:red">健康检查失败</b></li></ul><p>这里可以看文章后面的 Pod 健康检查失败</p><h3 id="Pod-一直处于-Terminating-状态"><a href="#Pod-一直处于-Terminating-状态" class="headerlink" title="Pod 一直处于 Terminating 状态"></a>Pod 一直处于 Terminating 状态</h3><hr/><ul><li><b style="color:red">磁盘爆满</b></li></ul><p>如果 docker 的数据目录所在磁盘被写满，docker 无法正常运行，无法进行删除和创建操作，所以 kubelet 调用 docker 删除容器没反应，看 event 类似这样：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Normal Killing 39s (x735 over 15h) kubelet, 10.179.80.31 Killing container with <span class="built_in">id</span> docker://apigateway:Need to <span class="built_in">kill</span> Pod</span><br></pre></td></tr></table></figure><p>解决方法可以参考：<a href="https://atuhf.github.io/post/3b1b3443.html">https://atuhf.github.io/post/3b1b3443.html</a></p><hr/><ul><li><b style="color:red">存在“i”文件属性</b></li></ul><p>如果容器的镜像本身或者容器启动后写入的文件存在 “i” 文件属性，此文件就无法被修改删除，而删 除 Pod 时会清理容器目录，但里面包含有不可删除的文件，就一直删不了，Pod 状态也将一直保持 Terminating，kubelet 报错:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Sep 27 14:37:21 VM_0_7_centos kubelet[14109]: E0927 14:37:21.922965 14109 remote_runtime RemoveContainer <span class="string">&quot;19d837c77a3c294052a99ff9347c520bc8acb7b8b9a9dc9fab281fc09df38257&quot;</span> failed: rpc error: code = Unknown desc = failed to remove container <span class="string">&quot;19d837c77a3c294052a99ff9347c520bc8acb7b8b9a9dc9fab281fc09df38257&quot;</span>: Error response 19d837c77a3c294052a99ff9347c520bc8acb7b8b9a9dc9fab281fc09df38257: driver <span class="string">&quot;overlay2&quot;</span> filesystem: remove /data/docker/overlay2/b1aea29c590aa9abda79f7cf3976422073fb3652757f0391db88534027546868 operation not permitted</span><br><span class="line">Sep 27 14:37:21 VM_0_7_centos kubelet[14109]: E0927 14:37:21.923027 14109 kuberuntime_gc to remove container <span class="string">&quot;19d837c77a3c294052a99ff9347c520bc8acb7b8b9a9dc9fab281fc09df38257&quot;</span> Unknown desc = failed to remove container <span class="string">&quot;19d837c77a3c294052a99ff9347c520bc8acb7b8b9a9dc9fab281fc09df38257&quot;</span>: Error response 19d837c77a3c294052a99ff9347c520bc8acb7b8b9a9dc9fab281fc09df38257: driver <span class="string">&quot;overlay2&quot;</span> filesystem: remove /data/docker/overlay2/b1aea29c590aa9abda79f7cf3976422073fb3652757f0391db88534027546868 operation not permitted</span><br></pre></td></tr></table></figure><p>通过 man chattr 查看 “i” 文件属性描述:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">A file with the <span class="string">&#x27;i&#x27;</span> attribute cannot be modified: it cannot be deleted or renamed, no <span class="built_in">link</span> can be created to this file and no data can be written to the file. Only the superuser or a process possessing the CAP_LINUX_IMMUTABLE capability can <span class="built_in">set</span> or clear this attribute.</span><br></pre></td></tr></table></figure><p>彻底解决当然是不要在容器镜像中或启动后的容器设置 “i” 文件属性，临时恢复方法： 复制 kubelet 日志报错提示的文件路径，然后执行 chattr -i 文件名 :</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chattr -i /data/docker/overlay2/b1aea29c590aa9abda79f7cf3976422073fb3652757f0391db88534027</span><br></pre></td></tr></table></figure><p>执行完后等待 kubelet 自动重试，Pod 就可以被自动删除了。</p><hr/><ul><li><b style="color:red">存在 Finalizers</b></li></ul><p>k8s 资源的 metadata 里如果存在 <span style="color:red">finalizers</span> ，那么该资源一般是由某程序创建的，并且在其 创建的资源的 metadata 里的 <span style="color:red">finalizers</span> 加了一个它的标识，这意味着这个资源被删除时需要 由创建资源的程序来做删除前的清理，清理完了它需要将标识从该资源的 <span style="color:red">finalizers</span> 中移除，然 后才会最终彻底删除资源。比如 Rancher 创建的一些资源就会写入 <span style="color:red">finalizers</span> 标识。</p><p>处理建议： kubectl edit 手动编辑资源定义，删掉 <span style="color:red">finalizers</span> ，这时再看下资源，就会发现 已经删掉了。</p><h3 id="Pod-一直处于-Unknown-状态"><a href="#Pod-一直处于-Unknown-状态" class="headerlink" title="Pod 一直处于 Unknown 状态"></a>Pod 一直处于 Unknown 状态</h3><p>通常是节点失联，没有上报状态给 apiserver，到达阀值后 controller-manager 认为节点失联并将其状态置为 Unknown 。</p><p>可能原因:</p><ul><li>节点高负载导致无法上报</li><li>节点宕机</li><li>节点被关机</li><li>网络不通</li></ul><h3 id="Pod-一直处于-Error-状态"><a href="#Pod-一直处于-Error-状态" class="headerlink" title="Pod 一直处于 Error 状态"></a>Pod 一直处于 Error 状态</h3><p>通常处于 Error 状态说明 Pod 启动过程中发生了错误。常见的原因包括：</p><ul><li>依赖的 ConfigMap、Secret 或者 PV 等不存在</li><li>请求的资源超过了管理员设置的限制，比如超过了 <span style="color:red">LimitRange</span> 等</li><li>违反集群的安全策略，比如违反了 <span style="color:red">PodSecurityPolicy</span> 等</li><li>容器无权操作集群内的资源，比如开启 RBAC 后，需要为 <span style="color:red">ServiceAccount</span> 配置角色绑定</li></ul><h3 id="Pod-一直处于-ImagePullBackOff-状态"><a href="#Pod-一直处于-ImagePullBackOff-状态" class="headerlink" title="Pod 一直处于 ImagePullBackOff 状态"></a>Pod 一直处于 ImagePullBackOff 状态</h3><hr/><ul><li><b style="color:red">http 类型 registry，地址未加入到 insecure-registry</b></li></ul><p>dockerd 默认从 https 类型的 registry 拉取镜像，如果使用 https 类型的 registry，则 必须将它添加到 insecure-registry 参数中，然后重启或 reload dockerd 生效。</p><hr/><ul><li><b style="color:red">https 自签发类型 resitry，没有给节点添加 ca 证书</b></li></ul><p>如果 registry 是 https 类型，但证书是自签发的，dockerd 会校验 registry 的证书，校验 成功才能正常使用镜像仓库，要想校验成功就需要将 registry 的 ca 证书放置到 &#x2F;etc&#x2F;docker&#x2F;certs.d&#x2F;&lt;registry:port&gt;&#x2F;ca.crt 位置</p><hr/><ul><li><b style="color:red">私有镜像仓库认证失败</b></li></ul><p>如果 registry 需要认证，但是 Pod 没有配置 imagePullSecret，配置的 Secret 不存在或者有误都会认证失败。</p><hr/><ul><li><b style="color:red">镜像文件损坏</b></li></ul><p>如果 push 的镜像文件损坏了，下载下来也用不了，需要重新 push 镜像文件。</p><hr/><ul><li><b style="color:red">镜像拉取超时</b></li></ul><p>如果节点上新起的 Pod 太多就会有许多可能会造成容器镜像下载排队，如果前面有许多大镜像需要下载很长时间，后面排队的 Pod 就会报拉取超时。</p><p>kubelet 默认串行下载镜像:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--serialize-image-pulls Pull images one at a time. We recommend *not* changing the default value on nodes that run docker daemon with version &lt; 1.9 or an Aufs storage backend. Issue <span class="comment">#10959 has more details. (default true)</span></span><br></pre></td></tr></table></figure><p>也可以开启并行下载并控制并发:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">--registry-qps int32 If &gt; 0, <span class="built_in">limit</span> registry pull QPS to this value. If 0, unlimited. (default 5)</span><br><span class="line">--registry-burst int32 Maximum size of a bursty pulls, temporarily allows pulls to burst to this number, <span class="keyword">while</span> still not exceeding registry-qps. Only used <span class="keyword">if</span> --registry-qps &gt; 0 (default 10)</span><br></pre></td></tr></table></figure><hr/><ul><li><b style="color:red">镜像不存在</b></li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">PullImage <span class="string">&quot;imroc/test:v0.2&quot;</span> from image service failed: rpc error: code =</span><br><span class="line">Unknown desc = Error response from daemon: manifest <span class="keyword">for</span> imroc/test:v0.2 not</span><br><span class="line">found</span><br></pre></td></tr></table></figure><h3 id="Pod-健康检查失败"><a href="#Pod-健康检查失败" class="headerlink" title="Pod 健康检查失败"></a>Pod 健康检查失败</h3><ul><li>Kubernetes 健康检查包含就绪检查(readinessProbe)和存活检查(livenessProbe)</li><li>pod 如果就绪检查失败会将此 pod ip 从 service 中摘除，通过 service 访问，流量将不会被转发给就绪检查失败的 pod</li><li>pod 如果存活检查失败，kubelet 将会杀死容器并尝试重启</li></ul><p>健康检查失败的可能原因有多种，除了业务程序BUG导致不能响应健康检查导致 unhealthy，还能有有其它原因，下面我们来逐个排查。</p><hr/><ul><li><b style="color:red">健康检查配置不合理</b></li></ul><p><span style="color:red">initialDelaySeconds</span> 太短，容器启动慢，导致容器还没完全启动就开始探测，如果 <span style="color:red">successThreshold</span> 是默认值 1，检查失败一次就会被 kill，然后 pod 一直这样被 kill 重启。</p><hr/><ul><li><b style="color:red">节点负载过高</b></li></ul><p>cpu 占用高（比如跑满）会导致进程无法正常发包收包，通常会 timeout，导致 kubelet 认为 pod 不健康。参考本书 处理实践: 高负载 一节。</p><hr/><ul><li><b style="color:red">容器内进程端口监听挂了</b></li></ul><p>使用 netstat -tunlp 检查端口监听是否还在，如果不在了，抓包可以看到会直接 reset 掉健康检查探测的连接:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">20:15:17.890996 IP 172.16.2.1.38074 &gt; 172.16.2.23.8888: Flags [S], <span class="built_in">seq</span> 96880261, win 14600, options [mss 1424,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">20:15:17.891021 IP 172.16.2.23.8888 &gt; 172.16.2.1.38074: Flags [R.], <span class="built_in">seq</span> 0, ack 96880262, win 0, length 0</span><br><span class="line">20:15:17.906744 IP 10.0.0.16.54132 &gt; 172.16.2.23.8888: Flags [S], <span class="built_in">seq</span> 1207014342, win 14600, options [mss 1424,nop,nop,sackOK,nop,wscale 7], length 0</span><br><span class="line">20:15:17.906766 IP 172.16.2.23.8888 &gt; 10.0.0.16.54132: Flags [R.], <span class="built_in">seq</span> 0, ack 1207014343, win 0, length 0</span><br></pre></td></tr></table></figure><p>连接异常，从而健康检查失败。发生这种情况的原因可能在一个节点上启动了多个使用 <span style="color:red">hostNetwork</span> 监听相同宿主机端口的 Pod，只会有一个 Pod 监听成功，但监听失败的 Pod 的 业务逻辑允许了监听失败，并没有退出，Pod 又配了健康检查，kubelet 就会给 Pod 发送健康检查 探测报文，但 Pod 由于没有监听所以就会健康检查失败。</p><hr/><ul><li><b style="color:red">SYN backlog 设置过小</b></li></ul><p>SYN backlog 大小即 SYN 队列大小，如果短时间内新建连接比较多，而 SYN backlog 设置太小，就会导致新建连接失败，通过 netstat -s | grep TCPBacklogDrop 可以看到有多少是因为 backlog 满了导致丢弃的新连接。</p><p>如果确认是 backlog 满了导致的丢包，建议调高 backlog 的值，内核参数为 net.ipv4.tcp_max_syn_backlog 。</p><h3 id="容器进程主动退出"><a href="#容器进程主动退出" class="headerlink" title="容器进程主动退出"></a>容器进程主动退出</h3><p>容器进程如果是自己主动退出(不是被外界中断杀死)，退出状态码一般在 0-128 之间，根据约定，正常退出时状态码为 0，1-127 说明是程序发生异常，主动退出了，比如检测到启动的参数和条件不满足要求，或者运行过程中发生 panic 但没有捕获处理导致程序退出。除了可能是业务程序 BUG，还有其它许多可能原因，这里我们一一列举下。</p><hr/><ul><li><b style="color:red">DNS 无法解析</b></li></ul><p>可能程序依赖 集群 DNS 服务，比如启动时连接数据库，数据库使用 service 名称或外部域名都需要 DNS 解析，如果解析失败程序将报错并主动退出。解析失败的可能原因:</p><p>1、集群网络有问题，Pod 连不上集群 DNS 服务</p><p>2、集群 DNS 服务挂了，无法响应解析请求</p><p>3、Service 或域名地址配置有误，本身是无法解析的地址</p><hr/><ul><li><b style="color:red">程序配置有误</b></li></ul><p>1、配置文件格式错误，程序启动解析配置失败报错退出</p><p>2、配置内容不符合规范，比如配置中某个字段是必选但没有填写，配置校验不通过，程序报错主动退出</p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预防内存碎片化</title>
      <link href="/post/fb12c4c0.html"/>
      <url>/post/fb12c4c0.html</url>
      
        <content type="html"><![CDATA[<p>在长时间运行的Linux操作系统中，系统日志有时会出现无法分配高阶内存的报错信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Aug  4 22:58:15 server1 kernel: : [69229257.683658] xenwatch: page allocation failure. order:4, mode:0xd0</span><br><span class="line">Aug  4 22:58:15 server1 kernel: : [69229257.683665] Pid: 168, <span class="built_in">comm</span>: xenwatch Tainted: GF          ---------------    2.6.32-358.23.2.el5.x86_64 <span class="comment">#1</span></span><br><span class="line">Aug  4 22:58:15 server1 kernel: : [69229257.683672] Call Trace:</span><br><span class="line">Aug  4 22:58:15 server1 kernel: : [69229257.683688]  [&lt;ffffffff8112723a&gt;] ? __alloc_pages_nodemask+0x67a/0x8c0</span><br><span class="line">Aug  4 22:58:15 server1 kernel: : [69229257.683697]  [&lt;ffffffff8126082f&gt;] ? number+0x2ff/0x330</span><br><span class="line">Aug  4 22:58:15 server1 kernel: : [69229257.683706]  [&lt;ffffffff81162260&gt;] ? kmem_getpages+0x60/0x150</span><br></pre></td></tr></table></figure><p>此时使用 <span style="background-color:grey">cat &#x2F;proc&#x2F;buddyinfo</span> 观察内存order分配情况，可以看到内存碎片化严重（大量的低阶内存页，但是几乎没有高阶内存页）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /proc/buddyinfo</span><br><span class="line">Node 0, zone      DMA      2      2      2      1      2      1      1      0      0      0      2</span><br><span class="line">Node 0, zone    DMA32  32995   4377    762    211    157    108     68     23      3      0      0</span><br><span class="line">Node 0, zone   Normal 127146  68215   1614      0      0      0      0      0      0      0      1</span><br></pre></td></tr></table></figure><p>处理的方法主要采用 <span style="background-color:grey">drop_caches</span>（抛弃缓存），然后使用 <span style="background-color:grey">compact_memory</span> 合并低阶内存页来创造出足够的高阶内存页。</p><h1 id="drop-caches"><a href="#drop-caches" class="headerlink" title="drop_caches"></a>drop_caches</h1><p>Linux Kernel 2.6.16之后的内核提供了一个设置内核抛弃 页缓存 和&#x2F;或 目录(dentry)和索引节点（inode）缓存，这样可以释放出大量内存。</p><ul><li>释放页缓存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 1 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><ul><li>释放目录和索引节点缓存（inode and dentry cache）</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 2 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><ul><li>同时释放 页、目录、索引节点缓存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><p>上述操作是无害的操作，并且智慧释放完全没有使用的内存对象。脏对象（dirty objects）将继续被使用直到它们被写入到磁盘中，所以内存脏对象不会被释放。不过，如果在执行 <span style="background-color:grey">drop_caches</span> 之前执行sync指令，则会将脏对象刷新到磁盘中，这样 <span style="background-color:grey">drop_caches</span> 操作会释放出更多内存。</p><p><strong>注意：</strong> <span style="background-color:grey">drop_caches</span> 需要花费一些时间（在终端中可以看到大约几十秒时间），此时再次使用 <span style="background-color:grey">cat &#x2F;proc&#x2F;buddyinfo</span> 可以看到立即出现了大量高阶内存页。</p><p>但是 <span style="background-color:grey">drop_caches</span> 这个触发动作是一次性的，也就是说，并不因为 <span style="background-color:grey">cat &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;drop_caches</span> 时显示输出内容是3就表示系统不缓存内容。相反，一旦完成 drop_caches</span>，系统立即自动对后续内存对象进行缓存。所以要再次触发缓存清理，需要再次执行 <span style="background-color:grey">echo 3 &gt; &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;drop_caches</span>。</p><blockquote><p>如果重复echo 3 &gt; &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;drop_caches不能再次释放缓存，可以先尝试echo 0 &gt; &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;drop_caches然后再执行echo 3 &gt; &#x2F;proc&#x2F;sys&#x2F;vm&#x2F;drop_caches</p></blockquote><h1 id="compact-memory"><a href="#compact-memory" class="headerlink" title="compact_memory"></a>compact_memory</h1><p>当内核编译参数设置了 <span style="background-color:grey">CONFIG_COMPACTION</span> ，就会在 <span style="background-color:grey">&#x2F;proc&#x2F;sys&#x2F;vm&#x2F;compact_memory</span> 有入口文件。将1写入到这个文件，则所有的zones就会进行压缩，以便能够尽可能地提供连续内存块。对于需要分配大页的时候这个功能非常重要，不过，进程会在需要时直接进行内存压缩（compact memory）。</p><h1 id="实操案例"><a href="#实操案例" class="headerlink" title="实操案例"></a>实操案例</h1><ul><li>检查系统缺乏高阶内存</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /proc/buddyinfo</span><br><span class="line">Node 0, zone      DMA      2      2      2      1      2      1      1      0      0      0      2</span><br><span class="line">Node 0, zone    DMA32  32995   4377    762    211    157    108     68     23      3      0      0</span><br><span class="line">Node 0, zone   Normal 127146  68215   1614      0      0      0      0      0      0      0      1</span><br></pre></td></tr></table></figure><ul><li>执行缓存释放</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 3 &gt; /proc/sys/vm/drop_caches</span><br></pre></td></tr></table></figure><ul><li>完成后检查内存页</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /proc/buddyinfo</span><br><span class="line">Node 0, zone      DMA      2      2      2      1      2      1      1      0      0      0      2</span><br><span class="line">Node 0, zone    DMA32  76826  65298  43784  20780   5272    616     90     32      4      0      0</span><br><span class="line">Node 0, zone   Normal 524538 365499 176074  45644   4338    140      6      0      0      0      1</span><br></pre></td></tr></table></figure><ul><li>然后执行内存压缩</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">echo</span> 1 &gt; /proc/sys/vm/compact_memory</span><br></pre></td></tr></table></figure><ul><li>然后再次检查内存页分布，可以看到逐渐出现更多的高阶内存页</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cat</span> /proc/buddyinfo</span><br><span class="line">Node 0, zone      DMA      2      2      2      1      2      1      1      0      0      0      2</span><br><span class="line">Node 0, zone    DMA32  18217  13464   8621   4666   2654   2087   1609   1040    517    130      3</span><br><span class="line">Node 0, zone   Normal 145048 131183  76864  38454  20405  11854   5149   1143     96      3      1</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-处理磁盘爆满</title>
      <link href="/post/3b1b3443.html"/>
      <url>/post/3b1b3443.html</url>
      
        <content type="html"><![CDATA[<h1 id="什么情况下面会可能出现磁盘爆满呢？"><a href="#什么情况下面会可能出现磁盘爆满呢？" class="headerlink" title="什么情况下面会可能出现磁盘爆满呢？"></a>什么情况下面会可能出现磁盘爆满呢？</h1><p>kubelet 有 gc 和驱逐机制，通过 <span style="color:red">–image-gc-high-threshold</span>，<span style="color:red">–image-gc-low-threshold</span>，<span style="color:red">–eviction-hard</span>，<span style="color:red">–eviction-soft</span>，<span style="color:red">–eviction-minimum-reclaim</span> 等参数控制 kubelet 的 gc 和驱逐策略来释放磁盘空间，如果配置正确的情况下，磁盘一般不会爆满。</p><blockquote><p>通常导致爆满的原因可能是配置不正确或者节点上有其它非 K8S 管理的进程在不断写数据到磁盘占用 大量空间导致磁盘爆满。</p></blockquote><h1 id="那么磁盘爆满会有什么影响吗？"><a href="#那么磁盘爆满会有什么影响吗？" class="headerlink" title="那么磁盘爆满会有什么影响吗？"></a>那么磁盘爆满会有什么影响吗？</h1><p>影响 K8S 运行我们主要关注 kubelet 和容器运行时这两个最关键的组件，它们所使用的目录通常不一样，kubelet 一般不会单独挂盘，直接使用系统磁盘，因为通常占用空间不会很大，容器运行时单独挂盘的场景比较多，当磁盘爆满的时候我们也要看 kubelet 和 容器运行时使用的目录是否在这个磁盘，通过 df 命令可以查看磁盘挂载点。</p><hr/><ul><li><b style="color:red">容器运行时使用的目录所在磁盘爆满</b></li></ul><blockquote><p>如果容器运行时使用的目录所在磁盘空间爆满，可能会造成容器运行时无响应，比如 docker，执行 docker 相关的命令一直 hang 住，kubelet 日志也可以看到 PLEG unhealthy，因为 CRI 调 用 timeout，当然也就无法创建或销毁容器，通常表现是 Pod 一直 ContainerCreating 或 一 直 Terminating。</p></blockquote><p>docker 默认使用的目录主要有：</p><ul><li>&#x2F;var&#x2F;run&#x2F;docker：用于存储容器运行状态，通过 dockerd 的 <strong>–exec-root</strong> 参数指定</li><li>&#x2F;var&#x2F;lib&#x2F;docker：用于持久化容器相关的数据，比如容器镜像、容器可写层数据、容器标准 日志输出、通过 docker 创建的 volume 等</li></ul><p>Pod 启动可能报类似下面的事件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Warning FailedCreatePodSandBox 53m kubelet, 172.22.0.44 Failed create pod sandbox: rpc error: code = DeadlineExceeded desc = context deadline exceeded</span><br><span class="line">Warning FailedCreatePodSandBox 2m (x4307 over 16h) kubelet, 10.179.80.31 (combined similar events): Failed create pod sandbox: rpc error: code = Unknown desc = failed to create a sandbox <span class="keyword">for</span> pod <span class="string">&quot;apigateway-6dc48bf8b6-l8xrw&quot;</span>: Error response from daemon: <span class="built_in">mkdir</span> /var/lib/docker/aufs/mnt/1f09d6c1c9f24e8daaea5bf33a4230de7dbc758e3b22785e8ee21e3e3d921214 no space left on device</span><br><span class="line">Warning Failed 5m1s (x3397 over 17h) kubelet, ip-10-0-151-35.us-west-2.compute similar events): Error: container create failed: container_linux.go:336: starting container process caused <span class="string">&quot;process_linux.go:399: container init caused \&quot;rootfs_linux.go:58: mounting \\\&quot;/sys\\\&quot; to rootfs \\\&quot;/var/lib/dockerd/storage/overlay/051e985771cc69f3f699895a1dada9ef6483e912b46a99e004af7bb4852183eb/merged\\\&quot; at \\\&quot;/var/lib/dockerd/storage/overlay/051e985771cc69f3f699895a1dada9ef6483e912b46a99e004af7bb4852183eb/merged/sys\\\&quot; caused \\\&quot;no space left on device\\\&quot;\&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>Pod 删除可能报类似下面的事件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Normal Killing 39s (x735 over 15h) kubelet, 10.179.80.31 Killing container with <span class="built_in">id</span> docker://apigateway:Need to <span class="built_in">kill</span> Pod</span><br></pre></td></tr></table></figure><hr/><ul><li><b style="color:red">kubelet 使用的目录所在磁盘爆满</b></li></ul><p>如果 kubelet 使用的目录所在磁盘空间爆满(通常是系统盘)，新建 Pod 时连 Sandbox 都无法创建成功，因为 mkdir 将会失败，通常会有类似这样的 Pod 事件:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Warning UnexpectedAdmissionError 44m kubelet, 172.22.0.44 Update plugin resources failed due to failed to write checkpoint file <span class="string">&quot;kubelet_internal_checkpoint&quot;</span>: write /var/lib/kubelet/device- plugins/.728425055: no space left on device, <span class="built_in">which</span> is unexpected.</span><br></pre></td></tr></table></figure><p>kubelet 默认使用的目录是 &#x2F;var&#x2F;lib&#x2F;kubelet，用于存储插件信息、Pod 相关的状态以及挂 载的 volume （比如 emptyDir ，ConfigMap，Secret），通过 kubelet 的 <strong>–root- dir</strong> 参数指定。</p><hr/><ul><li><b style="color:red">如何恢复</b></li></ul><p>如果容器运行时使用的 Docker，无法直接重启 dockerd 来释放一些空间，因为磁盘爆满后dockerd 无法正常响应，停止的时候也会卡住。需要先手动清理一点文件腾出空间好让 dockerd 能够停止并重启。</p><p>可以手动删除一些 docker 的 log 文件或可写层文件，通常删除 log:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /var/lib/docker/containers</span><br><span class="line">$ <span class="built_in">du</span> -sh * <span class="comment"># 找到比较大的目录</span></span><br><span class="line">$ <span class="built_in">cd</span> dda02c9a7491fa797ab730c1568ba06cba74cecd4e4a82e9d90d00fa11de743c-json.log.9</span><br><span class="line">$ <span class="built_in">cat</span> /dev/null &gt; dda02c9a7491fa797ab730c1568ba06cba74cecd4e4a82e9d90d00fa11de743c-json.log.9 <span class="comment"># 删除log文件</span></span><br></pre></td></tr></table></figure><ul><li>注意: 使用 cat &#x2F;dev&#x2F;null &gt; 方式删除而不用 rm ，因为用 rm 删除的文件，docker 进程可能不会释放文件，空间也就不会释放；log 的后缀数字越大表示越久远，先删除旧日志。</li></ul><p>然后将该 node 标记不可调度，并将其已有的 pod 驱逐到其它节点，这样重启 dockerd 就会让该节点的 pod 对应的容器删掉，容器相关的日志(标准输出)与容器内产生的数据文件(没有挂载volume, 可写层)也会被清理：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl drain &lt;node-name&gt;</span><br></pre></td></tr></table></figure><p>重启dockerd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl restart dockerd <span class="comment"># or systemctl restart docker</span></span><br></pre></td></tr></table></figure><p>等重启恢复，pod 调度到其它节点，排查磁盘爆满原因并清理和规避，然后取消节点不可调度标记:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl uncordon &lt;node-name&gt;</span><br></pre></td></tr></table></figure><hr/><ul><li><b style="color:red">如何规避</b></li></ul><p>正确配置 kubelet gc 和 驱逐相关的参数，即便到达爆满地步，此时节点上的 pod 也都早就自动 驱逐到其它节点了，不会存在 Pod 一直 ContainerCreating 或 Terminating 的问题。</p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安装Prometheus+Grafana</title>
      <link href="/post/d8428ca.html"/>
      <url>/post/d8428ca.html</url>
      
        <content type="html"><![CDATA[<h1 id="Prometheus与Zabbix的对比"><a href="#Prometheus与Zabbix的对比" class="headerlink" title="Prometheus与Zabbix的对比"></a>Prometheus与Zabbix的对比</h1><table><thead><tr><th>对比项</th><th>Prometheus</th><th>Zabbix</th><th>Prometheus的优势</th><th>Zabbix的优势</th></tr></thead><tbody><tr><td>管理</td><td>二进制文件启动</td><td>LNMP+编译</td><td>轻量级server，便于迁移和维护</td><td></td></tr><tr><td>配置</td><td>配置文件</td><td>图形化</td><td>更好的支持自动化配置</td><td>成本低</td></tr><tr><td>client</td><td>丰富的client</td><td>zabbix_agent自定义脚本</td><td>为各种中间件、应用提供专业的exporter，监控项更全面</td><td>支持自定义监控项，对监控涉及者的格局要求较高</td></tr><tr><td>数据存储方式</td><td>TSDB</td><td>MySQL</td><td>监控数据以时间维度统计情况较多，时序数据库更实用与监控数据的次敦促，按时间索引性能更高</td><td>MySQL比较常用</td></tr><tr><td>数据处理</td><td>PromQl</td><td>MySQL</td><td>PromQL计算函数丰富，统计维度广</td><td>MySQL现市面上比较常用</td></tr><tr><td>二次开发</td><td>丰富的SDK</td><td>api</td><td>提供了Go、Java&#x2F;Scala、Python、Ruby等sdk二次开发更便捷</td><td>api适配较为常用</td></tr><tr><td>对云环境的支持</td><td>原生支持容器监控</td><td>更适合物理监控</td><td>自动发现容器，更好的适配k8s</td><td></td></tr><tr><td>告警方式</td><td>可按照标签分组收敛</td><td>在次数上收敛</td><td>告警方式更多样化</td><td></td></tr><tr><td>监控项值</td><td>支持数字</td><td>支持数字、字符串</td><td></td><td>可以做日志监控</td></tr></tbody></table><h1 id="Prometheus的工作流程"><a href="#Prometheus的工作流程" class="headerlink" title="Prometheus的工作流程"></a>Prometheus的工作流程</h1><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><blockquote><p>Prometheus服务端是以一个进程的方式启动的，下载安装完成之后，只需要启动一个进程即可，程序默认监听9090端口。每次采集到的数据叫metrics。这些采集到的数据会先存到内存中，然后定期的写入磁盘，如果服务器重启会将硬盘数据写回内存，所以这样对内存的消耗是挺大的，Prometheus不需要重视历史数据，所以默认只会保留15天的数据。</p></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># nohup ./prometheus --config.file=/data/service/prometheus/prometheus.yml &amp;</span></span><br><span class="line"><span class="comment"># ps -ef | grep prometheus</span></span><br><span class="line">root      715437       1  3 09:04 ?        00:02:22 /data/service/prometheus/prometheus --config.file=/data/service/prometheus/prometheus.yml</span><br><span class="line">root      771643    1693  0 10:09 pts/0    00:00:00 grep --color=auto prometheus</span><br></pre></td></tr></table></figure><h2 id="客户端"><a href="#客户端" class="headerlink" title="客户端"></a>客户端</h2><p>Prometheus的客户端分为pull和push两种方式</p><ul><li>pull方式</li></ul><blockquote><p>如果pull形式的话是服务端主动向客户端拉取数据，这样需要客户端上安装exporter作为守护进程（官网提供了很多exporters可以下载使用），比如node_exporter，几乎把系统自身相关数据全部采集了，非常全面，node_exporter默认监听9100端口。</p></blockquote><ul><li>push方式</li></ul><blockquote><p>如果是push形式的话客户端需要安装pushgateway插件，然后需要运维人员用脚本把监控数据以key&#x2F;value的形式提交给pushgateway，在由pushgateway提交给服务端。（这种模式适用于exporters无法满足监控需求时可以定义）</p></blockquote><h2 id="metric主要数据类型"><a href="#metric主要数据类型" class="headerlink" title="metric主要数据类型"></a>metric主要数据类型</h2><ul><li>Gauges</li></ul><blockquote><p>最简单、使用最多的指标，获取一个返回值，这个返回值没有变化规律，不能肯定他是按照一定增长或减少的状态，采集回来的是多少就是多少。比如硬盘容量、CPU内存使用率都适合使用Gauges类型</p></blockquote><ul><li>Counters</li></ul><blockquote><p>这个是个计数器。数据是从0开始积累的，理想状态下应该是永远增长或者是不变。适合统计器开机时间、HTTP访问量。</p></blockquote><ul><li>Histograms</li></ul><blockquote><p>和summary一样属于高级指标，用于统计数据的分布情况。比如最小值、最大值、中间值。比如统计一天的日志，大部分用户响应时间都是正常的，只有少量用户异常，如果这使用去平均值的话，这少量用户异常，如果这使用取平均值的话，这少量用户的异常情况就会被掩盖，而Histograms可以分别统计出全部用户的响应时间，比如0-1秒的用户有多少、1-2秒的用户有多少。</p></blockquote><h2 id="Prometheus的系统架构图"><a href="#Prometheus的系统架构图" class="headerlink" title="Prometheus的系统架构图"></a>Prometheus的系统架构图</h2><p><img src="/images/prometheus-architecture.png"></p><h1 id="Prometheus-联邦"><a href="#Prometheus-联邦" class="headerlink" title="Prometheus 联邦"></a>Prometheus 联邦</h1><p>Prometheus Server的环境：</p><blockquote><p>10.0.0.100 #主节点</p><p>10.0.0.101 #联邦节点1</p><p>10.0.0.102 #联邦节点2</p><p>10.0.0.107 #node1，联邦节点1的目标采集服务器</p><p>10.0.0.108 #node2，联邦节点2的目标采集服务器</p></blockquote><h2 id="Prometheus-主服务端安装"><a href="#Prometheus-主服务端安装" class="headerlink" title="Prometheus 主服务端安装"></a>Prometheus 主服务端安装</h2><h3 id="下载prometheus安装二进制包"><a href="#下载prometheus安装二进制包" class="headerlink" title="下载prometheus安装二进制包"></a>下载prometheus安装二进制包</h3><p><a href="https://github.com/prometheus/prometheus/releases">https://github.com/prometheus/prometheus/releases</a></p><p>或者官网下载：<a href="https://prometheus.io/download/">https://prometheus.io/download/</a></p><h3 id="下载好二进制包解压"><a href="#下载好二进制包解压" class="headerlink" title="下载好二进制包解压"></a>下载好二进制包解压</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service<span class="comment"># wget https://github.com/prometheus/prometheus/releases/download/v2.40.3/prometheus-2.40.3.linux-amd64.tar.gz</span></span><br><span class="line">root@k8s-master1:/data/service<span class="comment"># tar xf prometheus-2.40.3.linux-amd64.tar.gz </span></span><br><span class="line">root@k8s-master1:/data/service<span class="comment"># ln -s /data/service/prometheus-2.40.3.linux-amd64 /data/service/prometheus</span></span><br><span class="line">root@k8s-master1:/data/service<span class="comment"># cd /data/service/prometheus</span></span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># ll</span></span><br><span class="line">total 215468</span><br><span class="line">drwxr-xr-x 4 1001  121      4096 Nov 24  2022 ./</span><br><span class="line">drwxr-xr-x 3 root root      4096 Dec 14 10:55 ../</span><br><span class="line">drwxr-xr-x 2 1001  121      4096 Nov 24  2022 console_libraries/</span><br><span class="line">drwxr-xr-x 2 1001  121      4096 Nov 24  2022 consoles/</span><br><span class="line">-rw-r--r-- 1 1001  121     11357 Nov 24  2022 LICENSE</span><br><span class="line">-rw-r--r-- 1 1001  121      3773 Nov 24  2022 NOTICE</span><br><span class="line">-rwxr-xr-x 1 1001  121 114465040 Nov 24  2022 prometheus*</span><br><span class="line">-rw-r--r-- 1 1001  121       934 Nov 24  2022 prometheus.yml</span><br><span class="line">-rwxr-xr-x 1 1001  121 106132679 Nov 24  2022 promtool*</span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">Checking prometheus.yml</span><br><span class="line"> SUCCESS: prometheus.yml is valid prometheus config file syntax</span><br></pre></td></tr></table></figure><blockquote><p>prometheus.yml # 配置文件</p><p>prometheus* # Prometheus服务的可执行程序</p><p>promtool* # 测试工具，用于检测配置prometheus配置文件、检查metrics数据等</p></blockquote><h3 id="创建启动脚本并启动prometheus服务"><a href="#创建启动脚本并启动prometheus服务" class="headerlink" title="创建启动脚本并启动prometheus服务"></a>创建启动脚本并启动prometheus服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># cat /etc/systemd/system/prometheus.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus Monitoring</span><br><span class="line">Documentation=https://prometheus.io/docs/introduction/overview/</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/data/service/prometheus</span><br><span class="line">ExecStart=/data/service/prometheus/prometheus --config.file=/data/service/prometheus/prometheus.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># systemctl daemon-reload &amp;&amp; systemctl restart prometheus.service &amp;&amp; systemctl enable prometheus.service</span></span><br><span class="line"><span class="comment"># 服务起来后验证一下端口</span></span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># netstat -tunlp | grep prometheus</span></span><br><span class="line">tcp6       0      0 :::9090                 :::*                    LISTEN      61236/prometheus</span><br></pre></td></tr></table></figure><p>这时我们就可以在浏览器中访问prometheus server端的地址了：ip:9090</p><p><img src="/images/prometheus-web1.png"></p><p>当前只监控了prometheus服务端本身</p><p><img src="/images/prometheus-web2.png"></p><p>查看监控指标的数据</p><p><img src="/images/prometheus-web3.png"></p><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><p>prometheus的配置文件分为四个配置</p><ul><li>global：全局配置</li><li>alerting：告警配置</li><li>rule_files：告警规则</li><li>scrape_configs：配置数据源（target）</li></ul><p>prometheus配置文件：</p><blockquote><p>honor_labels：配置为true可以确保当采集到的监控指标冲突时，能够自动忽略冲突的监控数据。如果为false时，prometheus会自动将冲突的标签替换为exported_&lt;original-label&gt;的形式</p></blockquote><blockquote><p>match[]：指定需要获取的时间序列。match[]参数必须是一个瞬时向量选择器，比如：up或者{job&#x3D;”api-server”}。配置多个match[]参数，用于获取多组时间序列的监控数据。</p></blockquote><p>修改配置来采集联邦server的数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># cat prometheus.yml </span></span><br><span class="line"><span class="comment"># my global config</span></span><br><span class="line">global:</span><br><span class="line">  scrape_interval: 15s <span class="comment"># Set the scrape interval to every 15 seconds. Default is every 1 minute.</span></span><br><span class="line">  evaluation_interval: 15s <span class="comment"># Evaluate rules every 15 seconds. The default is every 1 minute.</span></span><br><span class="line">  <span class="comment"># scrape_timeout is set to the global default (10s).</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Alertmanager configuration</span></span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">    - static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">            - 10.0.0.100:9093</span><br><span class="line"></span><br><span class="line"><span class="comment"># Load rules once and periodically evaluate them according to the global &#x27;evaluation_interval&#x27;.</span></span><br><span class="line">rule_files:</span><br><span class="line">  <span class="comment"># - &quot;first_rules.yml&quot;</span></span><br><span class="line">  <span class="comment"># - &quot;second_rules.yml&quot;</span></span><br><span class="line">  - /data/service/prometheus/rules/all.yml</span><br><span class="line"></span><br><span class="line"><span class="comment"># A scrape configuration containing exactly one endpoint to scrape:</span></span><br><span class="line"><span class="comment"># Here it&#x27;s Prometheus itself.</span></span><br><span class="line">scrape_configs:</span><br><span class="line">  <span class="comment"># The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.</span></span><br><span class="line">  - job_name: <span class="string">&quot;prometheus&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># metrics_path defaults to &#x27;/metrics&#x27;</span></span><br><span class="line">    <span class="comment"># scheme defaults to &#x27;http&#x27;.</span></span><br><span class="line"></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;localhost:9090&quot;</span>]</span><br><span class="line"></span><br><span class="line">  - job_name: <span class="string">&quot;prometheus-federate-101&quot;</span></span><br><span class="line">    honor_labels: <span class="literal">true</span></span><br><span class="line">    metrics_path: /federate</span><br><span class="line">    params:</span><br><span class="line">      match[]:</span><br><span class="line">        - <span class="string">&#x27;&#123;__name__=~&quot;^slave:.*&quot;&#125;&#x27;</span></span><br><span class="line">        - <span class="string">&#x27;&#123;__name__=~&quot;job:.*&quot;&#125;&#x27;</span></span><br><span class="line">        - <span class="string">&#x27;&#123;__name__=~&quot;node.*&quot;&#125;&#x27;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: </span><br><span class="line">        - 10.0.0.101:9090</span><br><span class="line"></span><br><span class="line">  - job_name: <span class="string">&quot;prometheus-federate-102&quot;</span></span><br><span class="line">    honor_labels: <span class="literal">true</span></span><br><span class="line">    metrics_path: /federate</span><br><span class="line">    params:</span><br><span class="line">      match[]:</span><br><span class="line">        - <span class="string">&#x27;&#123;__name__=~&quot;^slave:.*&quot;&#125;&#x27;</span></span><br><span class="line">        - <span class="string">&#x27;&#123;__name__=~&quot;job:.*&quot;&#125;&#x27;</span></span><br><span class="line">        - <span class="string">&#x27;&#123;__name__=~&quot;node.*&quot;&#125;&#x27;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: </span><br><span class="line">        - 10.0.0.102:9090</span><br></pre></td></tr></table></figure><h3 id="配置告警规则"><a href="#配置告警规则" class="headerlink" title="配置告警规则"></a>配置告警规则</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># mkdir rules</span></span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># vim rules/all.yml</span></span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># cat rules/all.yml</span></span><br><span class="line"><span class="built_in">groups</span>:</span><br><span class="line">    - name: 主机状态-监控告警</span><br><span class="line">      rules:</span><br><span class="line">      - alert: 主机状态</span><br><span class="line">        <span class="built_in">expr</span>: up == 0</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          status: 非常严重</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.instance&#125;&#125;:服务器宕机&quot;</span></span><br><span class="line">          description: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.instance&#125;&#125;:服务器延时超过5分钟&quot;</span></span><br><span class="line">      </span><br><span class="line">      - alert: CPU使用情况</span><br><span class="line">        <span class="built_in">expr</span>: 100-(avg(irate(node_cpu_seconds_total&#123;mode=<span class="string">&quot;idle&quot;</span>&#125;[5m])) by(instance)* 100) &gt; 60</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          status: 一般告警</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint&#125;&#125; CPU使用率过高！&quot;</span></span><br><span class="line">          description: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint &#125;&#125; CPU使用大于60%(目前使用:&#123;&#123;<span class="variable">$value</span>&#125;&#125;%)&quot;</span></span><br><span class="line">  </span><br><span class="line">      - alert: 内存使用</span><br><span class="line">        <span class="built_in">expr</span>: 100 -(node_memory_MemTotal_bytes -node_memory_MemFree_bytes+node_memory_Buffers_bytes+node_memory_Cached_bytes ) / node_memory_MemTotal_bytes * 100&gt; 80</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          status: 严重告警</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint&#125;&#125; 内存使用率过高！&quot;</span></span><br><span class="line">          description: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint &#125;&#125; 内存使用大于80%(目前使用:&#123;&#123;<span class="variable">$value</span>&#125;&#125;%)&quot;</span></span><br><span class="line">      - alert: IO性能</span><br><span class="line">        <span class="built_in">expr</span>: 100-(avg(irate(node_disk_io_time_seconds_total[1m])) by(instance)* 100) &lt; 60</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          status: 严重告警</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint&#125;&#125; 流入磁盘IO使用率过高！&quot;</span></span><br><span class="line">          description: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint &#125;&#125; 流入磁盘IO大于60%(目前使用:&#123;&#123;<span class="variable">$value</span>&#125;&#125;)&quot;</span></span><br><span class="line"> </span><br><span class="line">      - alert: 网络</span><br><span class="line">        <span class="built_in">expr</span>: ((sum(rate (node_network_receive_bytes_total&#123;device!~&#x27;tap.*|veth.*|br.*|docker.*|virbr*|lo*&#x27;&#125;[<span class="number">5</span>m])) by (instance)) / 100) &gt; 102400</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          status: 严重告警</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint&#125;&#125; 流入网络带宽过高！&quot;</span></span><br><span class="line">          description: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint &#125;&#125;流入网络带宽持续2分钟高于100M. RX带宽使用率&#123;&#123;<span class="variable">$value</span>&#125;&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">      - alert: TCP会话</span><br><span class="line">        <span class="built_in">expr</span>: node_netstat_Tcp_CurrEstab &gt; 1000</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          status: 严重告警</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint&#125;&#125; TCP_ESTABLISHED过高！&quot;</span></span><br><span class="line">          description: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint &#125;&#125; TCP_ESTABLISHED大于1000%(目前使用:&#123;&#123;<span class="variable">$value</span>&#125;&#125;%)&quot;</span></span><br><span class="line"> </span><br><span class="line">      - alert: 磁盘容量</span><br><span class="line">        <span class="built_in">expr</span>: 100-(node_filesystem_free_bytes&#123;fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125;/node_filesystem_size_bytes &#123;fstype=~<span class="string">&quot;ext4|xfs&quot;</span>&#125;*100) &gt; 70</span><br><span class="line">        <span class="keyword">for</span>: 1m</span><br><span class="line">        labels:</span><br><span class="line">          status: 严重告警</span><br><span class="line">        annotations:</span><br><span class="line">          summary: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint&#125;&#125; 磁盘分区使用率过高！&quot;</span></span><br><span class="line">          description: <span class="string">&quot;&#123;&#123;<span class="variable">$labels</span>.mountpoint &#125;&#125; 磁盘分区使用大于80%(目前使用:&#123;&#123;<span class="variable">$value</span>&#125;&#125;%)&quot;</span></span><br></pre></td></tr></table></figure><h2 id="部署node-exporter"><a href="#部署node-exporter" class="headerlink" title="部署node_exporter"></a>部署node_exporter</h2><p>在监控的Node节点分别部署node_exporter(exporter)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-node1:~<span class="comment"># mkdir /data/service</span></span><br><span class="line">root@k8s-node1:~<span class="comment"># cd /data/service</span></span><br><span class="line">root@k8s-node1:/data/service<span class="comment"># wget https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz</span></span><br><span class="line">root@k8s-node1:/data/service<span class="comment"># tar xf node_exporter-1.5.0.linux-amd64.tar.gz</span></span><br><span class="line">root@k8s-node1:/data/service<span class="comment"># mv node_exporter-1.5.0.linux-amd64 node_exporter</span></span><br><span class="line">root@k8s-node1:/data/service<span class="comment"># cd node_exporter/</span></span><br><span class="line">root@k8s-node1:/data/service/node_exporter<span class="comment"># ls</span></span><br><span class="line">LICENSE  NOTICE  node_exporter</span><br><span class="line"></span><br><span class="line">创建启动脚本</span><br><span class="line">root@k8s-node1:/data/service/node_exporter<span class="comment"># vim /etc/systemd/system/node-exporter.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus Node Exporter</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">ExecStart=/data/service/node_exporter/node_exporter</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">启动服务</span><br><span class="line">root@k8s-node1:/data/service/node_exporter<span class="comment"># systemctl daemon-reload &amp;&amp; systemctl restart node-exporter &amp;&amp; systemctl enable node-exporter</span></span><br><span class="line">root@k8s-node1:/data/service/node_exporter<span class="comment"># lsof -i:9100</span></span><br><span class="line">COMMAND      PID USER   FD   TYPE  DEVICE SIZE/OFF NODE NAME</span><br><span class="line">node_expo 262106 root    3u  IPv6 1252462      0t0  TCP *:9100 (LISTEN)</span><br></pre></td></tr></table></figure><p>node_exporter是可执行的程序</p><h2 id="安装并配置联邦server监控node-exporter"><a href="#安装并配置联邦server监控node-exporter" class="headerlink" title="安装并配置联邦server监控node_exporter"></a>安装并配置联邦server监控node_exporter</h2><p>分别在联邦节点1监控node1，联邦节点2监控node2</p><ul><li>联邦节点1</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master2:~<span class="comment"># mkdir /data/service</span></span><br><span class="line">root@k8s-master2:~<span class="comment"># cd /data/service/</span></span><br><span class="line">root@k8s-master2:/data/service<span class="comment"># wget https://github.com/prometheus/prometheus/releases/download/v2.40.3/prometheus-2.40.3.linux-amd64.tar.gz</span></span><br><span class="line">root@k8s-master2:/data/service<span class="comment"># mv prometheus-2.40.3.linux-amd64 prometheus</span></span><br><span class="line">root@k8s-master2:/data/service<span class="comment"># cd prometheus/</span></span><br><span class="line">root@k8s-master2:/data/service/prometheus<span class="comment"># vim /etc/systemd/system/prometheus.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus Monitoring</span><br><span class="line">Documentation=https://prometheus.io/docs/introduction/overview/</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/data/service/prometheus</span><br><span class="line">ExecStart=/data/service/prometheus/prometheus --config.file=/data/service/prometheus/prometheus.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在配置文件后面加上下面配置</span></span><br><span class="line">root@k8s-master2:/data/service/prometheus<span class="comment"># vim prometheus.yml </span></span><br><span class="line">  - job_name: <span class="string">&quot;prometheus-node1&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.107:9100&quot;</span>]                                                            </span><br><span class="line">root@k8s-master2:/data/service/prometheus<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">Checking prometheus.yml</span><br><span class="line"> SUCCESS: prometheus.yml is valid prometheus config file syntax</span><br><span class="line"></span><br><span class="line">root@k8s-master2:/data/service/prometheus<span class="comment"># systemctl daemon-reload &amp;&amp; systemctl restart prometheus.service &amp;&amp; systemctl enable prometheus.service</span></span><br></pre></td></tr></table></figure><p><img src="/images/prometheus-web4.png"></p><ul><li>联邦节点2</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master3:~<span class="comment"># mkdir /data/service</span></span><br><span class="line">root@k8s-master3:~<span class="comment"># cd /data/service/</span></span><br><span class="line">root@k8s-master3:/data/service<span class="comment"># wget https://github.com/prometheus/prometheus/releases/download/v2.40.3/prometheus-2.40.3.linux-amd64.tar.gz</span></span><br><span class="line">root@k8s-master3:/data/service<span class="comment"># mv prometheus-2.40.3.linux-amd64 prometheus</span></span><br><span class="line">root@k8s-master3:/data/service<span class="comment"># cd prometheus/</span></span><br><span class="line">root@k8s-master3:/data/service/prometheus<span class="comment"># vim /etc/systemd/system/prometheus.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus Monitoring</span><br><span class="line">Documentation=https://prometheus.io/docs/introduction/overview/</span><br><span class="line">After=network-online.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/data/service/prometheus</span><br><span class="line">ExecStart=/data/service/prometheus/prometheus --config.file=/data/service/prometheus/prometheus.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在配置文件后面加上下面配置</span></span><br><span class="line">root@k8s-master3:/data/service/prometheus<span class="comment"># vim prometheus.yml </span></span><br><span class="line">  - job_name: <span class="string">&quot;prometheus-node2&quot;</span></span><br><span class="line">    static_configs:</span><br><span class="line">      - targets: [<span class="string">&quot;10.0.0.108:9100&quot;</span>]                                                            </span><br><span class="line">root@k8s-master3:/data/service/prometheus<span class="comment"># ./promtool check config prometheus.yml</span></span><br><span class="line">Checking prometheus.yml</span><br><span class="line"> SUCCESS: prometheus.yml is valid prometheus config file syntax</span><br><span class="line"></span><br><span class="line">root@k8s-master3:/data/service/prometheus<span class="comment"># systemctl daemon-reload &amp;&amp; systemctl restart prometheus.service &amp;&amp; systemctl enable prometheus.service</span></span><br></pre></td></tr></table></figure><p><img src="/images/prometheus-web5.png"></p><h2 id="在prometheus-主server上验证数据"><a href="#在prometheus-主server上验证数据" class="headerlink" title="在prometheus 主server上验证数据"></a>在prometheus 主server上验证数据</h2><ul><li>验证数据收集的状态</li></ul><p><img src="/images/prometheus-web6.png"></p><ul><li>验证指标数据</li></ul><p><img src="/images/prometheus-web7.png"></p><h1 id="安装alertmanager告警插件"><a href="#安装alertmanager告警插件" class="headerlink" title="安装alertmanager告警插件"></a>安装alertmanager告警插件</h1><h2 id="下载安装alertmanager"><a href="#下载安装alertmanager" class="headerlink" title="下载安装alertmanager"></a>下载安装alertmanager</h2><p>下载地址：<a href="https://github.com/prometheus/alertmanager">https://github.com/prometheus/alertmanager</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service<span class="comment"># wget https://github.com/prometheus/alertmanager/releases/download/v0.24.0/alertmanager-0.24.0.linux-amd64.tar.gz</span></span><br><span class="line">root@k8s-master1:/data/service<span class="comment"># tar xf alertmanager-0.24.0.linux-amd64.tar.gz </span></span><br><span class="line">root@k8s-master1:/data/service<span class="comment"># mv alertmanager-0.24.0.linux-amd64 alertmanager</span></span><br><span class="line">root@k8s-master1:/data/service<span class="comment"># cd alertmanager/</span></span><br><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># ls</span></span><br><span class="line">alertmanager  alertmanager.yml  amtool  LICENSE  NOTICE</span><br><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># vim /etc/systemd/system/alertmanager.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Prometheus Server</span><br><span class="line">Documentation=https://prometheus.io/docs/introduction/overview/</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=simple</span><br><span class="line">WorkingDirectory=/data/service/alertmanager</span><br><span class="line">ExecStart=/data/service/alertmanager/alertmanager --config.file=/data/service/alertmanager/alertmanager.yml</span><br><span class="line">Restart=on-failure</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># systemctl enable alertmanager</span></span><br><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># systemctl restart alertmanager.service </span></span><br><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># ps -ef | grep alertmanager</span></span><br><span class="line">root      432844       1  0 21:41 ?        00:00:00 /data/service/alertmanager/alertmanager --config.file=/data/service/alertmanager/alertmanager.yml</span><br><span class="line">root      432976    3119  0 21:41 pts/0    00:00:00 grep --color=auto alertmanager</span><br></pre></td></tr></table></figure><h2 id="alertmanager配置文件"><a href="#alertmanager配置文件" class="headerlink" title="alertmanager配置文件"></a>alertmanager配置文件</h2><ul><li>邮箱报警配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># vim alertmanager.yml </span></span><br><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># cat alertmanager.yml </span></span><br><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m <span class="comment">#解析超时时间</span></span><br><span class="line">  smtp_from: <span class="string">&#x27;eternallywm@qq.com&#x27;</span> <span class="comment">#指定通知报警的邮箱</span></span><br><span class="line">  smtp_smarthost: <span class="string">&#x27;smtp.qq.com:465&#x27;</span> <span class="comment">#使用email打开服务配置</span></span><br><span class="line">  smtp_auth_username: <span class="string">&#x27;eternallywm@qq.com&#x27;</span> <span class="comment">#邮箱用户名</span></span><br><span class="line">  smtp_auth_password: <span class="string">&#x27;lrdxttfcjxwhcadb&#x27;</span> <span class="comment">#邮箱授权密码</span></span><br><span class="line">  smtp_hello: <span class="string">&#x27;@qq.com&#x27;</span></span><br><span class="line">  smtp_require_tls: <span class="literal">false</span> <span class="comment">#是否启用tls</span></span><br><span class="line"></span><br><span class="line">route: <span class="comment">#router用来设置报警分发策略</span></span><br><span class="line">  group_by: [<span class="string">&#x27;alertname&#x27;</span>] <span class="comment">#采用那个标签来作为分组依据</span></span><br><span class="line">  group_wait: 10s <span class="comment">#高级等待时间，也就是告警产生后等待10s，如果有同组告警就一起发出</span></span><br><span class="line">  group_interval: 10s <span class="comment">#两组告警的间隔时间</span></span><br><span class="line">  repeat_interval: 2m <span class="comment">#重复告警的间隔时间，减少相同邮件的发送频率，默认1h</span></span><br><span class="line">  receiver: <span class="string">&#x27;mail&#x27;</span> <span class="comment">#设置告警接收人</span></span><br><span class="line">receivers:</span><br><span class="line">  - name: <span class="string">&#x27;mail&#x27;</span></span><br><span class="line">    email_configs:</span><br><span class="line">      - to: <span class="string">&#x27;18473514861@163.com&#x27;</span></span><br><span class="line">inhibit_rules: <span class="comment">#抑制的规则</span></span><br><span class="line">  - source_match: <span class="comment">#源匹配级别，当匹配成功发出通知，但是其他的通知将被抑制</span></span><br><span class="line">      severity: <span class="string">&#x27;critical&#x27;</span></span><br><span class="line">    target_match:</span><br><span class="line">      severity: <span class="string">&#x27;warning&#x27;</span></span><br><span class="line">    equal: [<span class="string">&#x27;alertname&#x27;</span>, <span class="string">&#x27;dev&#x27;</span>, <span class="string">&#x27;instance&#x27;</span>]</span><br></pre></td></tr></table></figure><ul><li>企业微信告警配置文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># cat wechat-alertmanager.yml </span></span><br><span class="line">global:</span><br><span class="line">  resolve_timeout: 5m</span><br><span class="line">  wechat_api_corp_id: <span class="string">&#x27;wwf21db505fce2dde4&#x27;</span>  </span><br><span class="line">  wechat_api_url: <span class="string">&#x27;https://qyapi.weixin.qq.com/cgi-bin/&#x27;</span></span><br><span class="line">  wechat_api_secret: <span class="string">&#x27;VmgazzYOKCeUe7JkdeKE_Je-PSIsZN85dHXaFQvFJME&#x27;</span></span><br><span class="line"> </span><br><span class="line">route:</span><br><span class="line">  group_by: [<span class="string">&#x27;alertname&#x27;</span>]  <span class="comment">#报警分组依据</span></span><br><span class="line">  group_wait: 10s  <span class="comment">#组等待时间</span></span><br><span class="line">  group_interval: 10s  <span class="comment">#发送前等待时间</span></span><br><span class="line">  repeat_interval: 1h  <span class="comment">#重复周期</span></span><br><span class="line">  receiver: <span class="string">&#x27;wechat&#x27;</span>   <span class="comment">#默认报警接受者</span></span><br><span class="line">receivers:</span><br><span class="line">- name: <span class="string">&#x27;wechat&#x27;</span></span><br><span class="line">  wechat_configs:</span><br><span class="line">  - send_resolved: <span class="literal">true</span></span><br><span class="line">    to_party: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">    agent_id: <span class="string">&#x27;1000002&#x27;</span></span><br><span class="line">    corp_id: <span class="string">&#x27;xxxx&#x27;</span></span><br><span class="line">    api_url: <span class="string">&#x27;https://qyapi.weixin.qq.com/cgi-bin/&#x27;</span></span><br><span class="line">    api_secret: <span class="string">&#x27;xxxx-PSIsZN85dHXaFQvFJME&#x27;</span></span><br></pre></td></tr></table></figure><p>修改完配置后在server端配置文件中加上alerting</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/data/service/alertmanager<span class="comment"># cd ../prometheus</span></span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># vim prometheus.yml</span></span><br><span class="line">alerting:</span><br><span class="line">  alertmanagers:</span><br><span class="line">    - static_configs:</span><br><span class="line">        - targets:</span><br><span class="line">            - 10.0.0.100:9093</span><br><span class="line">root@k8s-master1:/data/service/prometheus<span class="comment"># systemctl restart prometheus</span></span><br></pre></td></tr></table></figure><h1 id="安装Grafana图形显示数据"><a href="#安装Grafana图形显示数据" class="headerlink" title="安装Grafana图形显示数据"></a>安装Grafana图形显示数据</h1><p>官方文档：<a href="https://grafana.com/docs/">https://grafana.com/docs/</a></p><h2 id="安装grafana服务并启动"><a href="#安装grafana服务并启动" class="headerlink" title="安装grafana服务并启动"></a>安装grafana服务并启动</h2><p>下载地址：<a href="https://grafana.com/grafana/download">https://grafana.com/grafana/download</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># apt-get install -y adduser libfontconfig1 musl</span></span><br><span class="line"><span class="comment"># 如果官方下载很慢可以换成国内的镜像站地址：https://mirrors.aliyun.com/grafana/apt/pool/main/g/grafana-enterprise/grafana-enterprise_9.2.7_amd64.deb</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># wget https://dl.grafana.com/enterprise/release/grafana-enterprise_9.2.7_amd64.deb</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># dpkg -i grafana-enterprise_9.2.7_amd64.deb</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># vim /etc/grafana/grafana.ini </span></span><br><span class="line">[server]</span><br><span class="line"><span class="comment"># Protocol (http, https, h2, socket)</span></span><br><span class="line">protocol = http</span><br><span class="line"></span><br><span class="line"><span class="comment"># The ip address to bind to, empty will bind to all interfaces</span></span><br><span class="line">http_addr = 0.0.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment"># The http port  to use</span></span><br><span class="line">http_port = 3000</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改完配置文件启动grafana服务</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># systemctl start grafana-server &amp;&amp; systemctl enable grafana-server</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># ps -ef | grep grafana</span></span><br><span class="line">grafana   453768       1  1 22:15 ?        00:00:00 /usr/sbin/grafana-server --config=/etc/grafana/grafana.ini --pidfile=/run/grafana/grafana-server.pid --packaging=deb cfg:default.paths.logs=/var/log/grafana cfg:default.paths.data=/var/lib/grafana cfg:default.paths.plugins=/var/lib/grafana/plugins cfg:default.paths.provisioning=/etc/grafana/provisioning</span><br><span class="line">root      454494    3119  0 22:16 pts/0    00:00:00 grep --color=auto grafana</span><br></pre></td></tr></table></figure><p>浏览器中访问ip:3000</p><p><img src="/images/grafana-web1.png"></p><h2 id="在grafana-web界面添加数据源"><a href="#在grafana-web界面添加数据源" class="headerlink" title="在grafana web界面添加数据源"></a>在grafana web界面添加数据源</h2><p><img src="/images/grafana-web2.png"></p><p><img src="/images/grafana-web3.png"></p><p>这里的URL地址是prometheus-server</p><p><img src="/images/grafana-web4.png"></p><p>填写完后就可以Save&amp;test，出现下图就添加成功了</p><p><img src="/images/grafana-web5.png"></p><h2 id="导入dashboards模板"><a href="#导入dashboards模板" class="headerlink" title="导入dashboards模板"></a>导入dashboards模板</h2><p>模板查看下载ID地址：<a href="https://grafana.com/grafana/dashboards">https://grafana.com/grafana/dashboards</a></p><p><img src="/images/grafana-web6.png"></p><p>现在常用的Prometheus模板有8919和1860</p><p><img src="/images/grafana-web7.png"></p><p><img src="/images/grafana-web8.png"></p>]]></content>
      
      
      <categories>
          
          <category> Prometheus </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Prometheus </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-Pod生命周期和探针</title>
      <link href="/post/d2f55df9.html"/>
      <url>/post/d2f55df9.html</url>
      
        <content type="html"><![CDATA[<h1 id="Pod生命周期和探针"><a href="#Pod生命周期和探针" class="headerlink" title="Pod生命周期和探针"></a>Pod生命周期和探针</h1><h2 id="pod-lifecycle"><a href="#pod-lifecycle" class="headerlink" title="pod lifecycle"></a>pod lifecycle</h2><p>pod的生命周期，从start后可以配置postStart检测，运行过程中可以配置livenessProbe和readinessProbe，最后在stop前可以preStop操作。</p><p><img src="/images/pod-lifecycle.png"></p><h2 id="探针的简介"><a href="#探针的简介" class="headerlink" title="探针的简介"></a>探针的简介</h2><p>探针就是有 kubelet 对容器执行的定期诊断，以保证Pod的状态始终是处于运行状态，要执行诊断，kubelet 调用由容器实现的Handler（处理程序），也成为Hook（钩子）了，有三种类型的处理程序：</p><ul><li>ExecAction：# 在容器执行指定命令，如果命令退出时返回码为0则认为诊断成功；</li><li>TCPSocketAction：# 对指定端口上的容器的IP地址进行TCP检查，如果端口打开，则诊断被认为是成功的；</li><li>HTTPGetAction：# 对指定的端口和路径上的容器的IP地址执行HTTP GET请求，如果响应的状态码大于等于200且小于400，则诊断被认为是成功的；</li></ul><p>每次探测都将获得以下三种结果之一：</p><ul><li>成功：容器通过了诊断</li><li>失败：容器未通过诊断</li><li>未知：诊断失败，因此不会采取任何行动</li></ul><h3 id="Pod的重启策略"><a href="#Pod的重启策略" class="headerlink" title="Pod的重启策略"></a>Pod的重启策略</h3><p>Pod一旦配置了探针，在检测失败的时候，会基于restartPolicy对Pod进行下一步操作</p><p>restartPolicy（容器重启策略）：</p><ul><li>Always：当容器出现异常时，k8s会自动重启该容器</li></ul><p>ReplicationController、Replicaset、Deployment，默认为Always。</p><ul><li>OnFailure：当容器失败时（容器停止运行且退出码不为0），这时k8s就会自动重启该容器</li><li>Never：不论容器运行状态如何都不会重启该容器，例如Job或CronJob</li></ul><p><img src="/images/pod-restart.png"></p><h3 id="探针的类型"><a href="#探针的类型" class="headerlink" title="探针的类型"></a>探针的类型</h3><blockquote><p>startupProbe：# 启动探针，在kubernetes v1.16就引入了，判断容器内应用程序是否已启动完成，如果配置了启动探测，则会先禁用所有其它的探测，直到startupProbe检测成功为止，如果startupProbe探测失败，则kubelet将杀死容器，容器将按照重启策略进行下一步操作，如果容器没有提供启动探测，则默认状态为成功；</p><p>livenessProbe：# 存活探针，检测容器是否正在运行，如果存活探测失败,则kubelet会杀死容器，并且容器将受到其重启策略的影响，如果容器不提供存活探针，则默认状态为Success，livenessProbe用于控制是否重启Pod。</p><p>readinessProbe: # 就绪探针，如果就绪探测失败，端点控制器将从与Pod匹配的所有Service的端点中删除该Pod的IP地址，初始延迟之前的就绪状态默认为Failure(失败)，如果容器不提供就绪探针，则默认状态为Success，readinessProbe用于控制pod是否添加至service。</p></blockquote><h3 id="探针通用配置参数"><a href="#探针通用配置参数" class="headerlink" title="探针通用配置参数"></a>探针通用配置参数</h3><p>探针有很多配置字段，我们可以使用这些字段精确的控制存活和就绪检测的行为：<a href="https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes">https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes</a></p><ul><li>initialDelaySeconds：容器启动后要等待多少秒后才启动启动、存活和就绪探针。 如果定义了启动探针，则存活探针和就绪探针的延迟将在启动探针已成功之后才开始计算。 如果 periodSeconds 的值大于 initialDelaySeconds，则 initialDelaySeconds 将被忽略。默认是 0 秒，最小值是 0。</li><li>periodSeconds：执行探测的时间间隔（单位是秒）。默认是 10 秒。最小值是 1。</li><li>timeoutSeconds：单次探测的超时后等待多少秒。默认值是 1 秒。最小值是 1。</li><li>successThreshold：探针在失败后，被视为成功的最小连续成功数。默认值是 1。 存活和启动探测的这个值必须是 1。最小值是 1。</li><li>failureThreshold：探针连续失败了 failureThreshold 次之后， Kubernetes 认为总体上检查已失败：容器状态未就绪、不健康、不活跃。 对于启动探针或存活探针而言，如果至少有 failureThreshold 个探针已失败， Kubernetes 会将容器视为不健康并为这个特定的容器触发重启操作。 kubelet 遵循该容器的 terminationGracePeriodSeconds 设置。 对于失败的就绪探针，kubelet 继续运行检查失败的容器，并继续运行更多探针； 因为检查失败，kubelet 将 Pod 的 Ready 状况设置为 false。</li><li>terminationGracePeriodSeconds：为 kubelet 配置从为失败的容器触发终止操作到强制容器运行时停止该容器之前等待的宽限时长。 默认值是继承 Pod 级别的 terminationGracePeriodSeconds 值（如果不设置则为 30 秒），最小值为 1。 更多细节请参见探针级别terminationGracePeriodSeconds。</li></ul><h3 id="探针http配置参数"><a href="#探针http配置参数" class="headerlink" title="探针http配置参数"></a>探针http配置参数</h3><p>HTTP 探测器可以在httpGet上配置额外的字段：</p><ul><li>host：连接使用的主机名，默认是Pod的IP，也可以在HTTP头中设置“Host”来代替。</li><li>scheme：用于设置连接主机的方式（HTTP 还是 HTTPS）。默认是 “HTTP”。</li><li>path：访问 HTTP 服务的路径。默认值为 “&#x2F;“。</li><li>httpHeaders：请求中自定义的 HTTP 头。HTTP 头字段允许重复。</li><li>port：访问容器的端口号或者端口名。如果数字必须在 1～65535 之间。</li></ul><p><strong>探针示例</strong></p><p>1、http-Probe</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/http-probe<span class="comment"># cat 1-http-Probe.yaml </span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-deployment</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: <span class="comment">#rs or deployment</span></span><br><span class="line">      app: myserver-myapp-frontend-label</span><br><span class="line">    <span class="comment">#matchExpressions:</span></span><br><span class="line">    <span class="comment">#  - &#123;key: app, operator: In, values: [myserver-myapp-frontend,ng-rs-81]&#125;</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend-label</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-frontend-label</span><br><span class="line">        image: nginx:1.20.2</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        <span class="comment">#readinessProbe:</span></span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            <span class="comment">#path: /monitor/monitor.html</span></span><br><span class="line">            path: /index.html</span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 3</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br><span class="line"></span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            <span class="comment">#path: /monitor/monitor.html</span></span><br><span class="line">            path: /index.html</span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 3</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-service</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 40018</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend-label</span><br></pre></td></tr></table></figure><p>2、tcp-Probe</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/http-probe<span class="comment"># cat 2-tcp-Probe.yaml </span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-deployment</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: <span class="comment">#rs or deployment</span></span><br><span class="line">      app: myserver-myapp-frontend-label</span><br><span class="line">    <span class="comment">#matchExpressions:</span></span><br><span class="line">    <span class="comment">#  - &#123;key: app, operator: In, values: [myserver-myapp-frontend,ng-rs-81]&#125;</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend-label</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-frontend-label</span><br><span class="line">        image: nginx:1.20.2</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        livenessProbe:</span><br><span class="line">        <span class="comment">#readinessProbe:</span></span><br><span class="line">          tcpSocket:</span><br><span class="line">            <span class="comment">#port: 80</span></span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-service</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 81</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 40012</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend</span><br></pre></td></tr></table></figure><p>3、exec-Probe</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/http-probe<span class="comment"># cat 3-exec-Probe.yaml </span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-redis-deployment</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: <span class="comment">#rs or deployment</span></span><br><span class="line">      app: myserver-myapp-redis-label</span><br><span class="line">    <span class="comment">#matchExpressions:</span></span><br><span class="line">    <span class="comment">#  - &#123;key: app, operator: In, values: [myserver-myapp-redis,ng-rs-81]&#125;</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-redis-label</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-redis-container</span><br><span class="line">        image: redis</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 6379</span><br><span class="line">        livenessProbe:</span><br><span class="line">        <span class="comment">#readinessProbe:</span></span><br><span class="line">          <span class="built_in">exec</span>:</span><br><span class="line">            <span class="built_in">command</span>:</span><br><span class="line">            <span class="comment">#- /apps/redis/bin/redis-cli</span></span><br><span class="line">            - /usr/local/bin/redis-cli </span><br><span class="line">            - quit</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">      </span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-redis-service</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 6379</span><br><span class="line">    targetPort: 6379</span><br><span class="line">    nodePort: 40016</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-redis-label</span><br></pre></td></tr></table></figure><p>4、startupProbe</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/http-probe<span class="comment"># cat 4-startupProbe.yaml </span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-deployment</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: <span class="comment">#rs or deployment</span></span><br><span class="line">      app: myserver-myapp-frontend-label</span><br><span class="line">    <span class="comment">#matchExpressions:</span></span><br><span class="line">    <span class="comment">#  - &#123;key: app, operator: In, values: [myserver-myapp-frontend,ng-rs-81]&#125;</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend-label</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-frontend-label</span><br><span class="line">        image: nginx:1.20.2</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        startupProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /index.html</span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 5 <span class="comment">#首次检测延迟5s</span></span><br><span class="line">          failureThreshold: 3  <span class="comment">#从成功转为失败的次数</span></span><br><span class="line">          periodSeconds: 3 <span class="comment">#探测间隔周期</span></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-service</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 81</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 40012</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend-label</span><br></pre></td></tr></table></figure><p>5、startupProbe-livenessProbe-readinessProbe</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/http-probe<span class="comment"># cat 5-startupProbe-livenessProbe-readinessProbe.yaml </span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-deployment</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: <span class="comment">#rs or deployment</span></span><br><span class="line">      app: myserver-myapp-frontend-label</span><br><span class="line">    <span class="comment">#matchExpressions:</span></span><br><span class="line">    <span class="comment">#  - &#123;key: app, operator: In, values: [myserver-myapp-frontend,ng-rs-81]&#125;</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend-label</span><br><span class="line">    spec:</span><br><span class="line">      terminationGracePeriodSeconds: 60</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-frontend-label</span><br><span class="line">        image: nginx:1.20.2</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        startupProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            <span class="comment">#path: /monitor/index.html</span></span><br><span class="line">            path: /index.html</span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 5 <span class="comment">#首次检测延迟5s</span></span><br><span class="line">          failureThreshold: 3  <span class="comment">#从成功转为失败的次数</span></span><br><span class="line">          periodSeconds: 3 <span class="comment">#探测间隔周期</span></span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            <span class="comment">#path: /monitor/monitor.html</span></span><br><span class="line">            path: /index.html</span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            <span class="comment">#path: /monitor/monitor.html</span></span><br><span class="line">            path: /index.html</span><br><span class="line">            port: 80</span><br><span class="line">          initialDelaySeconds: 5</span><br><span class="line">          periodSeconds: 3</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 3</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-service</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 81</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 40012</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend-label</span><br></pre></td></tr></table></figure><p><img src="/images/probe-example.png"></p><h3 id="postStart-and-preStop-handlers"><a href="#postStart-and-preStop-handlers" class="headerlink" title="postStart and preStop handlers"></a>postStart and preStop handlers</h3><p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/">https://kubernetes.io/zh-cn/docs/tasks/configure-pod-container/attach-handler-lifecycle-event/</a></p><p>postStart 和 preStop handlers 处理函数：</p><ul><li>postStart：Pod被创建后立即执行检测，即不等待pod中的服务启动，如果postStart执行失败pod就不会继续创建。</li><li>preStop：在Pod被停止之前执行的。</li></ul><p><img src="/images/postStart-preStop.png"></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/postStart-preStop<span class="comment"># cat 1-myserver-myapp1-postStart-preStop.yaml</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp1-lifecycle</span><br><span class="line">  labels:</span><br><span class="line">    app: myserver-myapp1-lifecycle</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myserver-myapp1-lifecycle-label</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp1-lifecycle-label</span><br><span class="line">    spec:</span><br><span class="line">      terminationGracePeriodSeconds: 60</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp1-lifecycle-label</span><br><span class="line">        image: tomcat:7.0.94-alpine </span><br><span class="line">        lifecycle:</span><br><span class="line">          postStart:</span><br><span class="line">            <span class="built_in">exec</span>:</span><br><span class="line">             <span class="comment">#command: 把自己注册到注册在中心</span></span><br><span class="line">              <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>, <span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo &#x27;Hello from the postStart handler&#x27; &gt;&gt; /usr/local/tomcat/webapps/ROOT/index.html&quot;</span>]</span><br><span class="line"></span><br><span class="line">            <span class="comment">#httpGet:</span></span><br><span class="line">            <span class="comment">#  #path: /monitor/monitor.html</span></span><br><span class="line">            <span class="comment">#  host: www.magedu.com</span></span><br><span class="line">            <span class="comment">#  port: 80</span></span><br><span class="line">            <span class="comment">#  scheme: HTTP</span></span><br><span class="line">            <span class="comment">#  path: index.html</span></span><br><span class="line">          preStop:</span><br><span class="line">            <span class="built_in">exec</span>:</span><br><span class="line">             <span class="comment">#command: 把自己从注册中心移除</span></span><br><span class="line">              <span class="built_in">command</span>: [<span class="string">&quot;/usr/local/tomcat/bin/catalina.sh&quot;</span>,<span class="string">&quot;stop&quot;</span>]</span><br><span class="line">        ports:</span><br><span class="line">          - name: http</span><br><span class="line">            containerPort: 8080</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp1-lifecycle-service</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 8080</span><br><span class="line">    nodePort: 30012</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp1-lifecycle-label</span><br></pre></td></tr></table></figure><p><strong>Pod的终止流程：</strong></p><blockquote><p>1、创建pod</p><p>完成调度流程</p><p>容器启动并执行postStart</p><p>livenessProbe</p><p>进入running状态</p><p>readinessProbe</p><p>service关联pod</p><p>接受客户端请求</p></blockquote><blockquote><p>2、删除pod</p><p>Pod被设置为“terminating”状态，从service的Endpoint列表中删除并不再接受客户端请求。</p><p>执行ProStop</p><p>Kubernetes向Pod中容器发送SIGTERM信号（正常终止信号）终止pod里面的主进程，这个信号让容器知道自己很快将会被关闭</p><p>terminationGracePeriodSeconds: 60 #可选终止等待期，如果有设置删除宽限时间，则等待宽限时间到期，否则最多等待30s，kubernetes等待指定的时间称为优雅终止宽限期，默认情况下是30s，值得注意的就是等待期与preStop Hook和SIGTERM信号并行执行，即kubernetes可能不会等待preStop Hook完成（最长30秒后主进程还没有结束，这时就会强制终止pod）。</p><p>SIGKILL信号被发送到Pod，并删除Pod</p></blockquote><p><img src="/images/pod-flow-path.png"></p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-HPA控制器</title>
      <link href="/post/d7e3eb60.html"/>
      <url>/post/d7e3eb60.html</url>
      
        <content type="html"><![CDATA[<h1 id="HPA控制器"><a href="#HPA控制器" class="headerlink" title="HPA控制器"></a>HPA控制器</h1><p><img src="/images/HPA1.png"></p><h2 id="部署-metrics-server"><a href="#部署-metrics-server" class="headerlink" title="部署 metrics-server"></a>部署 metrics-server</h2><p>Metrics Server 是 Kubernetes 内置的容器资源指标来源。</p><p>Metrics Server 从node节点上的 Kubelet 收集资源指标,并通过Metrics API在 Kubernetes apiserver 中公开指标数据,以供Horizontal Pod Autoscaler和Vertical Pod Autoscaler使用,也可以通过访问kubectl top node&#x2F;pod 查看指标数据。</p><p><img src="/images/HPA2.png"></p><p>下载地址：<br><a href="https://github.com/kubernetes-sigs/metrics-server/releases">github地址</a></p><p><img src="/images/metrics-server.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># wget https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.6.1/components.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># mv components.yaml metrics-server-v0.6.1.yaml</span></span><br><span class="line"><span class="comment">## 修改资源定义的文件里面的镜像位置</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># vim metrics-server-v0.6.1.yaml</span></span><br><span class="line"><span class="comment">#image: k8s.gcr.io/metrics-server/metrics-server:v0.6.1</span></span><br><span class="line">image: registry.cn-hangzhou.aliyuncs.com/liangxiaohui/metrics-server:0.6.1</span><br><span class="line"></span><br><span class="line"><span class="comment">## 部署</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl apply -f metrics-server-v0.6.1.yaml</span></span><br><span class="line">serviceaccount/metrics-server created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:aggregated-metrics-reader created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:metrics-server created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/metrics-server-auth-reader created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/metrics-server:system:auth-delegator created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:metrics-server created</span><br><span class="line">service/metrics-server created</span><br><span class="line">deployment.apps/metrics-server created</span><br><span class="line">apiservice.apiregistration.k8s.io/v1beta1.metrics.k8s.io created</span><br><span class="line"></span><br><span class="line"><span class="comment">## 验证metrics-server是否起来，并验证是否可以采集到pods和nodes节点的资源</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl get pods -n kube-system </span></span><br><span class="line">NAME                                       READY   STATUS    RESTARTS       AGE</span><br><span class="line">calico-kube-controllers-6767cc9c5f-nlf4p   1/1     Running   3 (142m ago)   3d18h</span><br><span class="line">calico-node-9tnmr                          1/1     Running   3 (142m ago)   3d18h</span><br><span class="line">calico-node-cn4zv                          1/1     Running   3 (142m ago)   3d18h</span><br><span class="line">calico-node-jvz68                          1/1     Running   3 (142m ago)   3d18h</span><br><span class="line">calico-node-kc6c6                          1/1     Running   3 (142m ago)   3d18h</span><br><span class="line">calico-node-wh2nb                          1/1     Running   3 (142m ago)   3d18h</span><br><span class="line">coredns-65dc99c6d5-ndjwc                   1/1     Running   3 (142m ago)   3d17h</span><br><span class="line">metrics-server-775f8fc6b4-t72w7            1/1     Running   0              110s</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl top pods -A</span></span><br><span class="line">NAMESPACE     NAME                                                  CPU(cores)   MEMORY(bytes)   </span><br><span class="line">default       net-test1                                             0m           1Mi             </span><br><span class="line">default       net-test2                                             0m           1Mi             </span><br><span class="line">kube-system   calico-kube-controllers-6767cc9c5f-nlf4p              2m           22Mi            </span><br><span class="line">kube-system   calico-node-9tnmr                                     16m          96Mi            </span><br><span class="line">kube-system   calico-node-cn4zv                                     23m          99Mi            </span><br><span class="line">kube-system   calico-node-jvz68                                     22m          100Mi           </span><br><span class="line">kube-system   calico-node-kc6c6                                     21m          108Mi           </span><br><span class="line">kube-system   calico-node-wh2nb                                     18m          99Mi            </span><br><span class="line">kube-system   coredns-65dc99c6d5-ndjwc                              1m           15Mi            </span><br><span class="line">kube-system   metrics-server-775f8fc6b4-t72w7                       3m           21Mi            </span><br><span class="line">myserver      myserver-myapp-app1-deployment-764d7db7c-g8sb8        2m           161Mi           </span><br><span class="line">myserver      myserver-myapp-frontend-deployment-67c4dc8d46-wtftp   0m           61Mi            </span><br><span class="line">nfs           nfs-client-provisioner-5bcb9fbd9-mbftt                2m           8Mi             </span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl top nodes</span></span><br><span class="line">NAME         CPU(cores)   CPU%   MEMORY(bytes)   MEMORY%   </span><br><span class="line">10.0.0.100   62m          1%     1014Mi          13%       </span><br><span class="line">10.0.0.101   57m          2%     926Mi           25%       </span><br><span class="line">10.0.0.102   51m          2%     916Mi           25%       </span><br><span class="line">10.0.0.107   47m          1%     815Mi           10%       </span><br><span class="line">10.0.0.108   51m          1%     712Mi           9%</span><br></pre></td></tr></table></figure><p><img src="/images/HPA3.png"></p><h2 id="HPA自动伸缩"><a href="#HPA自动伸缩" class="headerlink" title="HPA自动伸缩"></a>HPA自动伸缩</h2><p>HorizontalPodAutoscaler（简称HPA）自动更新工作负载资源（例如Deployment或者StatefulSet），基于pod资源利用率横向调整pod副本数量。目的是自动扩缩工作负载以满足需求。</p><p>根据当前的pod的负载，动态调整pod的副本数，业务高峰自动扩容pod的副本数以尽快响应pod的请求。</p><p>水平伸缩意味着对增加的负载的响应也是部署更多的Pods，这个与垂直（vertical）伸缩又不同，垂直伸缩的意思就是将更多的资源（例如内存或CPU）分配给已经工作负载运行的Pod。</p><p>HorizontalPodAutoscaler是会根据工作的负载资源来伸缩的，例如负载减少，并且现有的Pod数量大于设置的最小值时，这时HorizontalPodAutoscaler就会按照设置的工作负载资源（Deployment、StatefulSet或其他的资源）来进行缩减。</p><p><strong>与其相关的动态伸缩控制器类型：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">垂直pod自动缩放器（VPA）：基于pod的资源利用率，调整对单个pod的最大资源限制，注意不能与HPA同时使用；</span><br><span class="line">集群伸缩（Cluster Autoscale，CA）：基于集群中node资源分配情况，动态的伸缩node节点，从而保证集群有充足的CPU和内存资源来创建pod；</span><br></pre></td></tr></table></figure><p><strong>HPA控制器的简介：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Horizontal Pod Autoscaling (HPA)控制器，根据预定义好的阈值及pod当前的资源利用率，自动控制在k8s集群中运行的pod数量(自动弹性水平自动伸缩).</span><br></pre></td></tr></table></figure><p><strong>HPA的重要参数：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用 kube-controller-manager --help | grep &lt;options&gt; 进行查看</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kube-controller-manager --help | grep &quot;horizontal-pod-autoscaler&quot;</span></span><br><span class="line">      --horizontal-pod-autoscaler-cpu-initialization-period duration   The period after pod start when CPU samples might be skipped. (default 5m0s)</span><br><span class="line">      --horizontal-pod-autoscaler-downscale-stabilization duration     The period <span class="keyword">for</span> <span class="built_in">which</span> autoscaler will look backwards and not scale down below any recommendation it made during that period. (default 5m0s)</span><br><span class="line">      --horizontal-pod-autoscaler-initial-readiness-delay duration     The period after pod start during <span class="built_in">which</span> readiness changes will be treated as initial readiness. (default 30s)</span><br><span class="line">      --horizontal-pod-autoscaler-sync-period duration                 The period <span class="keyword">for</span> syncing the number of pods <span class="keyword">in</span> horizontal pod autoscaler. (default 15s)</span><br><span class="line">      --horizontal-pod-autoscaler-tolerance <span class="built_in">float</span>                      The minimum change (from 1.0) <span class="keyword">in</span> the desired-to-actual metrics ratio <span class="keyword">for</span> the horizontal pod autoscaler to consider scaling. (default 0.1)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认每隔15s(可以通过–horizontal-pod-autoscaler-sync-period修改)查询metrics的资源使用情况。</span></span><br><span class="line">--horizontal-pod-autoscaler-sync-period </span><br><span class="line"></span><br><span class="line"><span class="comment"># 缩容间隔周期，默认5分钟。</span></span><br><span class="line">--horizontal-pod-autoscaler-downscale-stabilization</span><br><span class="line"></span><br><span class="line"><span class="comment"># HPA控制器同步pod副本数的间隔周期</span></span><br><span class="line">--horizontal-pod-autoscaler-sync-period</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化延迟时间，在此时间内 pod的CPU 资源指标将不会生效，默认为5分钟。</span></span><br><span class="line">--horizontal-pod-autoscaler-cpu-initialization-period</span><br><span class="line"></span><br><span class="line"><span class="comment"># 用于设置 pod 准备时间， 在此时间内的 pod 统统被认为未就绪及不采集数据,默认为30秒。</span></span><br><span class="line">--horizontal-pod-autoscaler-initial-readiness-delay</span><br><span class="line"></span><br><span class="line"><span class="comment"># HPA控制器能容忍的数据差异(浮点数，默认为0.1)，即新的指标要与当前的阈值差异在0.1或以上, 即要大于1+0.1=1.1，或小于1-0.1=0.9，比如阈值为CPU利用率50%,当前为80%,那么80/50=1.6 &gt; 1.1则会触发扩容，分之会缩容。</span></span><br><span class="line">--horizontal-pod-autoscaler-tolerance</span><br></pre></td></tr></table></figure><blockquote><p>即触发条件：avg(CurrentPodsConsumption) &#x2F; Target &gt;1.1 或 &lt;0.9&#x3D;把N个pod的数据相加后根据pod的数量计算出平均数除以阈值,大于1.1就扩容，小于0.9就缩容。</p><p><strong>计算公式：TargetNumOfPods &#x3D; ceil(sum(CurrentPodsCPUUtilization) &#x2F; Target) #ceil是一个向上取整的目的pod整数。</strong></p></blockquote><blockquote><p>在k8s 1.1引入HPA控制器，早期使用Heapster组件采集pod指标数据，在k8s 1.11版本开始使用Metrices Server完成数据采集，然后将采集到的数据通过API（Aggregated API，汇总API），例如metrics.k8s.io、custom.metrics.k8s.io、external.metrics.k8s.io，然后再把数据提供给HPA控制器进行查询，以实现基于某个资源利用率对pod进行扩缩容的目的。</p></blockquote><h3 id="根据CPU利用率伸缩"><a href="#根据CPU利用率伸缩" class="headerlink" title="根据CPU利用率伸缩"></a>根据CPU利用率伸缩</h3><p>创建deployment</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># cat deploy-zhang-test-nginx.yaml</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: nginx</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nginx</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nginx</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: nginx:1.18.0</span><br><span class="line">        name: nginx</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl apply -f deploy-zhang-test-nginx.yaml</span></span><br><span class="line">deployment.apps/nginx created</span><br></pre></td></tr></table></figure><p>创建HPA</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl autoscale deployment nginx --max=4 --min=2 --cpu-percent=80 --dry-run=client -o yaml &gt; zhang-test-nginx-hpa.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># cat zhang-test-nginx-hpa.yaml </span></span><br><span class="line">apiVersion: autoscaling/v1</span><br><span class="line">kind: HorizontalPodAutoscaler</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: null</span><br><span class="line">  name: nginx</span><br><span class="line">spec:</span><br><span class="line">  maxReplicas: 4</span><br><span class="line">  minReplicas: 2</span><br><span class="line">  scaleTargetRef:</span><br><span class="line">    apiVersion: apps/v1</span><br><span class="line">    kind: Deployment</span><br><span class="line">    name: nginx</span><br><span class="line">  targetCPUUtilizationPercentage: 80</span><br><span class="line">status:</span><br><span class="line">  currentReplicas: 0</span><br><span class="line">  desiredReplicas: 0</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl apply -f zhang-test-nginx-hpa.yaml</span></span><br></pre></td></tr></table></figure><p>想要看到HPA的TARGETS值就必须要满足两个条件：</p><ol><li>安装好metric server</li><li>为pod设置好资源限制</li></ol><p>这里我们修改一些刚刚创建的deployment文件来限制一下资源</p><p>添加上resource资源限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里也可以直接编辑deploy-zhang-test-nginx.yaml加上下面修改的配置</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl edit deployments.apps nginx</span></span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: nginx:1.18.0</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: nginx</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: <span class="string">&quot;200Mi&quot;</span></span><br></pre></td></tr></table></figure><p>修改完后，会自动创建两个新的pod来替换旧的pod资源限制</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl get pods</span></span><br><span class="line">NAMESPACE     NAME                                                  READY   STATUS    RESTARTS        AGE</span><br><span class="line">default       net-test1                                             1/1     Running   3 (7h15m ago)   3d23h</span><br><span class="line">default       net-test2                                             1/1     Running   3 (7h15m ago)   3d23h</span><br><span class="line">default       nginx-58fd4c7754-sqp95                                1/1     Running   0               8s</span><br><span class="line">default       nginx-58fd4c7754-xh4wx                                1/1     Running   0               10s</span><br></pre></td></tr></table></figure><p>暴露deployment端口，创建svc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl expose deployment nginx --port=80 --target-port=80</span></span><br><span class="line">service/nginx exposed</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># kubectl get svc</span></span><br><span class="line">NAME         TYPE        CLUSTER-IP       EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes   ClusterIP   10.100.0.1       &lt;none&gt;        443/TCP   4d</span><br><span class="line">nginx        ClusterIP   10.100.222.238   &lt;none&gt;        80/TCP    6s</span><br></pre></td></tr></table></figure><p>这时我们可以安装一个压力测试的工具来进行压测</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># apt -y install apache2-utils</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/hpa<span class="comment"># ab -n 300000 -c 100 http://10.100.222.238/</span></span><br></pre></td></tr></table></figure><p><img src="/images/hpa-abtest.png"></p><p>当容器的cpu达到80%，这时候hpa就会自动水平伸缩来扩容pods，直到扩容到cpu负载均匀到各个pods中，或者hpa扩容到最大的pods数量。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># kubectl get pods</span></span><br><span class="line">NAME                     READY   STATUS    RESTARTS     AGE</span><br><span class="line">net-test1                1/1     Running   3 (8h ago)   4d</span><br><span class="line">net-test2                1/1     Running   3 (8h ago)   4d</span><br><span class="line">nginx-58fd4c7754-m6dg4   1/1     Running   0            88s</span><br><span class="line">nginx-58fd4c7754-sqp95   1/1     Running   0            51m</span><br><span class="line">nginx-58fd4c7754-xh4wx   1/1     Running   0            51m</span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl top pods</span></span><br><span class="line">NAME                     CPU(cores)   MEMORY(bytes)   </span><br><span class="line">net-test1                0m           1Mi             </span><br><span class="line">net-test2                0m           1Mi             </span><br><span class="line">nginx-58fd4c7754-m6dg4   99m           3Mi             </span><br><span class="line">nginx-58fd4c7754-sqp95   99m          4Mi             </span><br><span class="line">nginx-58fd4c7754-xh4wx   100m         5Mi</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-DaemonSet</title>
      <link href="/post/823264f9.html"/>
      <url>/post/823264f9.html</url>
      
        <content type="html"><![CDATA[<h1 id="DaemonSet"><a href="#DaemonSet" class="headerlink" title="DaemonSet"></a>DaemonSet</h1><p>DaemonSet是在当前集群中每个节点运行同一个pod，当有新的节点加入集群的话也是会为新的节点配置相同的pod，当节点从集群中移除时其pod也会被kubernetes回收掉，删除DaemonSet控制器的话将会删除其创建的所有pod。</p><p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/daemonset/">https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/daemonset/</a></p><p><img src="/images/DaemonSet.png"></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/daemonset<span class="comment"># cat DaemonSet-webserverp.yaml</span></span><br><span class="line">---</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: DaemonSet </span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myserver-myapp-frontend</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend</span><br><span class="line">    spec:</span><br><span class="line">      tolerations:</span><br><span class="line">      <span class="comment"># this toleration is to have the daemonset runnable on master nodes</span></span><br><span class="line">      <span class="comment"># remove it if your masters can&#x27;t run pods</span></span><br><span class="line">      - key: node-role.kubernetes.io/master</span><br><span class="line">        operator: Exists</span><br><span class="line">        effect: NoSchedule</span><br><span class="line">      hostNetwork: <span class="literal">true</span></span><br><span class="line">      hostPID: <span class="literal">true</span></span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-frontend</span><br><span class="line">        image: nginx:1.18.0</span><br><span class="line">        ports:</span><br><span class="line">          - containerPort: 80</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30018</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/daemonset<span class="comment"># cat DaemonSet-fluentd.yaml</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: fluentd-elasticsearch</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: fluentd-logging</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      name: fluentd-elasticsearch</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        name: fluentd-elasticsearch</span><br><span class="line">    spec:</span><br><span class="line">      tolerations:</span><br><span class="line">      <span class="comment"># this toleration is to have the daemonset runnable on master nodes</span></span><br><span class="line">      <span class="comment"># remove it if your masters can&#x27;t run pods</span></span><br><span class="line">      - key: node-role.kubernetes.io/master</span><br><span class="line">        operator: Exists</span><br><span class="line">        effect: NoSchedule</span><br><span class="line">      containers:</span><br><span class="line">      - name: fluentd-elasticsearch</span><br><span class="line">        image: quay.io/fluentd_elasticsearch/fluentd:v2.5.2</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            memory: 200Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 200Mi</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: varlog</span><br><span class="line">          mountPath: /var/log</span><br><span class="line">        - name: varlibdockercontainers</span><br><span class="line">          mountPath: /var/lib/docker/containers</span><br><span class="line">          readOnly: <span class="literal">true</span></span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      volumes:</span><br><span class="line">      - name: varlog</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /var/log</span><br><span class="line">      - name: varlibdockercontainers</span><br><span class="line">        hostPath:</span><br><span class="line">          path: root@k8s-master1:/opt/zhangg-k8s-yaml/daemonset<span class="comment"># cat DaemonSet-fluentd.yaml</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: fluentd-elasticsearch</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: fluentd-logging</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      name: fluentd-elasticsearch</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        name: fluentd-elasticsearch</span><br><span class="line">    spec:</span><br><span class="line">      tolerations:</span><br><span class="line">      <span class="comment"># this toleration is to have the daemonset runnable on master nodes</span></span><br><span class="line">      <span class="comment"># remove it if your masters can&#x27;t run pods</span></span><br><span class="line">      - key: node-role.kubernetes.io/master</span><br><span class="line">        operator: Exists</span><br><span class="line">        effect: NoSchedule</span><br><span class="line">      containers:</span><br><span class="line">      - name: fluentd-elasticsearch</span><br><span class="line">        image: quay.io/fluentd_elasticsearch/fluentd:v2.5.2</span><br><span class="line">        resources:</span><br><span class="line">          limits:</span><br><span class="line">            memory: 200Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 100m</span><br><span class="line">            memory: 200Mi</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: varlog</span><br><span class="line">          mountPath: /var/log</span><br><span class="line">        - name: varlibdockercontainers</span><br><span class="line">          mountPath: /var/lib/docker/containers</span><br><span class="line">          readOnly: <span class="literal">true</span></span><br><span class="line">      terminationGracePeriodSeconds: 30</span><br><span class="line">      volumes:</span><br><span class="line">      - name: varlog</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /var/log</span><br><span class="line">      - name: varlibdockercontainers</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /var/lib/docker/containers</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/daemonset<span class="comment"># cat DaemonSet-prometheus.yaml </span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: DaemonSet</span><br><span class="line">metadata:</span><br><span class="line">  name: node-exporter</span><br><span class="line">  namespace: monitoring </span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: node-exporter</span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">        k8s-app: node-exporter</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: node-exporter</span><br><span class="line">    spec:</span><br><span class="line">      tolerations:</span><br><span class="line">        - effect: NoSchedule</span><br><span class="line">          key: node-role.kubernetes.io/master</span><br><span class="line">      containers:</span><br><span class="line">      - image: prom/node-exporter:v1.3.1 </span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        name: prometheus-node-exporter</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 9100</span><br><span class="line">          hostPort: 9100</span><br><span class="line">          protocol: TCP</span><br><span class="line">          name: metrics</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /host/proc</span><br><span class="line">          name: proc</span><br><span class="line">        - mountPath: /host/sys</span><br><span class="line">          name: sys</span><br><span class="line">        - mountPath: /host</span><br><span class="line">          name: rootfs</span><br><span class="line">        args:</span><br><span class="line">        - --path.procfs=/host/proc</span><br><span class="line">        - --path.sysfs=/host/sys</span><br><span class="line">        - --path.rootfs=/host</span><br><span class="line">      volumes:</span><br><span class="line">        - name: proc</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /proc</span><br><span class="line">        - name: sys</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /sys</span><br><span class="line">        - name: rootfs</span><br><span class="line">          hostPath:</span><br><span class="line">            path: /</span><br><span class="line">      hostNetwork: <span class="literal">true</span></span><br><span class="line">      hostPID: <span class="literal">true</span></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io/scrape: <span class="string">&quot;true&quot;</span></span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: node-exporter</span><br><span class="line">  name: node-exporter</span><br><span class="line">  namespace: monitoring </span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 9100</span><br><span class="line">    nodePort: 39100</span><br><span class="line">    protocol: TCP</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: node-exporter</span><br></pre></td></tr></table></figure><p><img src="/images/DaemonSet1.png"></p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-StatefulSet</title>
      <link href="/post/bf60bd3f.html"/>
      <url>/post/bf60bd3f.html</url>
      
        <content type="html"><![CDATA[<h1 id="StatefulSet"><a href="#StatefulSet" class="headerlink" title="StatefulSet"></a>StatefulSet</h1><p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/statefulset/">https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/statefulset/</a></p><p>StatefulSet是为了解决有状态服务的集群部署、集群之间的数据同步问题（MySQL主从等）</p><p>StatefulSet所管理的pod拥有唯一且固定的pod名称</p><p>StatefulSet按照顺序对pod进行启停、伸缩和回收</p><p>Headless Services(无头服务，请求的解析直接解析到pod IP)</p><p><img src="/images/StatefulSet.png"></p><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/statefulset<span class="comment"># cat statefulset.yaml </span></span><br><span class="line">---</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: StatefulSet </span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  serviceName: <span class="string">&quot;myserver-myapp-service&quot;</span></span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myserver-myapp-frontend</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-frontend</span><br><span class="line">        image: nginx:1.18.0 </span><br><span class="line">        ports:</span><br><span class="line">          - containerPort: 80</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-service</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  clusterIP: None</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-Job与cronjob</title>
      <link href="/post/d6983aff.html"/>
      <url>/post/d6983aff.html</url>
      
        <content type="html"><![CDATA[<h1 id="kubernetes-Job-cronjob"><a href="#kubernetes-Job-cronjob" class="headerlink" title="kubernetes-Job&#x2F;cronjob"></a>kubernetes-Job&#x2F;cronjob</h1><ol><li>kubernetes-Job(初始化数据库操作，只执行一次)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/job<span class="comment"># cat job.yaml</span></span><br><span class="line">apiVersion: batch/v1</span><br><span class="line">kind: Job</span><br><span class="line">metadata:</span><br><span class="line">  name: job-mysql-init</span><br><span class="line">  namespace: zhang-test</span><br><span class="line">spec:</span><br><span class="line">  template:</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: job-mysql-init-container</span><br><span class="line">        image: centos:7.9.2009</span><br><span class="line">        <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>]</span><br><span class="line">        args: [<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo data init job at `date +%Y-%m-%d_%H-%M-%S` &gt;&gt; /cache/data.log&quot;</span>]</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /cache</span><br><span class="line">          name: cache-volume</span><br><span class="line">      volumes:</span><br><span class="line">      - name: cache-volume</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /tmp/jobdata</span><br><span class="line">      restartPolicy: Never</span><br></pre></td></tr></table></figure><ol start="2"><li>kubernetes-cronjob(周期性的执行任务，数据备份，数据同步等操作)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/job<span class="comment"># cat cronjob.yaml</span></span><br><span class="line">apiVersion: batch/v1</span><br><span class="line">kind: CronJob</span><br><span class="line">metadata:</span><br><span class="line">  name: cronjob-mysql-databackup</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment">#schedule: &quot;30 2 * * *&quot;</span></span><br><span class="line">  schedule: <span class="string">&quot;* * * * *&quot;</span></span><br><span class="line">  jobTemplate:</span><br><span class="line">    spec:</span><br><span class="line">      template:</span><br><span class="line">        spec:</span><br><span class="line">          containers:</span><br><span class="line">          - name: cronjob-mysql-databackup-pod</span><br><span class="line">            image: centos:7.9.2009</span><br><span class="line">            <span class="comment">#imagePullPolicy: IfNotPresent</span></span><br><span class="line">            <span class="built_in">command</span>: [<span class="string">&quot;/bin/sh&quot;</span>]</span><br><span class="line">            args: [<span class="string">&quot;-c&quot;</span>, <span class="string">&quot;echo mysql databackup cronjob at `date +%Y-%m-%d_%H-%M-%S` &gt;&gt; /cache/data.log&quot;</span>]</span><br><span class="line">            volumeMounts: </span><br><span class="line">            - mountPath: /cache</span><br><span class="line">              name: cache-volume</span><br><span class="line">          volumes:</span><br><span class="line">          - name: cache-volume</span><br><span class="line">            hostPath:</span><br><span class="line">              path: /tmp/cronjobdata</span><br><span class="line">          restartPolicy: OnFailure</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-Secret</title>
      <link href="/post/8420431d.html"/>
      <url>/post/8420431d.html</url>
      
        <content type="html"><![CDATA[<h1 id="Secret"><a href="#Secret" class="headerlink" title="Secret"></a>Secret</h1><p>Secret的功能类似于configmap给pod提供额外的配置信息，但是Secret是一种包含少量敏感信息例如密码、令牌、秘钥的对象。</p><p>Secret的名称必须是要合法的DNS子域名。</p><p>每个Secret的大小最多为1MiB，主要是为了避免用户创建非常大的Secret进而导致API服务器和kubelet内存耗尽，不过创建很多小的Secret也可能耗尽内存，可以使用资源配额来约束每个名字空间中的Secret个数。</p><p>在通过yaml文件创建secret时，可以设置data或stringData字段，data和stringData字段都是可选的，data字段中所有的键值都必须是base64编码的字符串，如果不希望执行这种base64字符串的转换操作，也可以选择设置stringData字段，其中可以使用任何非加密的字符串作为其值。</p><p>pod可以用三种方式任意一种来使用Secret：</p><ul><li>作为挂载到一个或多个容器上的卷中的文件（crt文件、key文件）</li><li>作为容器的环境变量</li><li>由kubelet在为pod拉取镜像时使用（用于镜像仓库的认证）</li></ul><h2 id="Secret的类型"><a href="#Secret的类型" class="headerlink" title="Secret的类型"></a>Secret的类型</h2><p>kubernetes是默认支持多种不同类型的Secret的，用于不同的使用场景，不同类型的Secret的配置参数也不一样。</p><table><thead><tr><th>Secret类型</th><th>使用场景</th></tr></thead><tbody><tr><td>Opaque</td><td>用户定义的任意数据</td></tr><tr><td>kubernetes.io&#x2F;service-account-token</td><td>ServiceAccount令牌</td></tr><tr><td>kubernetes.io&#x2F;dockercfg</td><td>~&#x2F;.dockercfg文件的序列化形式</td></tr><tr><td>kuberentes.io&#x2F;dockerconfigjson</td><td>~&#x2F;.docker&#x2F;config.json文件的序列化形式 （harbor token）</td></tr><tr><td>kubernetes.io&#x2F;ssh-auth</td><td>用于基于身份认证的凭据</td></tr><tr><td>kubernetes.io&#x2F;basic-auth</td><td>用于SSH身份认证的凭据</td></tr><tr><td>kubernetes.io&#x2F;tls</td><td>用于TLS环境，保存crt证书和key证书</td></tr><tr><td>bootstrap.kubernetes.io&#x2F;token</td><td>启动引导令牌数据</td></tr></tbody></table><h3 id="Secret类型-Opaque格式"><a href="#Secret类型-Opaque格式" class="headerlink" title="Secret类型-Opaque格式"></a>Secret类型-Opaque格式</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># cat secret-Opaque-data.yaml </span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  name: mysecret-data</span><br><span class="line">  namespace: myserver</span><br><span class="line"><span class="built_in">type</span>: Opaque</span><br><span class="line">data:</span><br><span class="line">  user: YWRtaW4K</span><br><span class="line">  password: MTIzNDU2Cg==</span><br><span class="line"></span><br><span class="line"><span class="comment">## 使用创建的Secret</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># cat secret-Opaque-mount.yaml</span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-app1-deployment</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myserver-myapp-app1</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-app1</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-app1</span><br><span class="line">        image: tomcat:7.0.94-alpine</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 8080</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /data/myserver/auth</span><br><span class="line">          name: myserver-auth-secret </span><br><span class="line">      volumes:</span><br><span class="line">      - name: myserver-auth-secret</span><br><span class="line">        secret:</span><br><span class="line">          secretName: mysecret-data</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-app1</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 8080</span><br><span class="line">    targetPort: 8080</span><br><span class="line">    nodePort: 30018</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-app1</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># kubectl apply -f secret-Opaque-data.yaml -f secret-Opaque-mount.yaml</span></span><br></pre></td></tr></table></figure><p>我们可以查找一下Secret文件在哪?</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># kubectl get pod -n myserver -o wide</span></span><br><span class="line">NAME                                              READY   STATUS    RESTARTS   AGE     IP               NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">myserver-myapp-app1-deployment-764d7db7c-g8sb8    1/1     Running   0          5m17s   10.200.15.141    10.0.0.107   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">root@k8s-node1:~<span class="comment"># find / -name &#x27;password&#x27;</span></span><br><span class="line">/var/lib/pam/password</span><br><span class="line">/snap/core20/1623/var/lib/pam/password</span><br><span class="line">/snap/core20/2015/var/lib/pam/password</span><br><span class="line">/data/kubelet/pods/3edec297-2d2e-4782-adc8-a97e9fd1162d/volumes/kubernetes.io~secret/myserver-auth-secret/password</span><br><span class="line">/data/kubelet/pods/3edec297-2d2e-4782-adc8-a97e9fd1162d/volumes/kubernetes.io~secret/myserver-auth-secret/..2022_07_05_09_14_46.1831296029/password</span><br><span class="line">/data/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/35/fs/var/lib/pam/password</span><br><span class="line">/data/containerd/io.containerd.snapshotter.v1.overlayfs/snapshots/56/fs/var/lib/pam/password</span><br><span class="line">root@k8s-node1:~<span class="comment"># cat /data/kubelet/pods/3edec297-2d2e-4782-adc8-a97e9fd1162d/volumes/kubernetes.io~secret/myserver-auth-secret/password</span></span><br><span class="line">123456</span><br><span class="line">root@k8s-node1:~<span class="comment"># cat /data/kubelet/pods/3edec297-2d2e-4782-adc8-a97e9fd1162d/volumes/kubernetes.io~secret/myserver-auth-secret/..2022_07_05_09_14_46.1831296029/password</span></span><br><span class="line">123456</span><br></pre></td></tr></table></figure><p>这里也可以通过etcd查询Secret文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># etcdctl get / --keys-only --prefix |grep mysecret</span></span><br><span class="line">/registry/secrets/myserver/mysecret-data</span><br><span class="line">root@etcd-node1:~<span class="comment"># etcdctl get /registry/secrets/myserver/mysecret-data</span></span><br><span class="line">/registry/secrets/myserver/mysecret-data</span><br><span class="line">k8s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">v1Secret΄</span><br><span class="line">  </span><br><span class="line">mysecret-datmyserver<span class="string">&quot;*<span class="variable">$cd0415e6</span>-190c-40de-9f54-6dc4a95260622֫bB</span></span><br><span class="line"><span class="string">0kubectl.kubernetes.io/last-applied-configurationµ&#123;&quot;</span>apiVersion<span class="string">&quot;:&quot;</span>v1<span class="string">&quot;,&quot;</span>data<span class="string">&quot;:&#123;&quot;</span>password<span class="string">&quot;:&quot;</span>MTIzNDU2Cg==<span class="string">&quot;,&quot;</span>user<span class="string">&quot;:&quot;</span>YWRtaW4K<span class="string">&quot;&#125;,&quot;</span>kind<span class="string">&quot;:&quot;</span>Secret<span class="string">&quot;,&quot;</span>metadata<span class="string">&quot;:&#123;&quot;</span>annotations<span class="string">&quot;:&#123;&#125;,&quot;</span>name<span class="string">&quot;:&quot;</span>mysecret-data<span class="string">&quot;,&quot;</span>namespace<span class="string">&quot;:&quot;</span>myserver<span class="string">&quot;&#125;,&quot;</span><span class="built_in">type</span><span class="string">&quot;:&quot;</span>Opaque<span class="string">&quot;&#125;</span></span><br><span class="line"><span class="string">܁</span></span><br><span class="line"><span class="string">kubectl-client-side-applyUpdatev֫FieldsV1: </span></span><br><span class="line"><span class="string">&#123;&quot;</span>f:data<span class="string">&quot;:&#123;&quot;</span>.<span class="string">&quot;:&#123;&#125;,&quot;</span>f:password<span class="string">&quot;:&#123;&#125;,&quot;</span>f:user<span class="string">&quot;:&#123;&#125;&#125;,&quot;</span>f:metadata<span class="string">&quot;:&#123;&quot;</span>f:annotations<span class="string">&quot;:&#123;&quot;</span>.<span class="string">&quot;:&#123;&#125;,&quot;</span>f:kubectl.kubernetes.io/last-applied-configuration<span class="string">&quot;:&#123;&#125;&#125;&#125;,&quot;</span>f:<span class="built_in">type</span><span class="string">&quot;:&#123;&#125;&#125;B                                                                                                                          password123456</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">useradmin</span></span><br><span class="line"><span class="string">Opaque&quot;</span></span><br></pre></td></tr></table></figure><h3 id="Secret类型-kubernetes-io-tls"><a href="#Secret类型-kubernetes-io-tls" class="headerlink" title="Secret类型-kubernetes.io&#x2F;tls"></a>Secret类型-kubernetes.io&#x2F;tls</h3><p>查看一下创建的命令帮助</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># kubectl create secret --help</span></span><br><span class="line">Create a secret using specified subcommand.</span><br><span class="line"></span><br><span class="line">Available Commands:</span><br><span class="line">  docker-registry   Create a secret <span class="keyword">for</span> use with a Docker registry</span><br><span class="line">  generic           Create a secret from a <span class="built_in">local</span> file, directory, or literal value</span><br><span class="line">  tls               Create a TLS secret</span><br><span class="line"></span><br><span class="line">Usage:</span><br><span class="line">  kubectl create secret [flags] [options]</span><br><span class="line"></span><br><span class="line">Use <span class="string">&quot;kubectl &lt;command&gt; --help&quot;</span> <span class="keyword">for</span> more information about a given <span class="built_in">command</span>.</span><br><span class="line">Use <span class="string">&quot;kubectl options&quot;</span> <span class="keyword">for</span> a list of global command-line options (applies to all commands).</span><br></pre></td></tr></table></figure><p>自签名证书</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># mkdir certs</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># cd certs/</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># openssl  req -x509 -sha256 -newkey rsa:4096 -keyout ca.key -out ca.crt -days 3560 -nodes -subj &#x27;/CN=www.ca.com&#x27;</span></span><br><span class="line">Generating a RSA private key</span><br><span class="line">.......................................................++++</span><br><span class="line">...++++</span><br><span class="line">writing new private key to <span class="string">&#x27;ca.key&#x27;</span></span><br><span class="line">-----</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># openssl req -new -newkey rsa:4096 -keyout server.key -out server.csr -nodes -subj &#x27;/CN=www.mysite.com&#x27;</span></span><br><span class="line">Generating a RSA private key</span><br><span class="line">........++++</span><br><span class="line">........................................++++</span><br><span class="line">writing new private key to <span class="string">&#x27;server.key&#x27;</span></span><br><span class="line">-----</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># openssl x509 -req -sha256 -days 3650 -in server.csr -CA ca.crt  -CAkey ca.key  -set_serial 01 -out server.crt</span></span><br><span class="line">Signature ok</span><br><span class="line">subject=CN = www.mysite.com</span><br><span class="line">Getting CA Private Key</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># ls</span></span><br><span class="line">ca.crt  ca.key  server.crt  server.csr  server.key</span><br></pre></td></tr></table></figure><p>创建Secret</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># kubectl create secret tls myserver-tls --cert=./server.crt --key=./server.key -n myserver</span></span><br><span class="line">secret/myserver-tls created</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># kubectl get secrets -n myserver </span></span><br><span class="line">NAME            TYPE                DATA   AGE</span><br><span class="line">mysecret-data   Opaque              2      19m</span><br><span class="line">myserver-tls    kubernetes.io/tls   2      21s</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># kubectl describe secrets -n myserver myserver-tls </span></span><br><span class="line">Name:         myserver-tls</span><br><span class="line">Namespace:    myserver</span><br><span class="line">Labels:       &lt;none&gt;</span><br><span class="line">Annotations:  &lt;none&gt;</span><br><span class="line"></span><br><span class="line">Type:  kubernetes.io/tls</span><br><span class="line"></span><br><span class="line">Data</span><br><span class="line">====</span><br><span class="line">tls.crt:  1667 bytes</span><br><span class="line">tls.key:  3272 bytes</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># kubectl get secrets -n myserver myserver-tls -o yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">data:</span><br><span class="line">  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVvakNDQW9vQ0FRRXdEUVlKS29aSWh2Y05BUUVMQlFBd0ZURVRNQkVHQTFVRUF3d0tkM2QzTG1OaExtTnYKYlRBZUZ3MHlNekV5TVRBd09UTXdNVFphRncwek16RXlNRGN3T1RNd01UWmFNQmt4RnpBVkJnTlZCQU1NRG5kMwpkeTV0ZVhOcGRHVXVZMjl0TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF3RmpzCkFqV0ZGWmIzOXVnRUIxZlk5dTdLYTNPa1JnZmx4T3hLZTZBUFdiZFcyYi84MWRObmtFdTY4aTBmRmFuRVgraHAKazdJdjdUT2FsdnlWSlJiK2dzZWxVNk1idVVPdmdkZDVrNktDTWRHTkVmSWJSaytjSTB1dHZZMzNEOVFLVzRvTQpKb3ZuOVBUZXduZEFDUCtlY2dGYTBFdFpsdHJoTHBzTnN5eHUvRnVyNWpVVnU4V1lBY3RPN2h4K2pWcWFjVUtqCkl5VGRFekM2amxhSVM5T3RNWUM2eUV3emdrNFNPeHpsQUNCMkZoa1ZBSlhTYTc3WFRlVlR3eHROcXo3MTFtYVIKRmhrOEZ0WkxZWXBnSS9weGg4OVp6N3hIdTM3MWQ1a2dQUUgyeVhUeVlJdG9BaTZBMGVrZS9Qc2UyQ0kwK1hoegp5ZmwzNVhxR2d5OXh6MEowQUJOYk5IeUpnaVJjc3dTOWdIQ1NkR3dRbU9hdXJyZGVJaVpOMHBJcnB1cWtrVkkwCkpFVGp4dndnZWlTRlFqMkdnUXdReXk5d1JndWRaSk1MeTkyWUxnTkxlYVU3d2JHVGs3L2lmMzRCR3ZZTm9lRlMKTGZ1OW1neVA0c2FvTHM2QUljVmhCT09YQkRLUDhkY2JKUmQ5T2pnTHJiWUw1WXlNRkdhMDMzNk55Z0pUOENZaApiRUVMM2YxZ2YxNmE0VU1TYU54ZUdsYkFMcWJEU3dCWUxGMWRveXJoWFNzNkx3UHFBYUpIOEdrQjJYbjk5bldkCllXTEtTeGNRR3ZraEFFVGE5eGRBRVVVUjhDQUFzeU9HRzFoQ0tGNmpPNVlIYjJ3eG1vdnpsdEU5b2F5U0svc2kKbnRPQWZNWCtmWmdEUDhnVUlDQWJvMnZqNkgzNDVnSTFJaSs5dUxzQ0F3RUFBVEFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQWdFQWMxWTN1WkpPOVBUcXZ3TlpaOVIrWEx5ZlovdGhyaEV4cmU4MnZCQ2JsUjhwZVoyRnRnQkczZnYwCkhqeVh3OFJUUlpsTTl5QkNRc2RlY29UaU1leFUzNGo3Rk90QlR2emZxbXFITzhpZzBrS2t5SjRoUmE0OU1ZeFoKdXZNODAxb1d1b1JFeXE3RlR3YU02ZU5tcmpSNFo0MFRKY3NPeTBNNU9FK2pvMEphRGRBTWI1RmpnRmx5dXd5dgpMYmhIWElhS3ZWMVBZTEJSSitRcjd2Tnk1dHRuQjlWNWZnZTE3TUJPNlNFUFIyOS91WWhoa25zUVp2OHpmbjFoCjFQRUZ1WW5TeEdaaWtnY2prbEdxbkdKQ0FONFRnSzF4MVY1aXE3S0w0NzJOYTlYNk9WblNUYXprNGY4UmhOeDcKVHY4MU9rV2tUTTN4UW1TK1R3WVlxZGV5UDQ4WlptUUEzTFRNUUFxK3VNRERWTHp0dWp5b0t2dFlMQWJRUGp0TgoyUCtRM1FRU25WQU5ZelpsK0pPNWg1N21KVWNZUHVDaHRhOWxQT3VWL1RYR0tvTmVVaW5vcXZ0RXFyWCtYS0VBCmVyNWt0QXpUMjhDc1V2NzErYnRjWENLcFpKTGZWbklYaHZMSWdNbFhwVUdaRGEwMUEwZllaSkUyclZNWnRTVXQKNXhmdDVIb0RQSWx1Q3pvdnFWVVBJVm9ScXl6Mmdpd0hXdncrckhZbmVRaURUd2Z3YjF5L0o5bFBRanVWWnJtdwpGSFB1SGFrbVRPcFMzNmREU0RhMHNqT1V2b3MxTVI0L3k3SW9aVFkvRGFHb0xwekJ1Z2k0cGVlZXBWTFpyVjZxCnM5bjVLcnM0ZDEzemdBa2lQNEFlVWFva2tGUkdlYXQ4TmU5ZzZGZXgzZmZndmJ3TFp6az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=</span><br><span class="line">  tls.key: LS0tLS1CRUdJTiBQUklWQVRFIEtFWS0tLS0tCk1JSUpRd0lCQURBTkJna3Foa2lHOXcwQkFRRUZBQVNDQ1Mwd2dna3BBZ0VBQW9JQ0FRREFXT3dDTllVVmx2ZjIKNkFRSFY5ajI3c3ByYzZSR0IrWEU3RXA3b0E5WnQxYlp2L3pWMDJlUVM3cnlMUjhWcWNSZjZHbVRzaS90TTVxVwovSlVsRnY2Q3g2VlRveHU1UTYrQjEzbVRvb0l4MFkwUjhodEdUNXdqUzYyOWpmY1AxQXBiaWd3bWkrZjA5TjdDCmQwQUkvNTV5QVZyUVMxbVcydUV1bXcyekxHNzhXNnZtTlJXN3haZ0J5MDd1SEg2TldwcHhRcU1qSk4wVE1McU8KVm9oTDA2MHhnTHJJVERPQ1RoSTdIT1VBSUhZV0dSVUFsZEpydnRkTjVWUERHMDJyUHZYV1pwRVdHVHdXMWt0aAppbUFqK25HSHoxblB2RWU3ZnZWM21TQTlBZmJKZFBKZ2kyZ0NMb0RSNlI3OCt4N1lJalQ1ZUhQSitYZmxlb2FECkwzSFBRblFBRTFzMGZJbUNKRnl6QkwyQWNKSjBiQkNZNXE2dXQxNGlKazNTa2l1bTZxU1JValFrUk9QRy9DQjYKSklWQ1BZYUJEQkRMTDNCR0M1MWtrd3ZMM1pndUEwdDVwVHZCc1pPVHYrSi9mZ0VhOWcyaDRWSXQrNzJhREkvaQp4cWd1em9BaHhXRUU0NWNFTW8veDF4c2xGMzA2T0F1dHRndmxqSXdVWnJUZmZvM0tBbFB3SmlGc1FRdmQvV0IvClhwcmhReEpvM0Y0YVZzQXVwc05MQUZnc1hWMmpLdUZkS3pvdkErb0Jva2Z3YVFIWmVmMzJkWjFoWXNwTEZ4QWEKK1NFQVJOcjNGMEFSUlJId0lBQ3pJNFliV0VJb1hxTTdsZ2R2YkRHYWkvT1cwVDJockpJcit5S2UwNEI4eGY1OQptQU0veUJRZ0lCdWphK1BvZmZqbUFqVWlMNzI0dXdJREFRQUJBb0lDQUI3VFlXZHRPbG5lYXZqbjhCVlpMODFMCk1hZU16ZXZuUWh5UUhkTzRNQjJaczFLTVlUSEhncFp1ZkpScFJNME0rd3EvellPOUQ4ODg4TzUzcGxOZVh3V0kKaDJkakFZTnNaSWt6aGlseDV0bWpFcStvbEZSdFY4R1VWRkRIbXF1dnVNVTQxMytwOWsrY21zS2hwK0tKVE5SSwpnVXBXZVJJakcrbURNZXZnR0IxYmQ2NGFIZFNNOHpKK2FiVGhYaXE3TlhzblNjdk5FWjBNdHlrdWx3Tkg5ajZ6CnVidDE4dDlVTWJuRmhMSERnZ2xDbGNvVk9MYkp5K21ROGg2WGxwZjJMQ0hqS0NkWmZmYk8reCt6dEhxdm5WZzkKazlBbUJYejMrTkRrK25Tc2h1ZDhWWWZCYjdiQnl5Vlk3ZjF2SlY5UUJCdGpBWE9DQm9RQlllTk9URGdDRjJMUAo4NWhoUkpDVkMvTm5IRUpiMjc5OVRuTWVjRW1hRGxBdkVOb003RjBCdUlxdEI0T252S0ZaMVpKQ0VUYnVabzQ5Ci9GditlVnhwY0FhZkNQU2xOYTg3aUtrak9Zd2ZqV2xpVGpUNTdVTUxTMEJNSFA2bWZDczY4b1hxMUQyWmgyUlMKWmxLSytjd1lLMkJNbHkwVkJJekQ5MHZBZzNoNllPUUhXMzh2NERuZFVRc0QvMGMrQ0Nmd1NPV1FQMGhWemdVSAp5MGsvRXhqcG1ZdXk0QWNpY2VkYlJIRHRCYytxQ0xRbHFGWGV2cE5pSjZyYzJrQ0s5T3FuR2ZMNzQ4ZEFubzZTCmRqSzVzcFFWTUNOTjhNOWxKOWNrRElZRkxzeGhNNlZodE11WTJseHdEbjJ1LzJsTTVhOXZBaVkwbS9VeVJtakwKRHh6MTJtRWt3ZDFmR0Fsb1hVenhBb0lCQVFEOXRIZ3RRcXVXU1NpYnkvTFZWMVJDYW9NcDMyQ2pjcE9vZkFiVAorelZyWkZxakxNRTByd3VZUEVhNmhLT2thQ0wyMUQ2MXR5RmNXc0x3MUZFTkpBdkJYbTVtSVdaOUFBYTR1ZTJICjQ1bjRnQTVQVVYzSlNGWWRnSk9Ja2ZrdWtUdmg3emlZek1sZWFGQ1RkQi9yRHhOc3RKVW00YmhjcEdpMTRTTmkKS0ZTVkxJb0wwNC8yUU9HVmFzMi9DL2NKZnVCWVd1Tk1UL3hOM1EydXNweExmTGYxNVcveUQxaFlycXhVOWNnZQpKTHFxVkRzVzlHaGplN2xkZXBLRkREM21zT3ZoandxNU9KTll4bXJjcDg4bUJ6a09JSnQyZFBTY09vb2poUlNwCmsyQlppMmQ0RVp0bVIwaGMwUHY0VlN5R1Qwdk5JZ0J1dWgyc0E0dTAyT3VGdDJCSkFvSUJBUURDRmx4QlQ4KzMKSWkyd2xrTFpOaDdZWE8yZTVKdGIvd0JQQzRLNVZDY25nL2F3SlRwNWVHUmRIZ20rVE84OGxVWEUxaUUxcVpJegpyR20rSEdJM2hmQy9wa3RVR0wwMTgrRGhvZXZmcjNTOXZCZUw3VXVqd0xXMWNobkI1YjVZRkRHZm50Rnp3Unk2ClNGUVNtYklUOFlJY2JsVEt3UFJIRFIraHVnNUVQTnVqUGZZSHVWZ09Rems3bW1TQUhwd2FxVlBmVll5aUtIQ2gKVStRTkZ1Q1F5d0xyTDBEcGl6N01YeFhmUXJjK2NrOTMzZDRRem9YNHFuNDVyZHN1eEd0TFUrbmoyV2loTjdndgp0cXpYaks5eXExY21mMmdMd3JPLy85K055dTFjUGFNNWRibHZMTXJmR1YwK3A4TFVmcE0yOU5nd0s5NzVZSU1QClRycWhFeTFGT0pqakFvSUJBUUNFWk9FeC9WQzlwSC9ralpHemMxY3RNWmd4Q2JqTWtzWXJiazNCNFo0RzVOL0gKdDFzN3V2MDUvSHFNYXh0YWVGMkdvVXY0V0JDNHVVUnhtTnFUR1BScGZIWHdKZzN0dlUzRXFJSWtIOG9CdkJHNwpvcUptbjdFUXhFQTVUTFBVY1VYbXFZZkhkVmJBUlgrRzgxcVV0OUZUTVFtRXVOWVV3bGRDVXJLOFRuK1ZPU0R3Cit2NXRhMzVORXVjN2cycnZNWjZ4ZlB5UW5reno5Ujltd3g1ODVpQzUyWG1Kd0NoQ1h5VGZVVU9WTjJXUjdWTEkKcjlLcDE2N3I4VUwwMjJhU05GRmo2OW1VdnNsbDBtV0JzTENSRDhQZWMzV3RZMnNpL0FtS2I3QlFyZS9oeXJXOApHclFWczYwM2duZDdLRGVMLzJWM0x2ODZ5VFVpeHRicEVTb1hKWkxCQW9JQkFGRkNxV2VTOGVXOEFxTXZsbGQ1CktGcndOWERVU0JPeFpVQ3pFZzFrSld5Ty9NYnRIMWxpUmFzUys0TllsTVdwdmVkV3U5ckszM0tSR2tqRmUzM0IKcjNXZU8yVy9ZZURuOWR5aVBhNk91SE1FQUZ2T2cxL1JQSUwyZmNCSDMzVGpKNCtzSUFlMTc4QXlyamlIYng2WQpmQ0JKTldrYWRtd1ZHNHhMNk5NN0k3NXFIOHRHRjQ4SktEcERQeGJCT2h5VGpwRXdNVXhuWUJpN2xmekErazdGCklMaTFOUmxTK256NHhxQ09QMGgrOWJTN0NOSENsaWJ4d3gyRkpBS2xyRUtDcEtlSURCMkx4YXI4Y2N0aGxNZU8KNDFNei9xMEYzTnBqV0FiMjBvQlBNanJKaGxUOHpRZXhoKy9HcjNUbWRkNkpqc1pFWi92REk3eFIreU9iY3RYTApoMzhDZ2dFQkFKV0g0T3F4cVpUeGxwSjZ4eWF2U2xKYXAxVVljTmFOQ0tiT3Evd2VKMmxBWjdvQlFhRHdUTGpDCk94VlJYZlNiNmxhMGZJL1ZrL2c1Qi9IeVN1SDNIZVIrRU9jRmYyYWwwV050T1RZQWlLRkVRYjlnRy95dWNFazgKWlo5NEIyY3IvMGQxK0hOUEI3VmI4cWVndzU2a3dWYzhRMHZwS1J2Z1lqemtKcFgxWG1pZlFLd1ozM3pqWm5nZwpMYWZSL2tDUDU4OHBibUpZVzU1c0VPLzZvZ3ZFVEU3ampSQkIzV0ZxWXc3SnM3bm1jak8zSHUxTzY0RDNXRzdOCkd2eHNsT0IzZVAyNnNMeWo4ZitNODFwL2dmT2xhSTloVk5pZUwzQU1ENEdjbmxLTzc0WU9VY0R1bE5UTmgyY1gKeHo4OVZsWm1CUkFyZ25VR0QrMlNmb0dscTU0SGo4QT0KLS0tLS1FTkQgUFJJVkFURSBLRVktLS0tLQo=</span><br><span class="line">kind: Secret</span><br><span class="line">metadata:</span><br><span class="line">  creationTimestamp: <span class="string">&quot;2023-12-10T09:33:45Z&quot;</span></span><br><span class="line">  name: myserver-tls</span><br><span class="line">  namespace: myserver</span><br><span class="line">  resourceVersion: <span class="string">&quot;302945&quot;</span></span><br><span class="line">  uid: 2684d383-5706-4f73-b30f-ef2fe46f3fcc</span><br><span class="line"><span class="built_in">type</span>: kubernetes.io/tls</span><br><span class="line"></span><br><span class="line"><span class="comment"># 因为上面的公钥和私钥都是base64加密的，我们这里可以解密看一下</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret/certs<span class="comment"># echo &quot;LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUVvakNDQW9vQ0FRRXdEUVlKS29aSWh2Y05BUUVMQlFBd0ZURVRNQkVHQTFVRUF3d0tkM2QzTG1OaExtTnYKYlRBZUZ3MHlNekV5TVRBd09UTXdNVFphRncwek16RXlNRGN3T1RNd01UWmFNQmt4RnpBVkJnTlZCQU1NRG5kMwpkeTV0ZVhOcGRHVXVZMjl0TUlJQ0lqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FnOEFNSUlDQ2dLQ0FnRUF3RmpzCkFqV0ZGWmIzOXVnRUIxZlk5dTdLYTNPa1JnZmx4T3hLZTZBUFdiZFcyYi84MWRObmtFdTY4aTBmRmFuRVgraHAKazdJdjdUT2FsdnlWSlJiK2dzZWxVNk1idVVPdmdkZDVrNktDTWRHTkVmSWJSaytjSTB1dHZZMzNEOVFLVzRvTQpKb3ZuOVBUZXduZEFDUCtlY2dGYTBFdFpsdHJoTHBzTnN5eHUvRnVyNWpVVnU4V1lBY3RPN2h4K2pWcWFjVUtqCkl5VGRFekM2amxhSVM5T3RNWUM2eUV3emdrNFNPeHpsQUNCMkZoa1ZBSlhTYTc3WFRlVlR3eHROcXo3MTFtYVIKRmhrOEZ0WkxZWXBnSS9weGg4OVp6N3hIdTM3MWQ1a2dQUUgyeVhUeVlJdG9BaTZBMGVrZS9Qc2UyQ0kwK1hoegp5ZmwzNVhxR2d5OXh6MEowQUJOYk5IeUpnaVJjc3dTOWdIQ1NkR3dRbU9hdXJyZGVJaVpOMHBJcnB1cWtrVkkwCkpFVGp4dndnZWlTRlFqMkdnUXdReXk5d1JndWRaSk1MeTkyWUxnTkxlYVU3d2JHVGs3L2lmMzRCR3ZZTm9lRlMKTGZ1OW1neVA0c2FvTHM2QUljVmhCT09YQkRLUDhkY2JKUmQ5T2pnTHJiWUw1WXlNRkdhMDMzNk55Z0pUOENZaApiRUVMM2YxZ2YxNmE0VU1TYU54ZUdsYkFMcWJEU3dCWUxGMWRveXJoWFNzNkx3UHFBYUpIOEdrQjJYbjk5bldkCllXTEtTeGNRR3ZraEFFVGE5eGRBRVVVUjhDQUFzeU9HRzFoQ0tGNmpPNVlIYjJ3eG1vdnpsdEU5b2F5U0svc2kKbnRPQWZNWCtmWmdEUDhnVUlDQWJvMnZqNkgzNDVnSTFJaSs5dUxzQ0F3RUFBVEFOQmdrcWhraUc5dzBCQVFzRgpBQU9DQWdFQWMxWTN1WkpPOVBUcXZ3TlpaOVIrWEx5ZlovdGhyaEV4cmU4MnZCQ2JsUjhwZVoyRnRnQkczZnYwCkhqeVh3OFJUUlpsTTl5QkNRc2RlY29UaU1leFUzNGo3Rk90QlR2emZxbXFITzhpZzBrS2t5SjRoUmE0OU1ZeFoKdXZNODAxb1d1b1JFeXE3RlR3YU02ZU5tcmpSNFo0MFRKY3NPeTBNNU9FK2pvMEphRGRBTWI1RmpnRmx5dXd5dgpMYmhIWElhS3ZWMVBZTEJSSitRcjd2Tnk1dHRuQjlWNWZnZTE3TUJPNlNFUFIyOS91WWhoa25zUVp2OHpmbjFoCjFQRUZ1WW5TeEdaaWtnY2prbEdxbkdKQ0FONFRnSzF4MVY1aXE3S0w0NzJOYTlYNk9WblNUYXprNGY4UmhOeDcKVHY4MU9rV2tUTTN4UW1TK1R3WVlxZGV5UDQ4WlptUUEzTFRNUUFxK3VNRERWTHp0dWp5b0t2dFlMQWJRUGp0TgoyUCtRM1FRU25WQU5ZelpsK0pPNWg1N21KVWNZUHVDaHRhOWxQT3VWL1RYR0tvTmVVaW5vcXZ0RXFyWCtYS0VBCmVyNWt0QXpUMjhDc1V2NzErYnRjWENLcFpKTGZWbklYaHZMSWdNbFhwVUdaRGEwMUEwZllaSkUyclZNWnRTVXQKNXhmdDVIb0RQSWx1Q3pvdnFWVVBJVm9ScXl6Mmdpd0hXdncrckhZbmVRaURUd2Z3YjF5L0o5bFBRanVWWnJtdwpGSFB1SGFrbVRPcFMzNmREU0RhMHNqT1V2b3MxTVI0L3k3SW9aVFkvRGFHb0xwekJ1Z2k0cGVlZXBWTFpyVjZxCnM5bjVLcnM0ZDEzemdBa2lQNEFlVWFva2tGUkdlYXQ4TmU5ZzZGZXgzZmZndmJ3TFp6az0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=&quot; | base64 -d</span></span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIEojCCAooCAQEwDQYJKoZIhvcNAQELBQAwFTETMBEGA1UEAwwKd3d3LmNhLmNv</span><br><span class="line">bTAeFw0yMzEyMTAwOTMwMTZaFw0zMzEyMDcwOTMwMTZaMBkxFzAVBgNVBAMMDnd3</span><br><span class="line">dy5teXNpdGUuY29tMIICIjANBgkqhkiG9w0BAQEFAAOCAg8AMIICCgKCAgEAwFjs</span><br><span class="line">AjWFFZb39ugEB1fY9u7Ka3OkRgflxOxKe6APWbdW2b/81dNnkEu68i0fFanEX+hp</span><br><span class="line">k7Iv7TOalvyVJRb+gselU6MbuUOvgdd5k6KCMdGNEfIbRk+cI0utvY33D9QKW4oM</span><br><span class="line">Jovn9PTewndACP+ecgFa0EtZltrhLpsNsyxu/Fur5jUVu8WYActO7hx+jVqacUKj</span><br><span class="line">IyTdEzC6jlaIS9OtMYC6yEwzgk4SOxzlACB2FhkVAJXSa77XTeVTwxtNqz711maR</span><br><span class="line">Fhk8FtZLYYpgI/pxh89Zz7xHu371d5kgPQH2yXTyYItoAi6A0eke/Pse2CI0+Xhz</span><br><span class="line">yfl35XqGgy9xz0J0ABNbNHyJgiRcswS9gHCSdGwQmOaurrdeIiZN0pIrpuqkkVI0</span><br><span class="line">JETjxvwgeiSFQj2GgQwQyy9wRgudZJMLy92YLgNLeaU7wbGTk7/if34BGvYNoeFS</span><br><span class="line">Lfu9mgyP4saoLs6AIcVhBOOXBDKP8dcbJRd9OjgLrbYL5YyMFGa0336NygJT8CYh</span><br><span class="line">bEEL3f1gf16a4UMSaNxeGlbALqbDSwBYLF1doyrhXSs6LwPqAaJH8GkB2Xn99nWd</span><br><span class="line">YWLKSxcQGvkhAETa9xdAEUUR8CAAsyOGG1hCKF6jO5YHb2wxmovzltE9oaySK/si</span><br><span class="line">ntOAfMX+fZgDP8gUICAbo2vj6H345gI1Ii+9uLsCAwEAATANBgkqhkiG9w0BAQsF</span><br><span class="line">AAOCAgEAc1Y3uZJO9PTqvwNZZ9R+XLyfZ/thrhExre82vBCblR8peZ2FtgBG3fv0</span><br><span class="line">HjyXw8RTRZlM9yBCQsdecoTiMexU34j7FOtBTvzfqmqHO8ig0kKkyJ4hRa49MYxZ</span><br><span class="line">uvM801oWuoREyq7FTwaM6eNmrjR4Z40TJcsOy0M5OE+jo0JaDdAMb5FjgFlyuwyv</span><br><span class="line">LbhHXIaKvV1PYLBRJ+Qr7vNy5ttnB9V5fge17MBO6SEPR29/uYhhknsQZv8zfn1h</span><br><span class="line">1PEFuYnSxGZikgcjklGqnGJCAN4TgK1x1V5iq7KL472Na9X6OVnSTazk4f8RhNx7</span><br><span class="line">Tv81OkWkTM3xQmS+TwYYqdeyP48ZZmQA3LTMQAq+uMDDVLztujyoKvtYLAbQPjtN</span><br><span class="line">2P+Q3QQSnVANYzZl+JO5h57mJUcYPuChta9lPOuV/TXGKoNeUinoqvtEqrX+XKEA</span><br><span class="line">er5ktAzT28CsUv71+btcXCKpZJLfVnIXhvLIgMlXpUGZDa01A0fYZJE2rVMZtSUt</span><br><span class="line">5xft5HoDPIluCzovqVUPIVoRqyz2giwHWvw+rHYneQiDTwfwb1y/J9lPQjuVZrmw</span><br><span class="line">FHPuHakmTOpS36dDSDa0sjOUvos1MR4/y7IoZTY/DaGoLpzBugi4peeepVLZrV6q</span><br><span class="line">s9n5Krs4d13zgAkiP4AeUaokkFRGeat8Ne9g6Fex3ffgvbwLZzk=</span><br><span class="line">-----END CERTIFICATE-----</span><br></pre></td></tr></table></figure><p>创建web服务</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># cat secret-tls.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-config</span><br><span class="line">  namespace: myserver</span><br><span class="line">data:</span><br><span class="line"> default: |</span><br><span class="line">    server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  www.mysite.com;</span><br><span class="line">       listen 443 ssl;</span><br><span class="line">       ssl_certificate /etc/nginx/conf.d/certs/tls.crt;</span><br><span class="line">       ssl_certificate_key /etc/nginx/conf.d/certs/tls.key;</span><br><span class="line"></span><br><span class="line">       location / &#123;</span><br><span class="line">           root /usr/share/nginx/html; </span><br><span class="line">           index index.html;</span><br><span class="line">           <span class="keyword">if</span> (<span class="variable">$scheme</span> = http )&#123;  <span class="comment">#未加条件判断，会导致死循环</span></span><br><span class="line">              rewrite / https://www.mysite.com permanent;</span><br><span class="line">           &#125;  </span><br><span class="line"></span><br><span class="line">           <span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">               rewrite ^/(.*) /index.html last;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend-deployment</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myserver-myapp-frontend</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: myserver-myapp-frontend</span><br><span class="line">        image: nginx:1.18.0</span><br><span class="line">        ports:</span><br><span class="line">          - containerPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">          - name: nginx-config</span><br><span class="line">            mountPath:  /etc/nginx/conf.d/myserver</span><br><span class="line">          - name: myserver-tls-key</span><br><span class="line">            mountPath:  /etc/nginx/conf.d/certs</span><br><span class="line">      volumes:</span><br><span class="line">      - name: nginx-config</span><br><span class="line">        configMap:</span><br><span class="line">          name: nginx-config</span><br><span class="line">          items:</span><br><span class="line">             - key: default</span><br><span class="line">               path: mysite.conf</span><br><span class="line">      - name: myserver-tls-key</span><br><span class="line">        secret:</span><br><span class="line">          secretName: myserver-tls </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-frontend</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30020</span><br><span class="line">    protocol: TCP</span><br><span class="line">  - name: htts</span><br><span class="line">    port: 443</span><br><span class="line">    targetPort: 443</span><br><span class="line">    nodePort: 30021</span><br><span class="line">    protocol: TCP</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># kubectl apply -f secret-tls.yaml</span></span><br></pre></td></tr></table></figure><p>配置负载均衡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@ha2:~<span class="comment"># vim /etc/haproxy/haproxy.cfg </span></span><br><span class="line"><span class="comment"># 在配置文件最后加上下面内容</span></span><br><span class="line">listen  myserver-nginx-80</span><br><span class="line">    <span class="built_in">bind</span> 10.0.0.210:80</span><br><span class="line">    mode tcp</span><br><span class="line">    server 10.0.0.107 10.0.0.107:30020 check inter 3s fall 3 rise 5</span><br><span class="line">    server 10.0.0.108 10.0.0.108:30020 check inter 3s fall 3 rise 5 </span><br><span class="line"></span><br><span class="line">listen  myserver-nginx-443</span><br><span class="line">    <span class="built_in">bind</span> 10.0.0.210:443</span><br><span class="line">    mode tcp</span><br><span class="line">    server 10.0.0.107 10.0.0.107:30021 check inter 3s fall 3 rise 5</span><br><span class="line">    server 10.0.0.108 10.0.0.108:30021 check inter 3s fall 3 rise 5</span><br><span class="line">root@ha2:~<span class="comment"># systemctl restart haproxy.service </span></span><br></pre></td></tr></table></figure><p>在本地配置好hosts解析</p><p>进入到pod验证数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/secret<span class="comment"># kubectl exec -it -n myserver myserver-myapp-frontend-deployment-67c4dc8d46-wtftp bash</span></span><br><span class="line">kubectl <span class="built_in">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl <span class="built_in">exec</span> [POD] -- [COMMAND] instead.</span><br><span class="line"><span class="comment"># 验证配置文件</span></span><br><span class="line">root@myserver-myapp-frontend-deployment-67c4dc8d46-wtftp:/<span class="comment"># ls /etc/nginx/conf.d/myserver/</span></span><br><span class="line">..2023_12_10_09_44_44.2600726947/ ..data/                           mysite.conf                       </span><br><span class="line">root@myserver-myapp-frontend-deployment-67c4dc8d46-wtftp:/<span class="comment"># ls /etc/nginx/conf.d/myserver/mysite.conf </span></span><br><span class="line">/etc/nginx/conf.d/myserver/mysite.conf</span><br><span class="line"><span class="comment"># 验证证书</span></span><br><span class="line">root@myserver-myapp-frontend-deployment-67c4dc8d46-wtftp:/<span class="comment"># ls /etc/nginx/conf.d/certs/</span></span><br><span class="line">tls.crt  tls.key</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置文件</span></span><br><span class="line">root@myserver-myapp-frontend-deployment-67c4dc8d46-wtftp:/<span class="comment"># vim /etc/nginx/nginx.conf</span></span><br><span class="line">    include /etc/nginx/conf.d/*.conf;</span><br><span class="line">    include /etc/nginx/conf.d/myserver/*.conf;</span><br><span class="line"><span class="comment"># 使配置生效</span></span><br><span class="line">root@myserver-myapp-frontend-deployment-67c4dc8d46-wtftp:/<span class="comment"># nginx -s reload</span></span><br><span class="line">root@myserver-myapp-frontend-deployment-67c4dc8d46-wtftp:/<span class="comment"># netstat -tanlp</span></span><br><span class="line">Active Internet connections (servers and established)</span><br><span class="line">Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name    </span><br><span class="line">tcp        0      0 0.0.0.0:80              0.0.0.0:*               LISTEN      1/nginx: master pro </span><br><span class="line">tcp        0      0 0.0.0.0:443             0.0.0.0:*               LISTEN      1/nginx: master pro </span><br><span class="line">tcp        0      0 10.200.107.143:55418    151.101.110.132:80      TIME_WAIT   -                   </span><br><span class="line">tcp6       0      0 :::80                   :::*                    LISTEN      1/nginx: master pro</span><br></pre></td></tr></table></figure><p><img src="/images/Secret-tls.png"></p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-Configmap</title>
      <link href="/post/24a5cc96.html"/>
      <url>/post/24a5cc96.html</url>
      
        <content type="html"><![CDATA[<h1 id="Configmap"><a href="#Configmap" class="headerlink" title="Configmap"></a>Configmap</h1><p>Configmap配置信息和镜像解耦，实现方式将配置信息放到configmap对象中，然后在pod中作为Volume挂载到pod中，从而实现导入配置的目的。</p><p>Configmap的使用场景：</p><ul><li>通过Configmap给pod定义全局环境变量</li><li>通过Configmap给pod传递命令行参数，如mysql -u -p中的账号密码可以通过Configmap来传递</li><li>通过Configmap给pod中的容器服务提供配置文件，配置文件以挂载到容器的形式使用</li></ul><p><strong>注意事项：</strong></p><ul><li>Configmap需要在pod使用它之前就要创建好</li><li>pod只能位于同一个namespace的Configmap，即Configmap不能跨namespace来使用</li><li>通常用于非安全加密的配置场景</li><li>Configmap通常是要小于1MB的配置的</li></ul><p>示例1：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat deploy_configmap.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-config</span><br><span class="line">data:</span><br><span class="line"><span class="comment"># default是key，value对应的是配置文件内容</span></span><br><span class="line"> default: |</span><br><span class="line">    server &#123;</span><br><span class="line">       listen       80;</span><br><span class="line">       server_name  www.mysite.com;</span><br><span class="line">       index        index.html index.php index.htm;</span><br><span class="line"></span><br><span class="line">       location / &#123;</span><br><span class="line">           root /data/nginx/html;</span><br><span class="line">           <span class="keyword">if</span> (!-e <span class="variable">$request_filename</span>) &#123;</span><br><span class="line">               rewrite ^/(.*) /index.html last;</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ng-deploy-80</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-80</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-80</span><br><span class="line">        image: nginx:1.18.0</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: nginx-config</span><br><span class="line">          mountPath: /etc/nginx/conf.d/mysite</span><br><span class="line">      volumes:</span><br><span class="line">      - name: nginx-config</span><br><span class="line">        configMap:</span><br><span class="line">          name: nginx-config</span><br><span class="line">          items:</span><br><span class="line">             - key: default</span><br><span class="line">               path: mysite.conf</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: ng-deploy-80</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 81</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30019</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: ng-deploy-80</span><br></pre></td></tr></table></figure><p>示例2：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat deploy_configmap_env.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-config</span><br><span class="line">data:</span><br><span class="line">  username: <span class="string">&quot;user1&quot;</span></span><br><span class="line">  password: <span class="string">&quot;12345678&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">---</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ng-deploy-80</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-80</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-80</span><br><span class="line">        image: nginx </span><br><span class="line">        <span class="built_in">env</span>:</span><br><span class="line">        - name: magedu</span><br><span class="line">          value: linux66 </span><br><span class="line">        - name: MY_USERNAME</span><br><span class="line">          valueFrom:</span><br><span class="line">            configMapKeyRef:</span><br><span class="line">              name: nginx-config</span><br><span class="line">              key: username</span><br><span class="line">        - name: MY_PASSWORD</span><br><span class="line">          valueFrom:</span><br><span class="line">            configMapKeyRef:</span><br><span class="line">              name: nginx-config</span><br><span class="line">              key: password</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-PV/PVC</title>
      <link href="/post/42e846d1.html"/>
      <url>/post/42e846d1.html</url>
      
        <content type="html"><![CDATA[<h1 id="PV-PVC"><a href="#PV-PVC" class="headerlink" title="PV&#x2F;PVC"></a>PV&#x2F;PVC</h1><ul><li><strong>PV：PersistentVolume（与硬件（nfs、ceph等）对接）</strong></li></ul><p>是集群中已经由kubernetes管理员配置的一个网络存储，集群中的存储资源一个集群资源，即不隶属于任何namespace，PV的数据最终存储在硬件存储，pod不能直接挂载PV，PV需要绑定给PVC并最终由pod挂载PVC使用，PV其支持NFS、Ceph、商业存储或云提供商的特定存储等，可以自定义PV的类型是块还是文件存储、存储空间大小、访问模式等，PV的生命周期独立于Pod，即当使用PV的Pod被删除时可以对PV中的数据没有影响。</p><ul><li><strong>PVC：PersistentVolumeClaim（与pod关联，与pv绑定）</strong></li></ul><p>PVC是对存储的请求，pod挂载的PVC并将数据存储在PVC中，而PVC需要绑定PV才可以使用，另外PVC在创建的使用要指定namespace，即pod要和PVC运行在同一个namespace，可以对PVC设置特定的空间大小和访问模式，使用PVC的pod在删除时也可以对PVC中的数据没有影响。</p><p><img src="/images/pv-pvc1.png"></p><p>用于实现pod和storage的解耦，这样的话我们修改storage的时候就不需要修改pod。</p><p>与NFS的区别，就是PV和PVC层面可以实现对存储服务器的空间分配、存储的访问权限管理等。</p><p>不同存储卷支持的访问模式：<a href="https://kubernetes.io/zh-cn/docs/concepts/storage/persistent-volumes/#access-modes">https://kubernetes.io/zh-cn/docs/concepts/storage/persistent-volumes/#access-modes</a></p><p><img src="/images/pv-pvc2.png"></p><p><strong>总结：</strong></p><p>PV是对底层网络存储的抽象，即将网络存储定义为一种存储资源，将一个整体的存储资源拆分多份后给不同的业务使用。</p><p>PVC是对PV资源的申请调用，pod是通过PVC将数据保存到PV中，PV在把数据保存到真正的硬件存储。</p><p><img src="/images/pv-pvc3.png"></p><h2 id="PV（PersistentVolume）参数"><a href="#PV（PersistentVolume）参数" class="headerlink" title="PV（PersistentVolume）参数"></a>PV（PersistentVolume）参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># kubectl explain pv</span></span><br><span class="line">1、Capacity：<span class="comment"># 当前PV空间大小，kubectl explain pv.spec.capacity</span></span><br><span class="line">2、accessModes：<span class="comment"># 访问模式，kubectl explain pv.spec.accessModes</span></span><br><span class="line">  ReadWriteOnce <span class="comment"># PV只能被单个节点以读写权限挂载，RWO</span></span><br><span class="line">  ReadOnlyMany  <span class="comment"># PV可以被多个节点挂载但是权限只读，ROX</span></span><br><span class="line">  ReadWriteMany <span class="comment"># PV可以被多个节点以读写方式挂载使用，RWX</span></span><br><span class="line">3、persistentVolumeReclaimPolicy <span class="comment"># 删除机制 kubectl explain pv.spec.persistentVolumeReclaimPolicy</span></span><br><span class="line">  Retain  <span class="comment"># 删除PV后保持原状，最后需要管理员手动删除</span></span><br><span class="line">  Recycle <span class="comment"># 空间回收，即删除存储卷上所有数据（包括数据和隐藏文件），目前仅支持NFS和hostPath</span></span><br><span class="line">  Delete  <span class="comment"># 自动删除存储卷</span></span><br><span class="line">4、volumeMode <span class="comment"># 卷类型 kubectl explain pv.spec.volumeMode</span></span><br><span class="line">  <span class="comment"># 定义存储卷使用的文件系统是块设备还是文件系统，默认是文件系统</span></span><br><span class="line">5、mountOptions <span class="comment"># 附加的挂载选项列表，实现更精细的权限控制 ro等</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># pv创建后的状态</span></span><br><span class="line">Available（可用）-- 卷是一个空闲资源，尚未绑定到任何申领；</span><br><span class="line">Bound（已绑定）-- 该卷已经绑定到某申领；</span><br><span class="line">Released（已释放）-- 所绑定的申领已被删除，但是资源尚未被集群回收；</span><br><span class="line">Failed（失败）-- 卷的自动回收操作失败。</span><br></pre></td></tr></table></figure><h2 id="PVC（PersistentVolumeClaim）参数"><a href="#PVC（PersistentVolumeClaim）参数" class="headerlink" title="PVC（PersistentVolumeClaim）参数"></a>PVC（PersistentVolumeClaim）参数</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># kubectl explain pvc</span></span><br><span class="line">1、accessModes：<span class="comment"># 访问模式，kubectl explain pvc.spec.accessModes</span></span><br><span class="line">  ReadWriteOnce <span class="comment"># PVC只能被单个节点以读写权限挂载，RWO</span></span><br><span class="line">  ReadOnlyMany  <span class="comment"># PVC可以被多个节点挂载但是权限只读，ROX</span></span><br><span class="line">  ReadWriteMany <span class="comment"># PVC可以被多个节点以读写方式挂载使用，RWX</span></span><br><span class="line">2、resources：<span class="comment"># 定义PVC创建存储卷的空间大小</span></span><br><span class="line">3、selector：<span class="comment"># 标签选择器，选择要绑定的PV</span></span><br><span class="line">  matchLabels：<span class="comment"># 匹配标签名称</span></span><br><span class="line">  matchExpressions：<span class="comment"># 基于正则表达式匹配</span></span><br><span class="line">4、volumeName <span class="comment"># 要绑定的PV名称</span></span><br><span class="line">5、volumeMode <span class="comment"># 卷类型</span></span><br><span class="line"><span class="comment"># 定义PVC使用的文件系统是块设备还是文件系统，默认是文件系统</span></span><br></pre></td></tr></table></figure><h1 id="Volume存储卷类型"><a href="#Volume存储卷类型" class="headerlink" title="Volume存储卷类型"></a>Volume存储卷类型</h1><ul><li><p>static：静态存储卷，需要在使用前手动创建PV，然后在创建PVC绑定到PV，再然后就挂载到pod中使用，适用于PV和PVC相对固定的业务场景。</p></li><li><p>dynamin：动态存储卷，先创建一个存储类storageclass，后期pod在使用PVC的时候可以通过存储类动态创建PVC，适用于有状态的服务集群如MySQL一主多从、zookeeper集群等。</p></li></ul><p><img src="/images/pv-pvc4.png"></p><h2 id="Volume静态存储卷示例"><a href="#Volume静态存储卷示例" class="headerlink" title="Volume静态存储卷示例"></a>Volume静态存储卷示例</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 首先准备好NFS存储</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># mkdir -p /data/k8sdata/myserver/myappdata</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># vim /etc/exports</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># cat /etc/exports</span></span><br><span class="line">/data/k8sdata 10.0.0.0/24(rw,no_root_squash)</span><br><span class="line">/data/k8sdata/myserver/myappdata 10.0.0.0/24(rw,no_root_squash)</span><br><span class="line">[root@Centos7 ~]<span class="comment"># systemctl restart nfs</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># showmount -e 10.0.0.7</span></span><br><span class="line">Export list <span class="keyword">for</span> 10.0.0.7:</span><br><span class="line">/data/k8sdata/myserver/myappdata 10.0.0.0/24</span><br><span class="line">/data/k8sdata                    10.0.0.0/24</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建PV</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim myapp-persistentvolume.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat myapp-persistentvolume.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolume</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-static-pv</span><br><span class="line">spec:</span><br><span class="line">  <span class="comment"># 存储卷的大小</span></span><br><span class="line">  capacity:</span><br><span class="line">    storage: 10Gi</span><br><span class="line">  <span class="comment"># 存储卷的访问模式，单个pod可读写</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  <span class="comment"># 指定存储类型为nfs</span></span><br><span class="line">  nfs:</span><br><span class="line">    path: /data/k8sdata/myserver/myappdata</span><br><span class="line">    server: 10.0.0.7</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f myapp-persistentvolume.yaml </span></span><br><span class="line">persistentvolume/myserver-myapp-static-pv created</span><br><span class="line"><span class="comment"># 当STATUS的值为Available表示pv已经与nfs关联了</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl get pv</span></span><br><span class="line">NAME                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS      CLAIM   STORAGECLASS   REASON   AGE</span><br><span class="line">myserver-myapp-static-pv   10Gi       RWO            Retain           Available                                   8s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建pvc</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim myapp-persistentvolumeclaim.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat myapp-persistentvolumeclaim.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-static-pvc</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  volumeName: myserver-myapp-static-pv</span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteOnce</span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 10Gi</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f myapp-persistentvolumeclaim.yaml </span></span><br><span class="line">persistentvolumeclaim/myserver-myapp-static-pvc created</span><br><span class="line"><span class="comment"># 这里的STATUS值为Bound时表示已经和pv绑定了</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl get pvc -n myserver</span></span><br><span class="line">NAME                        STATUS   VOLUME                     CAPACITY   ACCESS MODES   STORAGECLASS   AGE</span><br><span class="line">myserver-myapp-static-pvc   Bound    myserver-myapp-static-pv   10Gi       RWO                           19s</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">## 创建deployment</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim myapp-webserver.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat myapp-webserver.yaml</span></span><br><span class="line">kind: Deployment</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: myserver-myapp </span><br><span class="line">  name: myserver-myapp-deployment-name</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myserver-myapp-frontend</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: myserver-myapp-container</span><br><span class="line">          image: nginx:1.18.0 </span><br><span class="line">          <span class="comment">#imagePullPolicy: Always</span></span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: <span class="string">&quot;/usr/share/nginx/html/statics&quot;</span></span><br><span class="line">            name: statics-datadir</span><br><span class="line">      volumes:</span><br><span class="line">        - name: statics-datadir</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            <span class="comment"># 指定pvc的名称</span></span><br><span class="line">            claimName: myserver-myapp-static-pvc </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: myserver-myapp-service</span><br><span class="line">  name: myserver-myapp-service-name</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30080</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f myapp-webserver.yaml</span></span><br><span class="line">deployment.apps/myserver-myapp-deployment-name created</span><br><span class="line">service/myserver-myapp-service-name created</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl get pods -n myserver -o wide</span></span><br><span class="line">NAME                                              READY   STATUS    RESTARTS   AGE   IP               NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">myserver-myapp-deployment-name-6d5544579c-d85tg   1/1     Running   0          39s   10.200.15.138    10.0.0.107   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">myserver-myapp-deployment-name-6d5544579c-kq5js   1/1     Running   0          39s   10.200.107.138   10.0.0.108   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">myserver-myapp-deployment-name-6d5544579c-phx7x   1/1     Running   0          39s   10.200.107.137   10.0.0.108   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">## 进入一个pod中验证是否挂载成功</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl exec -it -n myserver myserver-myapp-deployment-name-6d5544579c-d85tg bash</span></span><br><span class="line">kubectl <span class="built_in">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl <span class="built_in">exec</span> [POD] -- [COMMAND] instead.</span><br><span class="line">root@myserver-myapp-deployment-name-6d5544579c-d85tg:/<span class="comment"># df -h</span></span><br><span class="line">Filesystem                                 Size  Used Avail Use% Mounted on</span><br><span class="line">overlay                                     98G  8.9G   84G  10% /</span><br><span class="line">tmpfs                                       64M     0   64M   0% /dev</span><br><span class="line">tmpfs                                      3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">shm                                         64M     0   64M   0% /dev/shm</span><br><span class="line">/dev/mapper/vg0-lv--root                    98G  8.9G   84G  10% /etc/hosts</span><br><span class="line">tmpfs                                      7.5G   12K  7.5G   1% /run/secrets/kubernetes.io/serviceaccount</span><br><span class="line">10.0.0.7:/data/k8sdata/myserver/myappdata   99G  2.1G   97G   3% /usr/share/nginx/html/statics</span><br><span class="line">tmpfs                                      3.9G     0  3.9G   0% /proc/acpi</span><br><span class="line">tmpfs                                      3.9G     0  3.9G   0% /proc/scsi</span><br><span class="line">tmpfs                                      3.9G     0  3.9G   0% /sys/firmware</span><br></pre></td></tr></table></figure><p>经过上面的操作后，就可以测试上传数据，在nfs存储中验证数据了。</p><h2 id="Volume动态存储卷示例"><a href="#Volume动态存储卷示例" class="headerlink" title="Volume动态存储卷示例"></a>Volume动态存储卷示例</h2><p><a href="https://kubernetes.io/zh-cn/docs/concepts/storage/storage-classes/">https://kubernetes.io/zh-cn/docs/concepts/storage/storage-classes/</a></p><p><a href="https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner">https://github.com/kubernetes-sigs/nfs-subdir-external-provisioner</a></p><h3 id="创建账户"><a href="#创建账户" class="headerlink" title="创建账户"></a>创建账户</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim rbac.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat rbac.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Namespace</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs-client-provisioner</span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  namespace: nfs</span><br><span class="line">---</span><br><span class="line">kind: ClusterRole</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs-client-provisioner-runner</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    resources: [<span class="string">&quot;nodes&quot;</span>]</span><br><span class="line">    verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  - apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    resources: [<span class="string">&quot;persistentvolumes&quot;</span>]</span><br><span class="line">    verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;delete&quot;</span>]</span><br><span class="line">  - apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    resources: [<span class="string">&quot;persistentvolumeclaims&quot;</span>]</span><br><span class="line">    verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;update&quot;</span>]</span><br><span class="line">  - apiGroups: [<span class="string">&quot;storage.k8s.io&quot;</span>]</span><br><span class="line">    resources: [<span class="string">&quot;storageclasses&quot;</span>]</span><br><span class="line">    verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>]</span><br><span class="line">  - apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    resources: [<span class="string">&quot;events&quot;</span>]</span><br><span class="line">    verbs: [<span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line">---</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: run-nfs-client-provisioner</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: nfs-client-provisioner</span><br><span class="line">    <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">    namespace: nfs</span><br><span class="line">roleRef:</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: nfs-client-provisioner-runner</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">---</span><br><span class="line">kind: Role</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: leader-locking-nfs-client-provisioner</span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  namespace: nfs</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups: [<span class="string">&quot;&quot;</span>]</span><br><span class="line">    resources: [<span class="string">&quot;endpoints&quot;</span>]</span><br><span class="line">    verbs: [<span class="string">&quot;get&quot;</span>, <span class="string">&quot;list&quot;</span>, <span class="string">&quot;watch&quot;</span>, <span class="string">&quot;create&quot;</span>, <span class="string">&quot;update&quot;</span>, <span class="string">&quot;patch&quot;</span>]</span><br><span class="line">---</span><br><span class="line">kind: RoleBinding</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">metadata:</span><br><span class="line">  name: leader-locking-nfs-client-provisioner</span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  namespace: nfs</span><br><span class="line">subjects:</span><br><span class="line">  - kind: ServiceAccount</span><br><span class="line">    name: nfs-client-provisioner</span><br><span class="line">    <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">    namespace: nfs</span><br><span class="line">roleRef:</span><br><span class="line">  kind: Role</span><br><span class="line">  name: leader-locking-nfs-client-provisioner</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f rbac.yaml</span></span><br></pre></td></tr></table></figure><h3 id="创建storageclass"><a href="#创建storageclass" class="headerlink" title="创建storageclass"></a>创建storageclass</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim storageclass.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat storageclass.yaml</span></span><br><span class="line">apiVersion: storage.k8s.io/v1</span><br><span class="line">kind: StorageClass</span><br><span class="line">metadata:</span><br><span class="line">  name: managed-nfs-storage</span><br><span class="line">provisioner: k8s-sigs.io/nfs-subdir-external-provisioner <span class="comment"># or choose another name, must match deployment&#x27;s env PROVISIONER_NAME&#x27;</span></span><br><span class="line">reclaimPolicy: Retain <span class="comment"># PV的删除策略，默认为delete，删除PV后立即删除NFS server的数据</span></span><br><span class="line">mountOptions:</span><br><span class="line">  - noresvport <span class="comment"># 告知NFS客户端在重新建立网络连接时，使用新的传输控制协议源端口</span></span><br><span class="line">  - noatime <span class="comment"># 访问文件时不更新文件inode中的时间戳，高并发环境可提高性能</span></span><br><span class="line">parameters:</span><br><span class="line">  mountOptions: <span class="string">&quot;vers=4.1,noresvport,noatime&quot;</span></span><br><span class="line">  archiveOnDelete: <span class="string">&quot;true&quot;</span>  <span class="comment"># 删除pod时保留pod数据，默认为false时为不保留数据</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f storageclass.yaml</span></span><br></pre></td></tr></table></figure><h3 id="创建NFS-provisioner"><a href="#创建NFS-provisioner" class="headerlink" title="创建NFS provisioner"></a>创建NFS provisioner</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim nfs-provisioner.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat nfs-provisioner.yaml</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nfs-client-provisioner</span><br><span class="line">  labels:</span><br><span class="line">    app: nfs-client-provisioner</span><br><span class="line">  <span class="comment"># replace with namespace where provisioner is deployed</span></span><br><span class="line">  namespace: nfs</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  strategy: <span class="comment">#部署策略</span></span><br><span class="line">    <span class="built_in">type</span>: Recreate</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: nfs-client-provisioner</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: nfs-client-provisioner</span><br><span class="line">    spec:</span><br><span class="line">      serviceAccountName: nfs-client-provisioner</span><br><span class="line">      containers:</span><br><span class="line">        - name: nfs-client-provisioner</span><br><span class="line">          <span class="comment">#image: k8s.gcr.io/sig-storage/nfs-subdir-external-provisioner:v4.0.2 </span></span><br><span class="line">          <span class="comment">#image: registry.cn-qingdao.aliyuncs.com/zhangshijie/nfs-subdir-external-provisioner:v4.0.2</span></span><br><span class="line">          image: registry.cn-beijing.aliyuncs.com/mydlq/nfs-subdir-external-provisioner:v4.0.0</span><br><span class="line">          volumeMounts:</span><br><span class="line">            - name: nfs-client-root</span><br><span class="line">              mountPath: /persistentvolumes</span><br><span class="line">          <span class="built_in">env</span>:</span><br><span class="line">            - name: PROVISIONER_NAME</span><br><span class="line">              value: k8s-sigs.io/nfs-subdir-external-provisioner</span><br><span class="line">            - name: NFS_SERVER</span><br><span class="line">              value: 10.0.0.7</span><br><span class="line">            - name: NFS_PATH</span><br><span class="line">              value: /data/volumes</span><br><span class="line">      volumes:</span><br><span class="line">        - name: nfs-client-root</span><br><span class="line">          nfs:</span><br><span class="line">            server: 10.0.0.7</span><br><span class="line">            path: /data/volumes</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f nfs-provisioner.yaml</span></span><br></pre></td></tr></table></figure><h3 id="创建PVC"><a href="#创建PVC" class="headerlink" title="创建PVC"></a>创建PVC</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim create-pvc.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat create-pvc.yaml</span></span><br><span class="line"><span class="comment"># Test PVC</span></span><br><span class="line">kind: PersistentVolumeClaim</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  name: myserver-myapp-dynamic-pvc</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  storageClassName: managed-nfs-storage <span class="comment">#调用的storageclass 名称</span></span><br><span class="line">  accessModes:</span><br><span class="line">    - ReadWriteMany <span class="comment">#访问权限</span></span><br><span class="line">  resources:</span><br><span class="line">    requests:</span><br><span class="line">      storage: 500Mi <span class="comment">#空间大小</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f create-pvc.yaml</span></span><br></pre></td></tr></table></figure><h3 id="创建web服务"><a href="#创建web服务" class="headerlink" title="创建web服务"></a>创建web服务</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim myapp-webserver.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat myapp-webserver.yaml</span></span><br><span class="line">kind: Deployment</span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: myserver-myapp </span><br><span class="line">  name: myserver-myapp-deployment-name</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: myserver-myapp-frontend</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: myserver-myapp-frontend</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">        - name: myserver-myapp-container</span><br><span class="line">          image: nginx:1.18.0 </span><br><span class="line">          <span class="comment">#imagePullPolicy: Always</span></span><br><span class="line">          volumeMounts:</span><br><span class="line">          - mountPath: <span class="string">&quot;/usr/share/nginx/html/statics&quot;</span></span><br><span class="line">            name: statics-datadir</span><br><span class="line">      volumes:</span><br><span class="line">        - name: statics-datadir</span><br><span class="line">          persistentVolumeClaim:</span><br><span class="line">            <span class="comment"># 指定pvc的名称</span></span><br><span class="line">            claimName: myserver-myapp-dynamic-pvc </span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">kind: Service</span><br><span class="line">apiVersion: v1</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: myserver-myapp-service</span><br><span class="line">  name: myserver-myapp-service-name</span><br><span class="line">  namespace: myserver</span><br><span class="line">spec:</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30080</span><br><span class="line">  selector:</span><br><span class="line">    app: myserver-myapp-frontend</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f myapp-webserver.yaml</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证nfs存储服务器</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># ll /data/volumes/</span></span><br><span class="line">total 0</span><br><span class="line">drwxrwxrwx 2 root root 6 Jul 4 15:10 myserver-myserver-myapp-dynamic-pvc-pvc-1a191937-4142-4ed1-a932-e716508d58ed</span><br><span class="line"><span class="comment"># 进入pod创建文件</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl exec -it -n myserver myserver-myapp-deployment-name-7f65b7cd78-</span></span><br><span class="line">kubectl <span class="built_in">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl <span class="built_in">exec</span> [POD] -- [COMMAN</span><br><span class="line">root@myserver-myapp-deployment-name-7f65b7cd78-wmjc2:/<span class="comment"># df -h</span></span><br><span class="line">Filesystem                                                                                           Size  Used Avail Use% Mounted on</span><br><span class="line">overlay                                                                                               98G  9.1G   84G  10% /</span><br><span class="line">tmpfs                                                                                                 64M     0   64M   0% /dev</span><br><span class="line">tmpfs                                                                                                3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">shm                                                                                                   64M     0   64M   0% /dev/shm</span><br><span class="line">/dev/mapper/vg0-lv--root                                                                              98G  9.1G   84G  10% /etc/hosts</span><br><span class="line">tmpfs                                                                                                7.5G   12K  7.5G   1% /run/secrets/kubernetes.io/serviceaccount</span><br><span class="line">10.0.0.7:/data/volumes/myserver-myserver-myapp-dynamic-pvc-pvc-1a191937-4142-4ed1-a932-e716508d58ed   99G  2.1G   97G   3% /usr/share/nginx/html/statics</span><br><span class="line">tmpfs                                                                                                3.9G     0  3.9G   0% /proc/acpi</span><br><span class="line">tmpfs                                                                                                3.9G     0  3.9G   0% /proc/scsi</span><br><span class="line">tmpfs                                                                                                3.9G     0  3.9G   0% /sys/firmware</span><br><span class="line">root@myserver-myapp-deployment-name-7f65b7cd78-wmjc2:/<span class="comment"># cd /usr/share/nginx/html/statics/</span></span><br><span class="line">root@myserver-myapp-deployment-name-7f65b7cd78-wmjc2:/usr/share/nginx/html/statics<span class="comment"># echo &quot;Hello World&quot; &gt; index.html</span></span><br></pre></td></tr></table></figure><p><img src="/images/pv-pvc5.png"></p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-Volume存储卷</title>
      <link href="/post/7a40cc04.html"/>
      <url>/post/7a40cc04.html</url>
      
        <content type="html"><![CDATA[<h1 id="Volume-存储卷"><a href="#Volume-存储卷" class="headerlink" title="Volume-存储卷"></a>Volume-存储卷</h1><ul><li>Volume将容器中的指定的数据和容器解耦，并将数据存储到指定的位置，不同的存储卷功能不一样，如果是基于网络存储的存储卷可以实现容器间的数据共享和持久化；</li><li>静态存储卷需要在使用前手动创建PV和PVC，然后绑定至pod使用；</li><li>常用的几种卷：<ul><li>emptyDir：本地临时卷</li><li>hostPath：本地存储卷</li><li>configmap：配置文件</li><li>Secret：是一种包含少量敏感信息，例如密码、令牌或秘钥的对象</li><li>nfs等网络存储卷</li></ul></li></ul><p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/storage/volumes/">https://kubernetes.io/zh-cn/docs/concepts/storage/volumes/</a></p><p><img src="/images/Volume%E5%AD%98%E5%82%A8%E5%8D%B7.png"></p><h2 id="emptyDir"><a href="#emptyDir" class="headerlink" title="emptyDir"></a>emptyDir</h2><p>emptyDir：本地临时卷，pod删除卷的话也会跟着删除，通常用于两个pod之间的日志共享</p><ul><li>当pod被分配给节点时，首先创建emptyDir卷，并且只要该pod在该节点上运行，该卷就会存在，正如卷的名字所述，它最初是空的，pod中的容器可以读取和写入emptyDir卷中的相同文件，尽管该卷可以挂载到每个容器中的相同或不同的路径，当出于任何原因从节点中删除pod时，emptyDir中的数据将被永久删除。</li><li>&#x2F;var&#x2F;lib&#x2F;kubelet&#x2F;pods&#x2F;$ID&#x2F;volumes&#x2F;kubernetes.io~emptydir&#x2F;cache-volume&#x2F;$FILE</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim deploy_emptyDir.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat deploy_emptyDir.yaml</span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels: <span class="comment">#rs or deployment</span></span><br><span class="line">      app: ng-deploy-80</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-80</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-80</span><br><span class="line">        image: nginx:1.18.0</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">        <span class="comment">#在容器中挂载指定的volumes</span></span><br><span class="line">        - mountPath: /cache</span><br><span class="line">          name: cache-volume</span><br><span class="line">      volumes:</span><br><span class="line">      <span class="comment">#定义volumes名称</span></span><br><span class="line">      - name: cache-volume</span><br><span class="line">      <span class="comment">#定义volumes类型</span></span><br><span class="line">        emptyDir: &#123;&#125;</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f deploy_emptyDir.yaml </span></span><br><span class="line">deployment.apps/nginx-deployment created</span><br><span class="line"><span class="comment"># 挂载完成查看pod所调度到哪个节点上</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl get pods -o wide</span></span><br><span class="line">NAME                                READY   STATUS    RESTARTS      AGE    IP               NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">nginx-deployment-5684b7b6b9-2wvcq   1/1     Running   0             22s    10.200.107.132   10.0.0.108   &lt;none&gt;           &lt;none&gt;</span><br><span class="line"><span class="comment"># 查看上面已经将pod调度到10.0.0.108节点上，可以到该节点查看是否已经存在cache-volume这个卷</span></span><br><span class="line">root@k8s-node2:~<span class="comment"># find /data/kubelet/ -name &#x27;cache-volume&#x27;</span></span><br><span class="line">/data/kubelet/pods/c341a61f-bfce-40b9-81b4-d2adf551af71/volumes/kubernetes.io~empty-dir/cache-volume</span><br><span class="line">/data/kubelet/pods/c341a61f-bfce-40b9-81b4-d2adf551af71/plugins/kubernetes.io~empty-dir/cache-volume</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在上面创建的pod里面的/cache 目录下面创建文件或者文件夹，然后在到10.0.0.108节点上查看是否创建成功</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl exec -it nginx-deployment-5684b7b6b9-2wvcq bash</span></span><br><span class="line">kubectl <span class="built_in">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl <span class="built_in">exec</span> [POD] -- [COMMAND] instead.</span><br><span class="line">root@nginx-deployment-5684b7b6b9-2wvcq:/<span class="comment"># cd cache/</span></span><br><span class="line">root@nginx-deployment-5684b7b6b9-2wvcq:/cache<span class="comment"># mkdir zhang</span></span><br><span class="line">root@nginx-deployment-5684b7b6b9-2wvcq:/cache<span class="comment"># ls</span></span><br><span class="line">zhang</span><br><span class="line"></span><br><span class="line"><span class="comment"># 回到108节点查看是否已经创建了zhang的文件夹</span></span><br><span class="line">root@k8s-node2:~<span class="comment"># ll /data/kubelet/pods/c341a61f-bfce-40b9-81b4-d2adf551af71/volumes/kubernetes.io~empty-dir/cache-volume</span></span><br><span class="line">total 12</span><br><span class="line">drwxrwxrwx 3 root root 4096 Jul  3 15:51 ./</span><br><span class="line">drwxr-xr-x 3 root root 4096 Jul  3 15:50 ../</span><br><span class="line">drwxr-xr-x 2 root root 4096 Jul  3 15:51 zhang/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一旦将pod删除的话，宿主机上的目录也会将跟着删除</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl delete -f deploy_emptyDir.yaml</span></span><br><span class="line">deployment.apps <span class="string">&quot;nginx-deployment&quot;</span> deleted</span><br><span class="line">root@k8s-node2:~<span class="comment"># find /data/kubelet/ -name &#x27;cache-volume&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="hostPath"><a href="#hostPath" class="headerlink" title="hostPath"></a>hostPath</h2><p>hostPath 卷将主机节点的文件系统中文件或目录挂载到集群中，pod删除的时候，卷不会被删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim deploy_hostPath.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat deploy_hostPath.yaml</span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ng-deploy-80</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-80</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-80</span><br><span class="line">        image: nginx</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - mountPath: /cache</span><br><span class="line">          name: cache-volume</span><br><span class="line">      volumes:</span><br><span class="line">      - name: cache-volume</span><br><span class="line">        hostPath:</span><br><span class="line">          path: /tmp/zhangg</span><br></pre></td></tr></table></figure><h2 id="nfs等共享存储（常用v3版本，v4可能会有问题）"><a href="#nfs等共享存储（常用v3版本，v4可能会有问题）" class="headerlink" title="nfs等共享存储（常用v3版本，v4可能会有问题）"></a>nfs等共享存储（常用v3版本，v4可能会有问题）</h2><p>nfs卷允许将现有的NFS（网络文件系统）共享挂载到你的容器中，不像emptyDir，当删除Pod时，nfs卷的内容被保留，卷仅仅是被卸载了，这意味着NFS卷可以预填充数据，并且可以在pod之间“切换”数据。而且NFS是可以被多个写入者同时挂载的。</p><p>找一台主机从当nfs服务器</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos7 ~]<span class="comment"># yum install -y nfs-utils rpcbind</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># systemctl start nfs-utils</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># systemctl status nfs-utils</span></span><br><span class="line">● nfs-utils.service - NFS server and client services</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/nfs-utils.service; static; vendor preset: disabled)</span><br><span class="line">   Active: active (exited) since Sat 2022-07-03 16:20:58 CST; 6s ago</span><br><span class="line">  Process: 1393 ExecStart=/bin/true (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 1393 (code=exited, status=0/SUCCESS)</span><br><span class="line"></span><br><span class="line">Jul 03 16:20:58 Centos7.stars.org systemd[1]: Starting NFS server and client services...</span><br><span class="line">Jul 03 16:20:58 Centos7.stars.org systemd[1]: Started NFS server and client services.</span><br><span class="line">[root@Centos7 ~]<span class="comment"># vim /etc/exports</span></span><br><span class="line"><span class="comment"># 注意，这里用*只是测试，生产环境需要填写服务器的网段，如172.16.0.0/16,不能写pod网段,要写宿主机网段</span></span><br><span class="line">/data/k8s_data *(rw,no_root_squash)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查配置文件是否有错</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># exportfs -r</span></span><br></pre></td></tr></table></figure><p>客户端上测试挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># showmount -e 10.0.0.7</span></span><br><span class="line">Export list <span class="keyword">for</span> 10.0.0.7:</span><br><span class="line">/data/k8sdata *</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># mount -t nfs 10.0.0.7:/data/k8sdata /apps</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># df -h</span></span><br><span class="line">Filesystem                Size  Used Avail Use% Mounted on</span><br><span class="line">udev                      3.9G     0  3.9G   0% /dev</span><br><span class="line">tmpfs                     792M  1.8M  790M   1% /run</span><br><span class="line">/dev/mapper/vg0-lv--root   98G   15G   78G  17% /</span><br><span class="line">tmpfs                     3.9G     0  3.9G   0% /dev/shm</span><br><span class="line">tmpfs                     5.0M     0  5.0M   0% /run/lock</span><br><span class="line">tmpfs                     3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/sda2                 974M  304M  604M  34% /boot</span><br><span class="line">/dev/loop2                 64M   64M     0 100% /snap/core20/2015</span><br><span class="line">/dev/loop1                 68M   68M     0 100% /snap/lxd/22753</span><br><span class="line">/dev/loop0                 64M   64M     0 100% /snap/core20/1623</span><br><span class="line">/dev/loop3                 92M   92M     0 100% /snap/lxd/24061</span><br><span class="line">/dev/loop4                 41M   41M     0 100% /snap/snapd/20290</span><br><span class="line">overlay                    98G   15G   78G  17% /var/lib/docker/overlay2/75848c5a03043f679b04ac42e944cc2567f4edc42e649e91c9403a2087d5f9ee/merged</span><br><span class="line">tmpfs                     7.5G   12K  7.5G   1% /data/kubelet/pods/22ed4275-a8e9-4897-a322-d8c513eda962/volumes/kubernetes.io~secret/etcd-certs</span><br><span class="line">tmpfs                     7.5G   12K  7.5G   1% /data/kubelet/pods/22ed4275-a8e9-4897-a322-d8c513eda962/volumes/kubernetes.io~projected/kube-api-access-mxdtg</span><br><span class="line">shm                        64M     0   64M   0% /run/containerd/io.containerd.grpc.v1.cri/sandboxes/2ddd2719b251c2ba02c3cebcc05fcdba8ef256f9f7026fc1708b324c8f2929a0/shm</span><br><span class="line">overlay                    98G   15G   78G  17% /run/containerd/io.containerd.runtime.v2.task/k8s.io/2ddd2719b251c2ba02c3cebcc05fcdba8ef256f9f7026fc1708b324c8f2929a0/rootfs</span><br><span class="line">overlay                    98G   15G   78G  17% /run/containerd/io.containerd.runtime.v2.task/k8s.io/7dd203edff9a7b4a3ea131158b36306c3efe0427ce600016030a37e9bd9efbe0/rootfs</span><br><span class="line">tmpfs                     792M     0  792M   0% /run/user/0</span><br><span class="line">10.0.0.7:/data/k8sdata     99G  2.1G   97G   3% /apps</span><br></pre></td></tr></table></figure><h3 id="创建多个pod测试挂载同一个NFS"><a href="#创建多个pod测试挂载同一个NFS" class="headerlink" title="创建多个pod测试挂载同一个NFS"></a>创建多个pod测试挂载同一个NFS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim deploy_nfs.yaml </span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat deploy_nfs.yaml </span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ng-deploy-80</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-80</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-80</span><br><span class="line">        image: nginx:1.18.0</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">        <span class="comment">#挂载到容器的这个目录</span></span><br><span class="line">        - mountPath: /usr/share/nginx/html/mysite</span><br><span class="line">        <span class="comment">#调用哪个volumes名称</span></span><br><span class="line">          name: my-nfs-volume</span><br><span class="line">      volumes:</span><br><span class="line">      - name: my-nfs-volume</span><br><span class="line">        nfs:</span><br><span class="line">        <span class="comment">#nfs服务端ip</span></span><br><span class="line">          server: 10.0.0.7</span><br><span class="line">        <span class="comment">#nfs挂载点</span></span><br><span class="line">          path: /data/k8sdata/zhangg</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: ng-deploy-80</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 81</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30016</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: ng-deploy-80</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f deploy_nfs.yaml</span></span><br></pre></td></tr></table></figure><p>进入创建的pod查看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># kubectl exec -it nginx-deployment-7cb755d988-xdh5c bash</span></span><br><span class="line">kubectl <span class="built_in">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl <span class="built_in">exec</span> [POD] -- [COMMAND] instead.</span><br><span class="line">root@nginx-deployment-7cb755d988-xdh5c:/<span class="comment"># cd /usr/share/nginx/html/mysite/</span></span><br><span class="line">root@nginx-deployment-7cb755d988-xdh5c:/usr/share/nginx/html/mysite<span class="comment"># ls</span></span><br><span class="line">root@nginx-deployment-7cb755d988-xdh5c:/usr/share/nginx/html/mysite<span class="comment"># mkdir hello</span></span><br><span class="line">root@nginx-deployment-7cb755d988-xdh5c:/usr/share/nginx/html/mysite<span class="comment"># df -h</span></span><br><span class="line">Filesystem                     Size  Used Avail Use% Mounted on</span><br><span class="line">overlay                         98G  9.0G   84G  10% /</span><br><span class="line">tmpfs                           64M     0   64M   0% /dev</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">shm                             64M     0   64M   0% /dev/shm</span><br><span class="line">/dev/mapper/vg0-lv--root        98G  9.0G   84G  10% /etc/hosts</span><br><span class="line">tmpfs                          7.5G   12K  7.5G   1% /run/secrets/kubernetes.io/serviceaccount</span><br><span class="line">10.0.0.7:/data/k8sdata/zhangg   99G  2.1G   97G   3% /usr/share/nginx/html/mysite</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /proc/acpi</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /proc/scsi</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /sys/firmware</span><br><span class="line">root@nginx-deployment-7cb755d988-xdh5c:/usr/share/nginx/html/mysite<span class="comment"># ls</span></span><br><span class="line">aa  hello</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在NFS服务端验证是否有数据</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># ll /data/k8sdata/zhangg/</span></span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x 2 root root 6 Jul  3 16:35 aa</span><br><span class="line">drwxr-xr-x 2 root root 6 Jul  3 16:35 hello</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 上传一个图片到nginx站点目录中看看是否可以正常访问</span></span><br><span class="line">[root@Centos7 ~]<span class="comment"># ls /data/k8sdata/zhangg/</span></span><br><span class="line">aa  hello  landscape.jpg</span><br></pre></td></tr></table></figure><p><img src="/images/landscape.png"></p><p>挂载的流程：</p><p>首先会在宿主机挂载的目录找到nfs服务器，然后通过联合文件挂载系统，将目录映射到容器的目录使用，容器内没有内核，不识别nfs驱动。</p><h3 id="创建多个pod测试每个pod挂载多个NFS"><a href="#创建多个pod测试每个pod挂载多个NFS" class="headerlink" title="创建多个pod测试每个pod挂载多个NFS"></a>创建多个pod测试每个pod挂载多个NFS</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># vim deploy_nfs1.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># cat deploy_nfs1.yaml</span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment-zhang</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ng-deploy-81</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-81</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-81</span><br><span class="line">        image: nginx:1.18.0 </span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">        volumeMounts:</span><br><span class="line">        <span class="comment">#挂载到容器的这个目录</span></span><br><span class="line">        - mountPath: /usr/share/nginx/html/mysite</span><br><span class="line">        <span class="comment">#调用哪个volumes名称</span></span><br><span class="line">          name: my-nfs-volume</span><br><span class="line">        <span class="comment">#挂载到容器的这个目录</span></span><br><span class="line">        - mountPath: /usr/share/nginx/html/zhang</span><br><span class="line">        <span class="comment">#调用哪个volumes名称</span></span><br><span class="line">          name: zhang-statics-volume</span><br><span class="line">      volumes:</span><br><span class="line">      - name: my-nfs-volume</span><br><span class="line">        nfs:</span><br><span class="line">        <span class="comment">#nfs服务端ip</span></span><br><span class="line">          server: 10.0.0.7</span><br><span class="line">        <span class="comment">#nfs挂载点</span></span><br><span class="line">          path: /data/k8sdata/zhangg</span><br><span class="line">      - name: zhang-statics-volume</span><br><span class="line">        nfs:</span><br><span class="line">        <span class="comment">#nfs服务端ip</span></span><br><span class="line">          server: 10.0.0.7</span><br><span class="line">        <span class="comment">#nfs挂载点</span></span><br><span class="line">          path: /data/zhang_test</span><br><span class="line"></span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: ng-deploy-81</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30017</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: ng-deploy-81</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/Volume<span class="comment"># kubectl apply -f deploy_nfs1.yaml</span></span><br></pre></td></tr></table></figure><p>在进入到刚刚创建的pod中检查是否挂载</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># kubectl exec -it nginx-deployment-zhang-66db894d46-9kzsr bash</span></span><br><span class="line">kubectl <span class="built_in">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl <span class="built_in">exec</span> [POD] -- [COMMAND] instead.</span><br><span class="line">root@nginx-deployment-zhang-66db894d46-9kzsr:/<span class="comment"># ls /usr/share/nginx/html/</span></span><br><span class="line">50x.html  index.html  mysite  zhang</span><br><span class="line">root@nginx-deployment-zhang-66db894d46-9kzsr:/<span class="comment"># df -h</span></span><br><span class="line">Filesystem                     Size  Used Avail Use% Mounted on</span><br><span class="line">overlay                         98G  8.9G   84G  10% /</span><br><span class="line">tmpfs                           64M     0   64M   0% /dev</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /sys/fs/cgroup</span><br><span class="line">/dev/mapper/vg0-lv--root        98G  8.9G   84G  10% /etc/hosts</span><br><span class="line">shm                             64M     0   64M   0% /dev/shm</span><br><span class="line">tmpfs                          7.5G   12K  7.5G   1% /run/secrets/kubernetes.io/serviceaccount</span><br><span class="line">10.0.0.7:/data/k8sdata/zhangg   99G  2.1G   97G   3% /usr/share/nginx/html/mysite</span><br><span class="line">10.0.0.7:/data/zhang_test       99G  2.1G   97G   3% /usr/share/nginx/html/zhang</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /proc/acpi</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /proc/scsi</span><br><span class="line">tmpfs                          3.9G     0  3.9G   0% /sys/firmware</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-Service</title>
      <link href="/post/52236257.html"/>
      <url>/post/52236257.html</url>
      
        <content type="html"><![CDATA[<h1 id="Service-简介"><a href="#Service-简介" class="headerlink" title="Service 简介"></a>Service 简介</h1><p>由于pod重建后ip就变了，因此pod之间使用的pod的IP直接访问会出现无法访问的问题，而service则解耦了服务和应用，service的实现方式就是通过label标签动态匹配都断endpoint。</p><p>kube-proxy监听着k8s-apiserver，一旦service资源发生变化（调用k8s-api修改service信息），kube-proxy就会生成对应的负载调度的调整，资源就保证service的最新状态。</p><p><img src="/images/k8s-service.png"></p><p>kube-proxy有三种调度模型，userspace(在k8s版本1.1之前)、iptables(在k8s版本1.2-1.11之前)、ipvs(在k8s版本1.11之后，如果没有开启ipvs，则会自动降级为iptables)</p><p><strong>service 类型</strong></p><ul><li>ClusterIP：用于内部服务基于service name的访问；</li><li>NodePort：用于kubernetes集群以外的服务主动访问运行在kubernetes集群内部的服务；</li><li>LoadBalancer：用于公有云环境的服务暴露；</li><li>ExternalName：用于将k8s集群外部的服务映射至k8s集群内部访问，从而让集群内部的pod能够通过固定的service name访问集群外部的服务，有时候也用于将不同namespace之间的pod通过ExternalName进行访问。</li></ul><p><strong>ClusterIP：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># vim deploy_node.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># cat deploy_node.yaml</span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    <span class="comment">#matchLabels: #rs or deployment</span></span><br><span class="line">    <span class="comment">#  app: ng-deploy3-80</span></span><br><span class="line">    matchExpressions:</span><br><span class="line">      - &#123;key: app, operator: In, values: [ng-deploy-80,ng-rs-81]&#125;</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-80</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-80</span><br><span class="line">        image: nginx:1.18.0</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br><span class="line">      <span class="comment">#nodeSelector:</span></span><br><span class="line">      <span class="comment">#  env: group1</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># vim svc_service.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># cat svc_service.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: ng-deploy-80 </span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 80</span><br><span class="line">    targetPort: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: ClusterIP</span><br><span class="line"><span class="comment"># 这里的 selector 对应 deployment 的 template metadata 下的 labels 通过这个标签选择器找到指定的deployment控制器</span></span><br><span class="line">  selector:</span><br><span class="line">    app: ng-deploy-80</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># kubectl apply -f deploy_node.yaml</span></span><br><span class="line">deployment.apps/nginx-deployment created</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># kubectl apply -f svc_service.yaml </span></span><br><span class="line">service/ng-deploy-80 created</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># kubectl get svc</span></span><br><span class="line">NAME           TYPE        CLUSTER-IP      EXTERNAL-IP   PORT(S)   AGE</span><br><span class="line">kubernetes     ClusterIP   10.100.0.1      &lt;none&gt;        443/TCP   2d1h</span><br><span class="line">ng-deploy-80   ClusterIP   10.100.213.71   &lt;none&gt;        80/TCP    59s</span><br><span class="line"><span class="comment"># 查看svc对应的后端pod</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># kubectl get ep</span></span><br><span class="line">NAME           ENDPOINTS                                         AGE</span><br><span class="line">kubernetes     10.0.0.100:6443,10.0.0.101:6443,10.0.0.102:6443   2d1h</span><br><span class="line">ng-deploy-80   10.200.107.131:80                                 67s</span><br></pre></td></tr></table></figure><p><strong>NodePort：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># vim svc_NodePort.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># cat svc_NodePort.yaml</span></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: ng-deploy-80 </span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - name: http</span><br><span class="line">    port: 81</span><br><span class="line">    targetPort: 80</span><br><span class="line">    nodePort: 30012</span><br><span class="line">    protocol: TCP</span><br><span class="line">  <span class="built_in">type</span>: NodePort</span><br><span class="line">  selector:</span><br><span class="line">    app: ng-deploy-80</span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/service<span class="comment"># kubectl apply -f svc_NodePort.yaml</span></span><br><span class="line"><span class="comment"># 这时候就可以直接看调度到能够node节点上，直接访问nodeIP+30012就可以访问网站了</span></span><br><span class="line"><span class="comment"># 这时想要加上一个负载均衡的话，例如haproxy：</span></span><br><span class="line">listen  nginx-zhangg-80</span><br><span class="line">    <span class="built_in">bind</span> 10.0.0.210:80</span><br><span class="line">    mode tcp</span><br><span class="line">    server 10.0.0.107 10.0.0.107:30012 check inter 3s fall 3 rise 5</span><br><span class="line">    server 10.0.0.108 10.0.0.108:30012 check inter 3s fall 3 rise 5</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-Deployment</title>
      <link href="/post/fc507958.html"/>
      <url>/post/fc507958.html</url>
      
        <content type="html"><![CDATA[<h1 id="Deployment-副本控制器"><a href="#Deployment-副本控制器" class="headerlink" title="Deployment 副本控制器"></a>Deployment 副本控制器</h1><p>Deployment：这个副本控制器又比rs更高一级的控制器，除了有rs的功能之外，还有更多的高级功能，例如最重要的滚动升级、回滚等等。 # 第三代pod控制器</p><p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/">https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/deployment/</a></p><p><img src="/images/deployment.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/controller<span class="comment"># vim deployment.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/controller<span class="comment"># cat deployment.yaml</span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: nginx-deployment</span><br><span class="line">spec:</span><br><span class="line">  replicas: 3</span><br><span class="line">  selector:</span><br><span class="line">    <span class="comment">#app: ng-deploy-80 #rc</span></span><br><span class="line">    matchLabels: <span class="comment">#rs or deployment</span></span><br><span class="line">      app: ng-deploy-80</span><br><span class="line">    </span><br><span class="line">    <span class="comment">#matchExpressions:</span></span><br><span class="line">    <span class="comment">#  - &#123;key: app, operator: In, values: [ng-deploy-80,ng-rs-81]&#125;</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-deploy-80</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - name: ng-deploy-80</span><br><span class="line">        image: nginx:1.18.0</span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 回滚</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/controller<span class="comment"># kubectl rollout undo deployment nginx-deployment</span></span><br><span class="line">deployment.apps/nginx-deployment rolled back</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes资源对象-RC/RS</title>
      <link href="/post/aefaf8c.html"/>
      <url>/post/aefaf8c.html</url>
      
        <content type="html"><![CDATA[<h1 id="RC-RS-副本控制器"><a href="#RC-RS-副本控制器" class="headerlink" title="RC&#x2F;RS 副本控制器"></a>RC&#x2F;RS 副本控制器</h1><p>Replication Controller：副本控制器(selector &#x3D; !&#x3D;) # 第一代pod副本控制器</p><p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/replicationcontroller/">https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/replicationcontroller/</a></p><p>标签和选择算符：<a href="https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/">https://kubernetes.io/zh-cn/docs/concepts/overview/working-with-objects/labels/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/controller<span class="comment"># vim rc.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/controller<span class="comment"># cat rc.yaml</span></span><br><span class="line">apiVersion: v1  </span><br><span class="line">kind: ReplicationController  </span><br><span class="line">metadata:  </span><br><span class="line">  name: ng-rc</span><br><span class="line">spec:  </span><br><span class="line">  replicas: 2</span><br><span class="line">  selector:  </span><br><span class="line">    app: ng-rc-80 </span><br><span class="line">    <span class="comment">#app1: ng-rc-81</span></span><br><span class="line">  template:   </span><br><span class="line">    metadata:  </span><br><span class="line">      labels:  </span><br><span class="line">        app: ng-rc-80</span><br><span class="line">        <span class="comment">#app1: ng-rc-81</span></span><br><span class="line">    spec:  </span><br><span class="line">      containers:  </span><br><span class="line">      - name: ng-rc-80 </span><br><span class="line">        image: nginx:1.18.0 </span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure><p>ReplicaSet：副本控制器，和第一代副本控制器的区别就是这个支持matchlabels，还可以支持labels In 和 labels NotIn;# 第二代pod副本控制器</p><p>官方文档：<a href="https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/replicaset/">https://kubernetes.io/zh-cn/docs/concepts/workloads/controllers/replicaset/</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/controller<span class="comment"># vim rs.yaml</span></span><br><span class="line">root@k8s-master1:/opt/zhangg-k8s-yaml/controller<span class="comment"># cat rs.yaml</span></span><br><span class="line"><span class="comment">#apiVersion: extensions/v1beta1</span></span><br><span class="line">apiVersion: apps/v1 </span><br><span class="line">kind: ReplicaSet</span><br><span class="line">metadata:</span><br><span class="line">  name: frontend</span><br><span class="line">spec:</span><br><span class="line">  replicas: 2</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: ng-rs-80</span><br><span class="line">    <span class="comment">#matchExpressions:</span></span><br><span class="line">    <span class="comment">#  - &#123;key: app, operator: In, values: [ng-rs-80,ng-rs-81]&#125;</span></span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: ng-rs-80</span><br><span class="line">    spec:  </span><br><span class="line">      containers:  </span><br><span class="line">      - name: ng-rs-80 </span><br><span class="line">        image: nginx:1.18.0 </span><br><span class="line">        ports:  </span><br><span class="line">        - containerPort: 80</span><br></pre></td></tr></table></figure><p><img src="/images/RC-RS.png"></p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes网络插件Flannel/Calico对比</title>
      <link href="/post/9ab01199.html"/>
      <url>/post/9ab01199.html</url>
      
        <content type="html"><![CDATA[<p>在k8s的网络架构中是较为复杂的，这样的架构会让很多的用户头疼，要提起Kubernetes网络架构需要从CNI说起。CNI(Container NetworkInterface)意为容器网络接口，它是一种标准的设计，为了让用户在容器创建或销毁时都能够更容易地配置容器网络。由Google和CoreOS联合定制的网络标准，是Kubernetes网络插件的基础。基于CNI标准，有如下常见的CNI网络插件产品。</p><p><img src="/images/k8s-cni.png"></p><p>现在我们用的还是主要是Flannel和Calico。这些插件既可以确保满足Kubernetes的网络要求，又能为Kubernetes集群管理员提供他们所需的某些特定的网络功能。本文讲通过Kubernetes集群中不同网络环境下，通过Pod之间流量分析来比较Flannel和Calico处理网络流量的不同之处。</p><h1 id="Flannel网络插件介绍"><a href="#Flannel网络插件介绍" class="headerlink" title="Flannel网络插件介绍"></a>Flannel网络插件介绍</h1><p>Flannel是由CoreOS开发出来的，可能算是最直接和最受欢迎的CNI插件；它是容器编排系统中最成熟的网络结果示例之一，旨在实现更好的容器和主机间的网络；许多常见的Kubernetes集群部署工具和许多Kubernetes发行版都可以默认安装Flannel；Flannel可以使用Kubernetes集群的现有etcd集群来使用API存储其状态信息，因此不需要专用的数据存储。</p><p>Flannel配置第3层IPv4 Overlay网络。它会创建一个大型内部网络，跨越集群中每个节点。在此Overlay网络中，每个节点都有一个子网，用于在内部分配IP地址。在配置Pod时，每个节点上的网桥接口都会为每个新容器分配一个地址。同一主机中的Pod可以使用网桥进行通信，而不同主机上的Pod会使用flanneld将其流量封装在UDP数据包中，以便路由到适当的目标。</p><p>Flannel有几种不同类型的后端可用于封装和路由。默认和推荐的方法是使用VXLAN，因为VXLAN性能更良好并且需要的手动干预更少。</p><h2 id="Flannel的几种模式"><a href="#Flannel的几种模式" class="headerlink" title="Flannel的几种模式"></a>Flannel的几种模式</h2><p>Flannel通过在每一个节点上启动一个叫flannel的进程，负责为每一个节点上的子网划分，并将相关配置信息（如各节点的子网网段、外部IP等）保存到etcd中，而具体的网络报文转发交给backend实现。</p><p>flanneld可以在启动时通过配置文件指定不同的backend进行网络通信，目前比较成熟的backend有UDP、VXLAN和host-gateway三种。目前，VXLAN是官方比较推崇的一种backend实现方式。</p><p>UDP模式和VXLAN模式基于三层网络层即可实现，而host-gateway模式就必须要求集群所有机器在同一个广播域，也就是需要在二层网络同一个交换机下才能实现。</p><p>host-gateway一般用于对网络性能要求比较高的场景，但需要基础网络架构的支持；UDP则用于测试及一般比较老的不支持VXLAN的Linux内核。</p><h2 id="Flannel网络环境中实验过程"><a href="#Flannel网络环境中实验过程" class="headerlink" title="Flannel网络环境中实验过程"></a>Flannel网络环境中实验过程</h2><p>在测试环境中，使用Flannel默认的VxLAN模式worknode节点信息及部署的pod：</p><p><img src="/images/net-Flannel1.png"></p><p>登陆节点xworker1，查看veth pair对及网桥配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span> show <span class="built_in">type</span> veth</span><br></pre></td></tr></table></figure><p><img src="/images/net-Flannel2.png"></p><p>Flannel网络插件自动维护Pod CIDR的路由信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route</span><br></pre></td></tr></table></figure><p><img src="/images/net-Flannel3.png"></p><p>xworker1 节点路由信息显示目的地址为10.244.0.0&#x2F;24和10.244.2.0&#x2F;24的请求流量要通过 flannel.1路由到xworker1上的eth1网络接口。</p><p>通过kubectl 命令查看部署在flannel网络中的Pod IP。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -o wide</span><br></pre></td></tr></table></figure><p><img src="/images/net-Flannel4.png"></p><p>查看部署到kubernetes集群的测试服务, xworker2节点上Pod IP为10.244.2.2,xworker1节点上Pod IP为10.244.1.2。</p><p>接着尝试在节点xworker2上访问节点xworker1上的服务，并用tshark工具捕捉网络请求。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.244.1.2:9376</span><br></pre></td></tr></table></figure><p><img src="/images/net-Flannel5.png"></p><p>可以看到网络请求最终通过flannel.1到达了POD的目的地址10.244.1.2并最终返回。</p><p><img src="/images/net-Flannel6.png"></p><p>通过xworker1节点上的网络抓包，可以看到Flannel使用默认的VxLan协议封装。</p><p><img src="/images/net-Flannel7.png"></p><h1 id="Calico网络插件介绍"><a href="#Calico网络插件介绍" class="headerlink" title="Calico网络插件介绍"></a>Calico网络插件介绍</h1><p>Calico是Kubernetes生态系统中另一种流行的网络选择。虽然Flannel被公认为是最简单的选择，但Calico以其性能、灵活性而闻名。Calico的功能更为全面，不仅提供主机和pod之间的网络连接，还涉及网络安全和管理。Calico CNI插件在CNI框架内封装了Calico的功能。</p><p>除了网络连接外，Calico还以其先进的网络功能而闻名。网络策略是其最受追捧的功能之一。此外，Calico还可以与服务网格Istio集成，以便在服务网格层和网络基础架构层中解释和实施集群内工作负载的策略。这意味着用户可以配置强大的规则，描述pod应如何发送和接受流量，提高安全性并控制网络环境。如果对你的环境而言，支持网络策略是非常重要的一点，而且你对其他性能和功能也有需求，那么Calico会是一个理想的选择。</p><p>尽管部署Calico所需的操作看起来相当简单，但它创建的网络环境同时具有简单和复杂的属性。与Flannel不同，Calico不使用overlay网络。相反，Calico配置第3层网络，该网络使用BGP路由协议在主机之间路由数据包。这意味着在主机之间移动时，不需要将数据包包装在额外的封装层中。BGP路由机制可以本地引导数据包，而无需额外在流量层中打包流量。</p><h2 id="Calico的几种模式"><a href="#Calico的几种模式" class="headerlink" title="Calico的几种模式"></a>Calico的几种模式</h2><p>IPIP模式：把 IP 层封装到IP 层的一个 tunnel。作用其实基本上就相当于一个基于IP层的网桥！一般来说，普通的网桥是基于mac层的，根本不需 IP，而这个ipip 则是通过两端的路由做一个 tunnel，把两个本来不通的网络通过点对点连接起来。</p><p>BGP 边界网关协议（Border Gateway Protocol， BGP）：是互联网上一个核心的去中心化自治路由协议。BGP不使用传统的内部网关协议（IGP）的指标。</p><p>Route Reflector 模式（RR）（路由反射）：Calico维护的网络在默认是（Node-to-Node Mesh）全互联模式，Calico集群中的节点之间都会相互建立连接，用于路由交换。但是随着集群规模的扩大，mesh模式将形成一个巨大服务网格，连接数成倍增加。这时就需要使用 Route Reflector（路由器反射）模式解决这个问题。</p><h2 id="Calico网络环境中实验过程"><a href="#Calico网络环境中实验过程" class="headerlink" title="Calico网络环境中实验过程"></a>Calico网络环境中实验过程</h2><p>在测试环境中，使用Calico默认的VxLan模式。workernode节点信息及部署的Pod示意如下：</p><p><img src="/images/net-Calico1.png"></p><p>在worker node节点上插卡veth对及IPIP tunnel配置信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip <span class="built_in">link</span> show <span class="built_in">type</span> veth</span><br></pre></td></tr></table></figure><p><img src="/images/net-Calico2.png"></p><p>Calico网络插件自动维护workernode节点路由表。对于非本机节点的Pod通过tunnel0进行转发。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ip route get 10.244.61.194</span><br></pre></td></tr></table></figure><p><img src="/images/net-Calico3.png"></p><p>通过kubectl 命令查看部署在Calico网络中的Pod IP。</p><p>查看部署到kubernetes集群的测试服务, xworker2节点上Pod IP为10.244.61.196, xworker1节点上Pod IP为10.244.174.197</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get pods -o wide</span><br></pre></td></tr></table></figure><p><img src="/images/net-Calico4.png"></p><p>尝试在节点xworker2上访问节点xworker1上的服务, 并用tshark工具捕捉网络请求。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl http://10.244.174.197:9376</span><br></pre></td></tr></table></figure><p><img src="/images/net-Calico5.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tshark -i eth1 -Y <span class="string">&quot;http&quot;</span></span><br></pre></td></tr></table></figure><p><img src="/images/net-Calico6.png"></p><p>可以看到网络请求最终通过tunnel0到达了POD的目的地址10.244.174.197并最终返回。</p><p>通过xworker1节点上的网络抓包，可以看到Calico使用默认的IPIP协议，没有使用Overylay网络。</p><p><img src="/images/net-Calico7.png"></p><p>Calico 提供管理工具,对网络中中的节点状态接节点配置进行管理，可以看到节点之间使用的是node-to-node的full mesh模式。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">calicoctl node status</span><br></pre></td></tr></table></figure><p><img src="/images/net-Calico8.png"></p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>kubernetes采用的CNI标准，让kubernetes生态系统中的网络解决方案百花齐放。也可以有更多的选择，这意味着大多数用户将能够找到适合当前需求和部署环境的CNI插件，同时还可以在环境发生变化时也能找到其他的解决方案。</p><p>Kubernetes网络模型本身对某些特定的网络功能有一定要求，但在实现方面也具有一定的灵活性。因此，业界已有不少不同的网络方案，来满足特定的环境和要求。不同企业之间的运营要求差异很大，因此拥有一系列具有不同复杂程度和功能丰富性的成熟解决方案，大大有助于Kubernetes在满足不同用户独特需求的前提下，仍然能够提供一致的用户体验。</p><p>这篇文章来自于我在51cto博客上写的一篇文章 <a href="https://blog.51cto.com/u_15105742/5630944">kubernetes(k8s)网络插件Flannel&#x2F;Calico对比介绍</a>。</p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-etcd-V3数据备份与恢复</title>
      <link href="/post/305a7887.html"/>
      <url>/post/305a7887.html</url>
      
        <content type="html"><![CDATA[<h1 id="单机版etcd备份数据与恢复"><a href="#单机版etcd备份数据与恢复" class="headerlink" title="单机版etcd备份数据与恢复"></a>单机版etcd备份数据与恢复</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 备份</span></span><br><span class="line">root@k8s-etcd:~<span class="comment"># ETCDCTL_API=3 etcdctl snapshot save snapshot.db</span></span><br><span class="line"><span class="comment"># 将备份的数据恢复到一个指定的目录</span></span><br><span class="line">root@k8s-etcd:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl snapshot restore snapshot.db --data-dir=/opt/etcd-testdir</span></span><br><span class="line">Deprecated: Use `etcdutl snapshot restore` instead.</span><br><span class="line"></span><br><span class="line">2022-06-29T12:21:24+08:00       info    snapshot/v3_snapshot.go:248     restoring snapshot      &#123;<span class="string">&quot;path&quot;</span>: <span class="string">&quot;snapshot.db&quot;</span>, <span class="string">&quot;wal-dir&quot;</span>: <span class="string">&quot;/opt/etcd-testdir/member/wal&quot;</span>, <span class="string">&quot;data-dir&quot;</span>: <span class="string">&quot;/opt/etcd-testdir&quot;</span>, <span class="string">&quot;snap-dir&quot;</span>: <span class="string">&quot;/opt/etcd-testdir/member/snap&quot;</span>, <span class="string">&quot;stack&quot;</span>: <span class="string">&quot;go.etcd.io/etcd/etcdutl/v3/snapshot.(*v3Manager).Restore\n\t/tmp/etcd-release-3.5.5/etcd/release/etcd/etcdutl/snapshot/v3_snapshot.go:254\ngo.etcd.io/etcd/etcdutl/v3/etcdutl.SnapshotRestoreCommandFunc\n\t/tmp/etcd-release-3.5.5/etcd/release/etcd/etcdutl/etcdutl/snapshot_command.go:147\ngo.etcd.io/etcd/etcdctl/v3/ctlv3/command.snapshotRestoreCommandFunc\n\t/tmp/etcd-release-3.5.5/etcd/release/etcd/etcdctl/ctlv3/command/snapshot_command.go:129\ngithub.com/spf13/cobra.(*Command).execute\n\t/usr/local/google/home/siarkowicz/.gvm/pkgsets/go1.16.15/global/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:856\ngithub.com/spf13/cobra.(*Command).ExecuteC\n\t/usr/local/google/home/siarkowicz/.gvm/pkgsets/go1.16.15/global/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:960\ngithub.com/spf13/cobra.(*Command).Execute\n\t/usr/local/google/home/siarkowicz/.gvm/pkgsets/go1.16.15/global/pkg/mod/github.com/spf13/cobra@v1.1.3/command.go:897\ngo.etcd.io/etcd/etcdctl/v3/ctlv3.Start\n\t/tmp/etcd-release-3.5.5/etcd/release/etcd/etcdctl/ctlv3/ctl.go:107\ngo.etcd.io/etcd/etcdctl/v3/ctlv3.MustStart\n\t/tmp/etcd-release-3.5.5/etcd/release/etcd/etcdctl/ctlv3/ctl.go:111\nmain.main\n\t/tmp/etcd-release-3.5.5/etcd/release/etcd/etcdctl/main.go:59\nruntime.main\n\t/usr/local/google/home/siarkowicz/.gvm/gos/go1.16.15/src/runtime/proc.go:225&quot;</span>&#125;</span><br><span class="line">2022-06-29T12:21:24+08:00       info    membership/store.go:141 Trimming membership information from the backend...</span><br><span class="line">2022-06-29T12:21:24+08:00       info    membership/cluster.go:421       added member    &#123;<span class="string">&quot;cluster-id&quot;</span>: <span class="string">&quot;cdf818194e3a8c32&quot;</span>, <span class="string">&quot;local-member-id&quot;</span>: <span class="string">&quot;0&quot;</span>, <span class="string">&quot;added-peer-id&quot;</span>: <span class="string">&quot;8e9e05c52164694d&quot;</span>, <span class="string">&quot;added-peer-peer-urls&quot;</span>: [<span class="string">&quot;http://localhost:2380&quot;</span>]&#125;</span><br><span class="line">2022-06-29T12:21:24+08:00       info    snapshot/v3_snapshot.go:269     restored snapshot       &#123;<span class="string">&quot;path&quot;</span>: <span class="string">&quot;snapshot.db&quot;</span>, <span class="string">&quot;wal-dir&quot;</span>: <span class="string">&quot;/opt/etcd-testdir/member/wal&quot;</span>, <span class="string">&quot;data-dir&quot;</span>: <span class="string">&quot;/opt/etcd-testdir&quot;</span>, <span class="string">&quot;snap-dir&quot;</span>: <span class="string">&quot;/opt/etcd-testdir/member/snap&quot;</span>&#125;</span><br><span class="line"></span><br><span class="line">root@k8s-etcd:~<span class="comment"># vim /etc/systemd/system/etcd.service</span></span><br><span class="line">root@k8s-etcd:~<span class="comment"># cat /etc/systemd/system/etcd.service</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line"><span class="comment"># 需要WorkingDirectory改成刚才生成的备份数据目录</span></span><br><span class="line">WorkingDirectory=/var/lib/etcd</span><br><span class="line">ExecStart=/usr/bin/etcd \</span><br><span class="line">  --name=etcd-10.0.0.111 \</span><br><span class="line">  --cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --peer-cert-file=/etc/kubernetes/ssl/etcd.pem \</span><br><span class="line">  --peer-key-file=/etc/kubernetes/ssl/etcd-key.pem \</span><br><span class="line">  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --initial-advertise-peer-urls=https://10.0.0.111:2380 \</span><br><span class="line">  --listen-peer-urls=https://10.0.0.111:2380 \</span><br><span class="line">  --listen-client-urls=https://10.0.0.111:2379,http://127.0.0.1:2379 \</span><br><span class="line">  --advertise-client-urls=https://10.0.0.111:2379 \</span><br><span class="line">  --initial-cluster-token=etcd-cluster-0 \</span><br><span class="line">  --initial-cluster=etcd-10.0.0.111=https://10.0.0.111:2380 \</span><br><span class="line">  --initial-cluster-state=new \</span><br><span class="line"><span class="comment"># data-dir也需要修改成刚才生成的备份数据目录</span></span><br><span class="line">  --data-dir=/var/lib/etcd \</span><br><span class="line">  --wal-dir= \</span><br><span class="line">  --snapshot-count=50000 \</span><br><span class="line">  --auto-compaction-retention=1 \</span><br><span class="line">  --auto-compaction-mode=periodic \</span><br><span class="line">  --max-request-bytes=10485760 \</span><br><span class="line">  --quota-backend-bytes=8589934592</span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=15</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">OOMScoreAdjust=-999</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 自动备份数据的脚本</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># mkdir -p /data/etcd-backup-dir/</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># vim etcd-bk.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">source</span> /etc/profile</span><br><span class="line">DTAE=`<span class="built_in">date</span> +%F_%T`</span><br><span class="line">ETCDCTL_API=3 /usr/bin/etcdctl snapshot save /data/etcd-backup-dir/etcd-snapshot-<span class="variable">$&#123;DTAE&#125;</span>.db</span><br><span class="line">root@etcd-node1:~<span class="comment"># crontab -e</span></span><br><span class="line">00 2 * * * /usr/bin/bash /root/etcd-bk.sh</span><br></pre></td></tr></table></figure><h1 id="集群etcd备份数据与恢复"><a href="#集群etcd备份数据与恢复" class="headerlink" title="集群etcd备份数据与恢复"></a>集群etcd备份数据与恢复</h1><h2 id="备份数据"><a href="#备份数据" class="headerlink" title="备份数据"></a>备份数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># cd /etc/kubeasz/</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl backup zhangg-k8s</span></span><br><span class="line">ansible-playbook -i clusters/zhangg-k8s/hosts -e @clusters/zhangg-k8s/config.yml playbooks/94.backup.yml</span><br><span class="line">2023-12-08 10:06:03 INFO cluster:zhangg-k8s backup begins <span class="keyword">in</span> 5s, press any key to abort:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PLAY [localhost] **********************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] ****************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [<span class="built_in">set</span> NODE_IPS of the etcd cluster] ***********************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [get etcd cluster status] ********************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [debug] **************************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [localhost] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;ETCD_CLUSTER_STATUS&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;changed&quot;</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="string">&quot;cmd&quot;</span>: <span class="string">&quot;for ip in 10.0.0.103 10.0.0.104 10.0.0.105 ;do ETCDCTL_API=3 /etc/kubeasz/bin/etcdctl --endpoints=https://\&quot;<span class="variable">$ip</span>\&quot;:2379 --cacert=/etc/kubeasz/clusters/zhangg-k8s/ssl/ca.pem --cert=/etc/kubeasz/clusters/zhangg-k8s/ssl/etcd.pem --key=/etc/kubeasz/clusters/zhangg-k8s/ssl/etcd-key.pem endpoint health; done&quot;</span>,</span><br><span class="line">        <span class="string">&quot;delta&quot;</span>: <span class="string">&quot;0:00:00.162194&quot;</span>,</span><br><span class="line">        <span class="string">&quot;end&quot;</span>: <span class="string">&quot;2023-12-08 10:06:11.775347&quot;</span>,</span><br><span class="line">        <span class="string">&quot;failed&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="string">&quot;rc&quot;</span>: 0,</span><br><span class="line">        <span class="string">&quot;start&quot;</span>: <span class="string">&quot;2023-12-08 10:06:11.613153&quot;</span>,</span><br><span class="line">        <span class="string">&quot;stderr&quot;</span>: <span class="string">&quot;&quot;</span>,</span><br><span class="line">        <span class="string">&quot;stderr_lines&quot;</span>: [],</span><br><span class="line">        <span class="string">&quot;stdout&quot;</span>: <span class="string">&quot;https://10.0.0.103:2379 is healthy: successfully committed proposal: took = 15.447664ms\nhttps://10.0.0.104:2379 is healthy: successfully committed proposal: took = 9.378629ms\nhttps://10.0.0.105:2379 is healthy: successfully committed proposal: took = 10.956349ms&quot;</span>,</span><br><span class="line">        <span class="string">&quot;stdout_lines&quot;</span>: [</span><br><span class="line">            <span class="string">&quot;https://10.0.0.103:2379 is healthy: successfully committed proposal: took = 15.447664ms&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https://10.0.0.104:2379 is healthy: successfully committed proposal: took = 9.378629ms&quot;</span>,</span><br><span class="line">            <span class="string">&quot;https://10.0.0.105:2379 is healthy: successfully committed proposal: took = 10.956349ms&quot;</span></span><br><span class="line">        ]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TASK [get a running ectd node] ********************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [debug] **************************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [localhost] =&gt; &#123;</span><br><span class="line">    <span class="string">&quot;RUNNING_NODE.stdout&quot;</span>: <span class="string">&quot;10.0.0.103&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">TASK [get current time] ***************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [make a backup on the etcd node] *************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">TASK [update the latest backup] *******************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [localhost]</span><br><span class="line"></span><br><span class="line">PLAY RECAP ****************************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">localhost                  : ok=9    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><p>上面操作备份完后会在下面命令存放snapshot.db，是以时间戳为名，如果想要恢复指定备份文件的话，只需要将时间戳文件cp成snapshot.db即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ll clusters/zhangg-k8s/backup/</span></span><br><span class="line">total 3760</span><br><span class="line">drwxr-xr-x 2 root root    4096 Jun  27 10:06 ./</span><br><span class="line">drwxr-xr-x 5 root root    4096 Jun  26 16:56 ../</span><br><span class="line">-rw------- 1 root root 1916960 Jun  27 10:06 snapshot_202206271006.db</span><br><span class="line">-rw------- 1 root root 1916960 Jun  27 10:06 snapshot.db</span><br></pre></td></tr></table></figure><h2 id="恢复数据"><a href="#恢复数据" class="headerlink" title="恢复数据"></a>恢复数据</h2><p>首先测试一下删除一个pod来演示恢复效果：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># kubectl get pods </span></span><br><span class="line">NAME        READY   STATUS    RESTARTS      AGE</span><br><span class="line">net-test1   1/1     Running   1 (15h ago)   17h</span><br><span class="line">net-test2   1/1     Running   1 (15h ago)   17h</span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># kubectl delete pods net-test1</span></span><br><span class="line">pod <span class="string">&quot;net-test1&quot;</span> deleted</span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># kubectl get pods </span></span><br><span class="line">NAME        READY   STATUS    RESTARTS      AGE</span><br><span class="line">net-test2   1/1     Running   1 (15h ago)   17h</span><br></pre></td></tr></table></figure><p>现在在来使用kubeasz中的脚本来实现恢复：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl restore zhangg-k8s</span></span><br><span class="line">ansible-playbook -i clusters/zhangg-k8s/hosts -e @clusters/zhangg-k8s/config.yml playbooks/95.restore.yml</span><br><span class="line">2023-12-08 10:20:18 INFO cluster:zhangg-k8s restore begins <span class="keyword">in</span> 5s, press any key to abort:</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">PLAY [kube_master] ********************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] ****************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.0.0.101]</span><br><span class="line">ok: [10.0.0.100]</span><br><span class="line">ok: [10.0.0.102]</span><br><span class="line"></span><br><span class="line">TASK [stopping kube_master services] **************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-apiserver)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-apiserver)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-apiserver)</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-controller-manager)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-controller-manager)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-controller-manager)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-scheduler)</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-scheduler)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-scheduler)</span><br><span class="line"></span><br><span class="line">PLAY [kube_master,kube_node] **********************************************************************************************************************************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] ****************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.0.0.107]</span><br><span class="line">ok: [10.0.0.108]</span><br><span class="line"></span><br><span class="line">TASK [stopping kube_node services] ****************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.108] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.107] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.107] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.108] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-proxy)</span><br><span class="line"></span><br><span class="line">PLAY [etcd] ***************************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [Gathering Facts] ****************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.0.0.103]</span><br><span class="line">ok: [10.0.0.105]</span><br><span class="line">ok: [10.0.0.104]</span><br><span class="line"></span><br><span class="line">TASK [cluster-restore : 停止ectd 服务] ****************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.105]</span><br><span class="line">changed: [10.0.0.104]</span><br><span class="line">changed: [10.0.0.103]</span><br><span class="line"></span><br><span class="line">TASK [cluster-restore : 清除etcd 数据目录] **************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.103]</span><br><span class="line">changed: [10.0.0.105]</span><br><span class="line">changed: [10.0.0.104]</span><br><span class="line"></span><br><span class="line">TASK [cluster-restore : 清除 etcd 备份目录] *************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">ok: [10.0.0.103 -&gt; 127.0.0.1]</span><br><span class="line"></span><br><span class="line">TASK [cluster-restore : etcd 数据恢复] ****************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.103 -&gt; 127.0.0.1]</span><br><span class="line"></span><br><span class="line">TASK [cluster-restore : 分发恢复文件到 etcd 各个节点] ********************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.105]</span><br><span class="line">changed: [10.0.0.104]</span><br><span class="line">changed: [10.0.0.103]</span><br><span class="line"></span><br><span class="line">TASK [cluster-restore : 重启etcd 服务] ****************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.105]</span><br><span class="line">changed: [10.0.0.103]</span><br><span class="line">changed: [10.0.0.104]</span><br><span class="line"></span><br><span class="line">TASK [cluster-restore : 以轮询的方式等待服务同步完成] ***********************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.103]</span><br><span class="line">changed: [10.0.0.104]</span><br><span class="line">changed: [10.0.0.105]</span><br><span class="line"></span><br><span class="line">PLAY [kube_master] ********************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [starting kube_master services] **************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-apiserver)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-apiserver)</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-controller-manager)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-apiserver)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-controller-manager)</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-scheduler)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-controller-manager)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-scheduler)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-scheduler)</span><br><span class="line"></span><br><span class="line">PLAY [kube_master,kube_node] **********************************************************************************************************************************************************************************************************************************************************</span><br><span class="line"></span><br><span class="line">TASK [starting kube_node services] ****************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.107] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.108] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kubelet)</span><br><span class="line">changed: [10.0.0.107] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.108] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.101] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.100] =&gt; (item=kube-proxy)</span><br><span class="line">changed: [10.0.0.102] =&gt; (item=kube-proxy)</span><br><span class="line"></span><br><span class="line">PLAY RECAP ****************************************************************************************************************************************************************************************************************************************************************************</span><br><span class="line">10.0.0.100                 : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">10.0.0.101                 : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">10.0.0.102                 : ok=5    changed=4    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">10.0.0.103                 : ok=8    changed=6    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">10.0.0.104                 : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">10.0.0.105                 : ok=6    changed=5    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">10.0.0.107                 : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0   </span><br><span class="line">10.0.0.108                 : ok=3    changed=2    unreachable=0    failed=0    skipped=0    rescued=0    ignored=0</span><br></pre></td></tr></table></figure><p><strong>验证刚刚删除的pod是否已经恢复</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># kubectl get pods</span></span><br><span class="line">NAME        READY   STATUS    RESTARTS      AGE</span><br><span class="line">net-test1   1/1     Running   0             17h</span><br><span class="line">net-test2   1/1     Running   1 (15h ago)   17h</span><br></pre></td></tr></table></figure><p><strong>总结etcd备份恢复流程：</strong></p><p>当etcd集群宕机数量超过集群总节点一半以上的时候（如总数3台宕机两台），就会导致整个集群宕机，后期需要重新恢复数据，恢复数据流程如下：</p><ol><li>恢复服务器系统</li><li>重新部署etcd集群</li><li>停止kube-apiserver&#x2F;kube-controller-manager&#x2F;kube-scheduler&#x2F;kubelet&#x2F;kube-proxy</li><li>停止etcd集群</li><li>各etcd节点恢复同一份备份数据</li><li>启动各节点并验证etcd集群</li><li>启动kube-apiserver&#x2F;kube-controller-manager&#x2F;kube-scheduler&#x2F;kubelet&#x2F;kube-proxy</li><li>验证k8s master状态及pod数据</li></ol>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes-ETCD简要说明</title>
      <link href="/post/9bc16ef7.html"/>
      <url>/post/9bc16ef7.html</url>
      
        <content type="html"><![CDATA[<p>ETCD 是CoreOS团队在2013年6月发起的开源项目，它的目标就是构建一个高可用的分布式键值（key-value）数据库。ETCD 内部采用的是raft协议作为一致性算法，ETCD 基于Go语言开发的。</p><p>官方地址：<a href="https://etcd.io/">https://etcd.io/</a></p><p>github仓库地址：<a href="https://github.com/etcd-io/etcd">https://github.com/etcd-io/etcd</a></p><p>官方部署的硬件推荐：<a href="https://etcd.io/docs/v3.5/op-guide/hardware/">https://etcd.io/docs/v3.5/op-guide/hardware/</a></p><h1 id="硬件配置建议"><a href="#硬件配置建议" class="headerlink" title="硬件配置建议"></a>硬件配置建议</h1><ol><li>CPU</li></ol><blockquote><p>很少有在部署 etcd 的时候需要大量 CPU 容量。 典型的集群需要两到四个核心才能平稳运行。 负载较重的 etcd 部署（每秒服务数千个客户端或数万个请求）往往会受到 CPU 限制，因为 etcd 可以服务于内存中的请求。 如此繁重的部署通常需要八到十六个专用核心。</p></blockquote><ol start="2"><li>Memory</li></ol><blockquote><p>etcd 的内存占用相对较小，但其性能仍然取决于是否有足够的内存。 etcd 服务器将积极缓存键值数据，并花费大部分剩余内存来跟踪观察者。 通常 8GB 就足够了。 对于具有数千个观察者和数百万个密钥的重型部署，请相应地分配 16GB 到 64GB 内存。</p></blockquote><ol start="3"><li>Disks</li></ol><blockquote><p>快速磁盘是 etcd 部署性能和稳定性的最关键因素。</p><p><strong>缓慢的磁盘会增加 etcd 请求延迟并可能损害集群稳定性。 由于 etcd 的共识协议依赖于将元数据持久存储到日志中，因此大多数 etcd 集群成员必须将每个请求写入磁盘。 此外，etcd 还将增量地将其状态检查点到磁盘，以便它可以截断此日志。 如果这些写入花费的时间太长，心跳可能会超时并触发选举，从而破坏集群的稳定性。 一般来说，要判断磁盘对于 etcd 来说是否足够快，可以使用 fio 等基准测试工具。 请阅读此处的示例。</strong></p><p><strong>etcd 对磁盘写入延迟非常敏感。 通常需要 50 个连续 IOPS（例如，7200 RPM 磁盘）。 对于负载较重的集群，建议使用 500 个连续 IOPS（例如，典型的本地 SSD 或高性能虚拟化块设备）。 请注意，大多数云提供商发布并发 IOPS，而不是顺序 IOPS； 发布的并发 IOPS 可能比顺序 IOPS 高 10 倍。 要测量实际的顺序 IOPS，我们建议使用磁盘基准测试工具，例如 diskbench 或 fio。</strong></p><p><strong>etcd 仅需要适度的磁盘带宽，但当发生故障的成员必须赶上集群时，更多的磁盘带宽可以购买更快的恢复时间。 通常 10MB&#x2F;s 将在 15 秒内恢复 100MB 数据。 对于大型集群，建议 100MB&#x2F;s 或更高，以在 15 秒内恢复 1GB 数据。</strong></p><p><strong>如果可能，使用 SSD 备份 etcd 的存储。 SSD 通常比旋转磁盘提供更低的写入延迟和更少的方差，从而提高了 etcd 的稳定性和可靠性。 如果使用旋转磁盘，请尽可能使用最快的磁盘 (15,000 RPM)。 对于旋转磁盘和 SSD 来说，使用 RAID 0 也是提高磁盘速度的有效方法。 对于至少三个集群成员，RAID 的镜像和&#x2F;或奇偶校验变体是不必要的； etcd 的一致性复制已经获得高可用性。</strong></p></blockquote><ol start="4"><li>Network</li></ol><blockquote><p>多成员 etcd 部署受益于快速可靠的网络。 为了让 etcd 既保持一致性又具有分区容忍性，不可靠的网络和分区中断将导致可用性较差。 低延迟确保 etcd 成员可以快速通信。 高带宽可以减少恢复失败的 etcd 成员的时间。 1GbE 足以满足常见的 etcd 部署。 对于大型 etcd 集群，10GbE 网络将缩短平均恢复时间。</p><p>尽可能在单个数据中心内部署 etcd 成员，以避免延迟开销并减少分区事件的可能性。 如果需要另一个数据中心的故障域，请选择距离现有数据中心较近的数据中心。 另请阅读调优文档以获取有关跨数据中心部署的更多信息。</p></blockquote><p>基于硬件配置，可以支持的pod数量：</p><ul><li>8C8G SSD，小环境可以使用这个配置，可以支持数百多个pod；</li><li>8C16G SSD，这个配置基本上够用了，可以支持数千个pod；</li><li>16C32G SSD，这个配置一般中大环境可以使用这个配置，可以支持上万个pod；</li></ul><p>ETCD使用文档：<a href="https://etcd.io/docs/v3.5/op-guide/maintenance/">https://etcd.io/docs/v3.5/op-guide/maintenance/</a></p><p>ETCD具有下面这些属性：</p><ul><li>完全复制：集群中的每个节点都可以使用完整的存档</li><li>高可用性：Etcd可用于避免硬件的单点故障或网络问题</li><li>一致性：每次读取都会返回跨多主机的最新写入</li><li>简单：包括一个定义良好、面向用户的API（gRPC）</li><li>安全：实现了带有可选的客户端证书身份验证的自动化TLS</li><li>速度快：每秒以10000次写入的基准为标准</li><li>可靠性：使用Raft算法实现了存储的合理分布Etcd的工作原理</li></ul><p>ETCD的启动服务脚本：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># cat /etc/systemd/system/etcd.service </span></span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">Documentation=https://github.com/coreos</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">WorkingDirectory=/data/service/etcd    <span class="comment">#数据保存目录</span></span><br><span class="line">ExecStart=/usr/bin/etcd \    <span class="comment"># 二进制文件路径</span></span><br><span class="line">  --name=etcd-10.0.0.103 \    <span class="comment"># 当前etcd节点名称</span></span><br><span class="line">  --cert-file=/etc/kubernetes/ssl/etcd.pem \ <span class="comment"># etcd的公钥</span></span><br><span class="line">  --key-file=/etc/kubernetes/ssl/etcd-key.pem \ <span class="comment"># etcd的私钥</span></span><br><span class="line">  --peer-cert-file=/etc/kubernetes/ssl/etcd.pem \ <span class="comment"># 连接对端的公钥</span></span><br><span class="line">  --peer-key-file=/etc/kubernetes/ssl/etcd-key.pem \ <span class="comment"># 连接对端的私钥</span></span><br><span class="line">  --trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --peer-trusted-ca-file=/etc/kubernetes/ssl/ca.pem \</span><br><span class="line">  --initial-advertise-peer-urls=https://10.0.0.103:2380 \    <span class="comment"># 通告自己集群端口</span></span><br><span class="line">  --listen-peer-urls=https://10.0.0.103:2380 \    <span class="comment"># 集群之间通讯端口</span></span><br><span class="line">  --listen-client-urls=https://10.0.0.103:2379,http://127.0.0.1:2379 \    <span class="comment"># 客户端访问地址</span></span><br><span class="line">  --advertise-client-urls=https://10.0.0.103:2379 \    <span class="comment"># 通告自己的客户端端口</span></span><br><span class="line">  --initial-cluster-token=etcd-cluster-0 \    <span class="comment"># 创建集群使用的token，一个集群内的节点保存一致</span></span><br><span class="line">  --initial-cluster=etcd-10.0.0.103=https://10.0.0.103:2380,etcd-10.0.0.104=https://10.0.0.104:2380,etcd-10.0.0.105=https://10.0.0.105:2380 \    <span class="comment"># 集群所有的节点信息</span></span><br><span class="line">  --initial-cluster-state=new \    <span class="comment"># 新建集群的时候值为new，如果已经存在的集群为existing</span></span><br><span class="line">  --data-dir=/data/service/etcd \    <span class="comment"># 数据目录路径</span></span><br><span class="line">  --wal-dir= \ <span class="comment"># 预写式日志路径，默认跟数据目录下</span></span><br><span class="line">  --snapshot-count=50000 \ <span class="comment"># 快照</span></span><br><span class="line">  <span class="comment"># etcd参数优化：</span></span><br><span class="line">  --auto-compaction-retention=10 \ <span class="comment"># 数据压缩相关参数， 第一次压缩等待10小时，以后每次10小时*10%=1小时压缩一次，会导致cpu负载变高，可能会导致网络堵塞，</span></span><br><span class="line">  --auto-compaction-mode=periodic \ <span class="comment"># 周期性压缩</span></span><br><span class="line">  --max-request-bytes=10485760 \ <span class="comment"># request size limit(请求的最大字节数，默认一个key最大1.5Mib官方推荐最大10Mib)，10485760/1024/1024单个数据往etcd写入最大是多大</span></span><br><span class="line">  --quota-backend-bytes=8589934592 <span class="comment"># storage size limit(磁盘存储空间大小限制，默认为2G,此值超过8G启动会有告警信息)</span></span><br><span class="line">Restart=always</span><br><span class="line">RestartSec=15</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">OOMScoreAdjust=-999</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure><h1 id="ETCD的参数优化"><a href="#ETCD的参数优化" class="headerlink" title="ETCD的参数优化"></a>ETCD的参数优化</h1><ul><li>–auto-compaction-retention&#x3D;10 \ # 数据压缩相关参数， 第一次压缩等待10小时，以后每次10小时*10%&#x3D;1小时压缩一次，会导致cpu负载变高，可能会导致网络堵塞，</li><li>–auto-compaction-mode&#x3D;periodic \ # 周期性压缩</li><li>–max-request-bytes&#x3D;10485760 \ # request size limit(请求的最大字节数，默认一个key最大1.5Mib官方推荐最大10Mib)，10485760&#x2F;1024&#x2F;1024单个数据往etcd写入最大是多大</li><li>–quota-backend-bytes&#x3D;8589934592 # storage size limit(磁盘存储空间大小限制，默认为2G,此值超过8G启动会有告警信息)</li></ul><p>集群的碎片整理（当ETCD运行时间久了，数据可能就不是连续的了，这时就需要整理一下，按照顺序的io）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl defrag --cluster --endpoints=https://10.0.0.103:2379 --cacert=/etc/kubernetes/ssl/ca.pem --cert=/etc/kubernetes/ssl/etcd.pem --key=/etc/kubernetes/ssl/etcd-key.pem</span></span><br><span class="line">Finished defragmenting etcd member[https://10.0.0.103:2379]</span><br><span class="line">Finished defragmenting etcd member[https://10.0.0.105:2379]</span><br><span class="line">Finished defragmenting etcd member[https://10.0.0.104:2379]</span><br></pre></td></tr></table></figure><p>etcd的数据存储都是元数据</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ls /data/service/etcd/</span></span><br><span class="line">member</span><br><span class="line">root@etcd-node1:~<span class="comment"># ls /data/service/etcd/member/</span></span><br><span class="line">snap  wal</span><br><span class="line">root@etcd-node1:~<span class="comment"># ls /data/service/etcd/member/snap/</span></span><br><span class="line">db</span><br><span class="line">root@etcd-node1:~<span class="comment"># ls /data/service/etcd/member/wal/</span></span><br><span class="line">0.tmp  0000000000000000-0000000000000000.wal</span><br></pre></td></tr></table></figure><p>snap：数据目录<br>wal：预写式日志，在插入数据的时候，先写完成日志，再保存数据，如果日志没有写入成功就相当于数据未写入完成,可以通过日志恢复数。</p><h1 id="etcd-命令-默认的情况是v3版本"><a href="#etcd-命令-默认的情况是v3版本" class="headerlink" title="etcd 命令(默认的情况是v3版本)"></a>etcd 命令(默认的情况是v3版本)</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># etcdctl --help</span></span><br><span class="line">NAME:</span><br><span class="line">    etcdctl - A simple <span class="built_in">command</span> line client <span class="keyword">for</span> etcd3.</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">    etcdctl [flags]</span><br><span class="line"></span><br><span class="line">VERSION:</span><br><span class="line">    3.5.5</span><br><span class="line"></span><br><span class="line">API VERSION:</span><br><span class="line">    3.5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">COMMANDS:</span><br><span class="line">    alarm disarmDisarms all alarms</span><br><span class="line">    alarm listLists all alarms</span><br><span class="line">    auth <span class="built_in">disable</span>Disables authentication</span><br><span class="line">    auth <span class="built_in">enable</span>Enables authentication</span><br><span class="line">    auth statusReturns authentication status</span><br><span class="line">    check datascaleCheck the memory usage of holding data <span class="keyword">for</span> different workloads on a given server endpoint.</span><br><span class="line">    check perfCheck the performance of the etcd cluster</span><br><span class="line">    compactionCompacts the event <span class="built_in">history</span> <span class="keyword">in</span> etcd</span><br><span class="line">    defragDefragments the storage of the etcd members with given endpoints</span><br><span class="line">    delRemoves the specified key or range of keys [key, range_end)</span><br><span class="line">    electObserves and participates <span class="keyword">in</span> leader election</span><br><span class="line">    endpoint hashkvPrints the KV <span class="built_in">history</span> <span class="built_in">hash</span> <span class="keyword">for</span> each endpoint <span class="keyword">in</span> --endpoints</span><br><span class="line">    endpoint healthChecks the healthiness of endpoints specified <span class="keyword">in</span> `--endpoints` flag</span><br><span class="line">    endpoint statusPrints out the status of endpoints specified <span class="keyword">in</span> `--endpoints` flag</span><br><span class="line">    getGets the key or a range of keys</span><br><span class="line">    <span class="built_in">help</span>Help about any <span class="built_in">command</span></span><br><span class="line">    lease grantCreates leases</span><br><span class="line">    lease keep-aliveKeeps leases alive (renew)</span><br><span class="line">    lease listList all active leases</span><br><span class="line">    lease revokeRevokes leases</span><br><span class="line">    lease timetoliveGet lease information</span><br><span class="line">    lockAcquires a named lock</span><br><span class="line">    make-mirrorMakes a mirror at the destination etcd cluster</span><br><span class="line">    member addAdds a member into the cluster</span><br><span class="line">    member listLists all members <span class="keyword">in</span> the cluster</span><br><span class="line">    member promotePromotes a non-voting member <span class="keyword">in</span> the cluster</span><br><span class="line">    member removeRemoves a member from the cluster</span><br><span class="line">    member updateUpdates a member <span class="keyword">in</span> the cluster</span><br><span class="line">    move-leaderTransfers leadership to another etcd cluster member.</span><br><span class="line">    putPuts the given key into the store</span><br><span class="line">    role addAdds a new role</span><br><span class="line">    role deleteDeletes a role</span><br><span class="line">    role getGets detailed information of a role</span><br><span class="line">    role grant-permissionGrants a key to a role</span><br><span class="line">    role listLists all roles</span><br><span class="line">    role revoke-permissionRevokes a key from a role</span><br><span class="line">    snapshot restoreRestores an etcd member snapshot to an etcd directory</span><br><span class="line">    snapshot saveStores an etcd node backend snapshot to a given file</span><br><span class="line">    snapshot status[deprecated] Gets backend snapshot status of a given file</span><br><span class="line">    txnTxn processes all the requests <span class="keyword">in</span> one transaction</span><br><span class="line">    user addAdds a new user</span><br><span class="line">    user deleteDeletes a user</span><br><span class="line">    user getGets detailed information of a user</span><br><span class="line">    user grant-roleGrants a role to a user</span><br><span class="line">    user listLists all <span class="built_in">users</span></span><br><span class="line">    user passwdChanges password of user</span><br><span class="line">    user revoke-roleRevokes a role from a user</span><br><span class="line">    versionPrints the version of etcdctl</span><br><span class="line">    watchWatches events stream on keys or prefixes</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">      --cacert=<span class="string">&quot;&quot;</span>                verify certificates of TLS-enabled secure servers using this CA bundle</span><br><span class="line">      --cert=<span class="string">&quot;&quot;</span>                    identify secure client using this TLS certificate file</span><br><span class="line">      --command-timeout=5s            <span class="built_in">timeout</span> <span class="keyword">for</span> short running <span class="built_in">command</span> (excluding dial <span class="built_in">timeout</span>)</span><br><span class="line">      --debug[=<span class="literal">false</span>]                <span class="built_in">enable</span> client-side debug logging</span><br><span class="line">      --dial-timeout=2s                dial <span class="built_in">timeout</span> <span class="keyword">for</span> client connections</span><br><span class="line">  -d, --discovery-srv=<span class="string">&quot;&quot;</span>            domain name to query <span class="keyword">for</span> SRV records describing cluster endpoints</span><br><span class="line">      --discovery-srv-name=<span class="string">&quot;&quot;</span>            service name to query when using DNS discovery</span><br><span class="line">      --endpoints=[127.0.0.1:2379]        gRPC endpoints</span><br><span class="line">  -h, --<span class="built_in">help</span>[=<span class="literal">false</span>]                <span class="built_in">help</span> <span class="keyword">for</span> etcdctl</span><br><span class="line">      --hex[=<span class="literal">false</span>]                <span class="built_in">print</span> byte strings as hex encoded strings</span><br><span class="line">      --insecure-discovery[=<span class="literal">true</span>]        accept insecure SRV records describing cluster endpoints</span><br><span class="line">      --insecure-skip-tls-verify[=<span class="literal">false</span>]    skip server certificate verification (CAUTION: this option should be enabled only <span class="keyword">for</span> testing purposes)</span><br><span class="line">      --insecure-transport[=<span class="literal">true</span>]        <span class="built_in">disable</span> transport security <span class="keyword">for</span> client connections</span><br><span class="line">      --keepalive-time=2s            keepalive time <span class="keyword">for</span> client connections</span><br><span class="line">      --keepalive-timeout=6s            keepalive <span class="built_in">timeout</span> <span class="keyword">for</span> client connections</span><br><span class="line">      --key=<span class="string">&quot;&quot;</span>                    identify secure client using this TLS key file</span><br><span class="line">      --password=<span class="string">&quot;&quot;</span>                password <span class="keyword">for</span> authentication (<span class="keyword">if</span> this option is used, --user option shouldn<span class="string">&#x27;t include password)</span></span><br><span class="line"><span class="string">      --user=&quot;&quot;                    username[:password] for authentication (prompt if password is not supplied)</span></span><br><span class="line"><span class="string">  -w, --write-out=&quot;simple&quot;            set the output format (fields, json, protobuf, simple, table)</span></span><br></pre></td></tr></table></figure><h2 id="查看当前集群状态（可以进行监控，查看是否successfully）"><a href="#查看当前集群状态（可以进行监控，查看是否successfully）" class="headerlink" title="查看当前集群状态（可以进行监控，查看是否successfully）"></a>查看当前集群状态（可以进行监控，查看是否successfully）</h2><ul><li>验证心跳信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># export NODE_IPS=&quot;10.0.0.103 10.0.0.104 10.0.0.105&quot;</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># for ip in $&#123;NODE_IPS&#125;;do ETCDCTL_API=3  /usr/bin/etcdctl --endpoints=https://$&#123;ip&#125;:2379 --cacert=/etc/kubernetes/ssl/ca.pem --cert=/etc/kubernetes/ssl/etcd.pem --key=/etc/kubernetes/ssl/etcd-key.pem endpoint health; done</span></span><br><span class="line">https://10.0.0.103:2379 is healthy: successfully committed proposal: took = 9.819731ms</span><br><span class="line">https://10.0.0.104:2379 is healthy: successfully committed proposal: took = 9.872847ms</span><br><span class="line">https://10.0.0.105:2379 is healthy: successfully committed proposal: took = 9.48946ms</span><br></pre></td></tr></table></figure><ul><li>显示集群成员信息</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3  /usr/bin/etcdctl --write-out=table member list --endpoints=https://10.0.0.103:2379 --cacert=/etc/kubernetes/ssl/ca.pem --cert=/etc/kubernetes/ssl/etcd.pem --key=/etc/kubernetes/ssl/etcd-key.pem</span></span><br><span class="line">+------------------+---------+-----------------+-------------------------+-------------------------+------------+</span><br><span class="line">|        ID        | STATUS  |      NAME       |       PEER ADDRS        |      CLIENT ADDRS       | IS LEARNER |</span><br><span class="line">+------------------+---------+-----------------+-------------------------+-------------------------+------------+</span><br><span class="line">| 13e17ead073290e4 | started | etcd-10.0.0.103 | https://10.0.0.103:2380 | https://10.0.0.103:2379 |      <span class="literal">false</span> |</span><br><span class="line">| 5ff79fd73b006fb8 | started | etcd-10.0.0.105 | https://10.0.0.105:2380 | https://10.0.0.105:2379 |      <span class="literal">false</span> |</span><br><span class="line">| e3cda42988593cf7 | started | etcd-10.0.0.104 | https://10.0.0.104:2380 | https://10.0.0.104:2379 |      <span class="literal">false</span> |</span><br><span class="line">+------------------+---------+-----------------+-------------------------+-------------------------+------------+</span><br></pre></td></tr></table></figure><ul><li>以表格方式显示节点详细的状态</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># export NODE_IPS=&quot;10.0.0.103 10.0.0.104 10.0.0.105&quot;</span></span><br><span class="line"><span class="comment"># 添加--write-out参数以表格方式显示详细信息</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># for ip in $&#123;NODE_IPS&#125;;do ETCDCTL_API=3  /usr/bin/etcdctl --write-out=table endpoint status --endpoints=https://$&#123;ip&#125;:2379 --cacert=/etc/kubernetes/ssl/ca.pem --cert=/etc/kubernetes/ssl/etcd.pem --key=/etc/kubernetes/ssl/etcd-key.pem; done</span></span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|        ENDPOINT         |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| https://10.0.0.103:2379 | 13e17ead073290e4 |   3.5.5 |  1.9 MB |      <span class="literal">true</span> |      <span class="literal">false</span> |         6 |      28722 |              28722 |        |</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|        ENDPOINT         |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| https://10.0.0.104:2379 | e3cda42988593cf7 |   3.5.5 |  1.9 MB |     <span class="literal">false</span> |      <span class="literal">false</span> |         6 |      28722 |              28722 |        |</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">|        ENDPOINT         |        ID        | VERSION | DB SIZE | IS LEADER | IS LEARNER | RAFT TERM | RAFT INDEX | RAFT APPLIED INDEX | ERRORS |</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br><span class="line">| https://10.0.0.105:2379 | 5ff79fd73b006fb8 |   3.5.5 |  1.9 MB |     <span class="literal">false</span> |      <span class="literal">false</span> |         6 |      28722 |              28722 |        |</span><br><span class="line">+-------------------------+------------------+---------+---------+-----------+------------+-----------+------------+--------------------+--------+</span><br></pre></td></tr></table></figure><h2 id="查看etcd数据信息"><a href="#查看etcd数据信息" class="headerlink" title="查看etcd数据信息"></a>查看etcd数据信息</h2><ul><li>查看所有key</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># pod信息</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3  /usr/bin/etcdctl get / --prefix --keys-only | grep pods</span></span><br><span class="line">/registry/pods/default/net-test1</span><br><span class="line">/registry/pods/default/net-test2</span><br><span class="line">/registry/pods/kube-system/calico-kube-controllers-6767cc9c5f-nlf4p</span><br><span class="line">/registry/pods/kube-system/calico-node-9tnmr</span><br><span class="line">/registry/pods/kube-system/calico-node-cn4zv</span><br><span class="line">/registry/pods/kube-system/calico-node-jvz68</span><br><span class="line">/registry/pods/kube-system/calico-node-kc6c6</span><br><span class="line">/registry/pods/kube-system/calico-node-wh2nb</span><br><span class="line">/registry/pods/kube-system/coredns-65dc99c6d5-ndjwc</span><br><span class="line"></span><br><span class="line"><span class="comment"># namespace信息</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3  /usr/bin/etcdctl get / --prefix --keys-only | grep namespaces</span></span><br><span class="line">/registry/namespaces/default</span><br><span class="line">/registry/namespaces/kube-node-lease</span><br><span class="line">/registry/namespaces/kube-public</span><br><span class="line">/registry/namespaces/kube-system</span><br><span class="line"></span><br><span class="line"><span class="comment"># deployment控制器信息</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3  /usr/bin/etcdctl get / --prefix --keys-only | grep deployments</span></span><br><span class="line">/registry/deployments/kube-system/calico-kube-controllers</span><br><span class="line">/registry/deployments/kube-system/coredns</span><br><span class="line"></span><br><span class="line"><span class="comment"># calico组件相关的信息</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3  /usr/bin/etcdctl get / --prefix --keys-only | grep calico</span></span><br><span class="line">/calico/ipam/v2/assignment/ipv4/block/10.200.106.192-26</span><br><span class="line">/calico/ipam/v2/assignment/ipv4/block/10.200.107.128-26</span><br><span class="line">/calico/ipam/v2/assignment/ipv4/block/10.200.116.128-26</span><br><span class="line">/calico/ipam/v2/assignment/ipv4/block/10.200.143.0-26</span><br><span class="line">/calico/ipam/v2/assignment/ipv4/block/10.200.15.128-26</span><br><span class="line">/calico/ipam/v2/config</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-master1.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-master2.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-master3.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-node1.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-node2.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/k8s-pod-network.3ab4ee670b6925b90e2329f8363f03e898f333d92ebfd625f035ea1a7da2351a</span><br><span class="line">/calico/ipam/v2/handle/k8s-pod-network.4824064ee78c2e7be8c142ba039f4ed87259ad72e45474732abc1801a302750d</span><br><span class="line">/calico/ipam/v2/handle/k8s-pod-network.9a4c1ffe0a227465f9818ddbd3621cde3fb863398a66710f1e4dc5fd6be6900a</span><br><span class="line">/calico/ipam/v2/host/k8s-master1.zhangg.com/ipv4/block/10.200.116.128-26</span><br><span class="line">/calico/ipam/v2/host/k8s-master2.zhangg.com/ipv4/block/10.200.143.0-26</span><br><span class="line">/calico/ipam/v2/host/k8s-master3.zhangg.com/ipv4/block/10.200.106.192-26</span><br><span class="line">/calico/ipam/v2/host/k8s-node1.zhangg.com/ipv4/block/10.200.15.128-26</span><br><span class="line">/calico/ipam/v2/host/k8s-node2.zhangg.com/ipv4/block/10.200.107.128-26</span><br><span class="line">/calico/resources/v3/projectcalico.org/clusterinformations/default</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/default</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-master1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-master2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-master3.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-node1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-node2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/ippools/default-ipv4-ippool</span><br><span class="line">/calico/resources/v3/projectcalico.org/kubecontrollersconfigurations/default</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-master1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-master2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-master3.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-node1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-node2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/kns.default</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/kns.kube-node-lease</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/kns.kube-public</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/kns.kube-system</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.default.default</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-node-lease.default</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-public.default</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.attachdetach-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.calico-kube-controllers</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.calico-node</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.certificate-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.clusterrole-aggregation-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.coredns</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.cronjob-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.daemon-set-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.default</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.deployment-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.disruption-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.endpoint-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.endpointslice-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.endpointslicemirroring-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.ephemeral-volume-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.expand-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.generic-garbage-collector</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.horizontal-pod-autoscaler</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.job-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.namespace-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.node-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.persistent-volume-binder</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.pod-garbage-collector</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.pv-protection-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.pvc-protection-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.replicaset-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.replication-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.resourcequota-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.root-ca-cert-publisher</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.service-account-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.service-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.statefulset-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.ttl-after-finished-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/profiles/ksa.kube-system.ttl-controller</span><br><span class="line">/calico/resources/v3/projectcalico.org/workloadendpoints/default/k8s--node1.zhangg.com-k8s-net--test1-eth0</span><br><span class="line">/calico/resources/v3/projectcalico.org/workloadendpoints/default/k8s--node2.zhangg.com-k8s-net--test2-eth0</span><br><span class="line">/calico/resources/v3/projectcalico.org/workloadendpoints/kube-system/k8s--node1.zhangg.com-k8s-coredns--65dc99c6d5--ndjwc-eth0</span><br><span class="line">/registry/clusterrolebindings/calico-kube-controllers</span><br><span class="line">/registry/clusterrolebindings/calico-node</span><br><span class="line">/registry/clusterroles/calico-kube-controllers</span><br><span class="line">/registry/clusterroles/calico-node</span><br><span class="line">/registry/configmaps/kube-system/calico-config</span><br><span class="line">/registry/controllerrevisions/kube-system/calico-node-67f657968f</span><br><span class="line">/registry/daemonsets/kube-system/calico-node</span><br><span class="line">/registry/deployments/kube-system/calico-kube-controllers</span><br><span class="line">/registry/poddisruptionbudgets/kube-system/calico-kube-controllers</span><br><span class="line">/registry/pods/kube-system/calico-kube-controllers-6767cc9c5f-nlf4p</span><br><span class="line">/registry/pods/kube-system/calico-node-9tnmr</span><br><span class="line">/registry/pods/kube-system/calico-node-cn4zv</span><br><span class="line">/registry/pods/kube-system/calico-node-jvz68</span><br><span class="line">/registry/pods/kube-system/calico-node-kc6c6</span><br><span class="line">/registry/pods/kube-system/calico-node-wh2nb</span><br><span class="line">/registry/replicasets/kube-system/calico-kube-controllers-6767cc9c5f</span><br><span class="line">/registry/secrets/kube-system/calico-etcd-secrets</span><br><span class="line">/registry/serviceaccounts/kube-system/calico-kube-controllers</span><br><span class="line">/registry/serviceaccounts/kube-system/calico-node</span><br></pre></td></tr></table></figure><ul><li>查看指定的key</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3  /usr/bin/etcdctl get /calico/ipam/v2/assignment/ipv4/block/10.200.143.0-26</span></span><br><span class="line">/calico/ipam/v2/assignment/ipv4/block/10.200.143.0-26</span><br><span class="line">&#123;<span class="string">&quot;cidr&quot;</span>:<span class="string">&quot;10.200.143.0/26&quot;</span>,<span class="string">&quot;affinity&quot;</span>:<span class="string">&quot;host:k8s-master2.zhangg.com&quot;</span>,<span class="string">&quot;allocations&quot;</span>:[0,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null],<span class="string">&quot;unallocated&quot;</span>:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63],<span class="string">&quot;attributes&quot;</span>:[&#123;<span class="string">&quot;handle_id&quot;</span>:<span class="string">&quot;ipip-tunnel-addr-k8s-master2.zhangg.com&quot;</span>,<span class="string">&quot;secondary&quot;</span>:&#123;<span class="string">&quot;node&quot;</span>:<span class="string">&quot;k8s-master2.zhangg.com&quot;</span>,<span class="string">&quot;type&quot;</span>:<span class="string">&quot;ipipTunnelAddress&quot;</span>&#125;&#125;],<span class="string">&quot;sequenceNumber&quot;</span>:1701939610591096826,<span class="string">&quot;sequenceNumberForAllocation&quot;</span>:&#123;<span class="string">&quot;0&quot;</span>:1701939610591096825&#125;,<span class="string">&quot;deleted&quot;</span>:<span class="literal">false</span>&#125;</span><br></pre></td></tr></table></figure><ul><li>查看所有calico的数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3  /usr/bin/etcdctl get /calico --prefix --keys-only | grep zhangg</span></span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-master1.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-master2.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-master3.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-node1.zhangg.com</span><br><span class="line">/calico/ipam/v2/handle/ipip-tunnel-addr-k8s-node2.zhangg.com</span><br><span class="line">/calico/ipam/v2/host/k8s-master1.zhangg.com/ipv4/block/10.200.116.128-26</span><br><span class="line">/calico/ipam/v2/host/k8s-master2.zhangg.com/ipv4/block/10.200.143.0-26</span><br><span class="line">/calico/ipam/v2/host/k8s-master3.zhangg.com/ipv4/block/10.200.106.192-26</span><br><span class="line">/calico/ipam/v2/host/k8s-node1.zhangg.com/ipv4/block/10.200.15.128-26</span><br><span class="line">/calico/ipam/v2/host/k8s-node2.zhangg.com/ipv4/block/10.200.107.128-26</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-master1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-master2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-master3.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-node1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/felixconfigurations/node.k8s-node2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-master1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-master2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-master3.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-node1.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/nodes/k8s-node2.zhangg.com</span><br><span class="line">/calico/resources/v3/projectcalico.org/workloadendpoints/default/k8s--node1.zhangg.com-k8s-net--test1-eth0</span><br><span class="line">/calico/resources/v3/projectcalico.org/workloadendpoints/default/k8s--node2.zhangg.com-k8s-net--test2-eth0</span><br><span class="line">/calico/resources/v3/projectcalico.org/workloadendpoints/kube-system/k8s--node1.zhangg.com-k8s-coredns--65dc99c6d5--ndjwc-eth0</span><br></pre></td></tr></table></figure><h2 id="etcd增删改查数据"><a href="#etcd增删改查数据" class="headerlink" title="etcd增删改查数据"></a>etcd增删改查数据</h2><ul><li>增加数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl put /name &quot;zhangg&quot;</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure><ul><li>查询数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl get /name</span></span><br><span class="line">/name</span><br><span class="line">zhangg</span><br></pre></td></tr></table></figure><ul><li>修改数据（直接覆盖也就是更新数据），并验证数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl put /name &quot;stars&quot;</span></span><br><span class="line">OK</span><br><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl get /name</span></span><br><span class="line">/name</span><br><span class="line">stars</span><br></pre></td></tr></table></figure><ul><li>删除数据</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl del /name</span></span><br><span class="line">1</span><br><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl get /name</span></span><br></pre></td></tr></table></figure><h2 id="etcd数据的watch机制"><a href="#etcd数据的watch机制" class="headerlink" title="etcd数据的watch机制"></a>etcd数据的watch机制</h2><p>基于不断监看数据，发⽣变化就主动触发通知客户端，Etcd v3 的 watch机制⽀持watch某个固定的key，也⽀持watch⼀个范围。</p><p>相比etcd v2，etcd v3的一些主要变化：</p><blockquote><p>接口通过grpc提供rpc接口，放弃了v2的http接口，优势是⻓连接效 率提升明显，缺点是使⽤不如以前⽅便，尤其对不⽅便维护⻓连接的场景。</p><p>废弃了原来的⽬录结构，变成了纯粹的kv，⽤户可以通过前缀匹配模式模拟⽬录。 </p><p>内存中不再保存value，同样的内存可以⽀持存储更多的key。 </p><p>watch机制更稳定，基本上可以通过watch机制实现数据的完全同步。 提供了批量操作以及事务机制，用户可以通过批量事务请求来实现Etcd v2的CAS机制（批量事务⽀持if条件判断）。</p></blockquote><p>watch测试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先在etcd node1节点上watch一个key，没有此key也可以执行watch，后续可以在创建</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl watch /name</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在etcd node2节点上修改数据，验证etcd node1是否能够发现数据变化</span></span><br><span class="line">root@etcd-node2:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl put /name &quot;name zhangg&quot;</span></span><br><span class="line">OK</span><br><span class="line">root@etcd-node2:~<span class="comment"># ETCDCTL_API=3 /usr/bin/etcdctl put /name &quot;name pxt&quot;</span></span><br><span class="line">OK</span><br></pre></td></tr></table></figure><p><img src="/images/etcd-watch.png"></p>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>kubernetes 安装coreDNS组件</title>
      <link href="/post/787eeeb4.html"/>
      <url>/post/787eeeb4.html</url>
      
        <content type="html"><![CDATA[<p>目前常用的dns组件有kube-dns和coredns这两个，但是到现在的话用的多的是coredns了，因为kube-dns在k8s 1.18版本后就说不支持了，但是还是可以使用的，不过推荐还是使用coredns，这两个组件都是用于解析k8s集群中的service name所对应的IP地址。</p><p>官方文档： <a href="https://coredns.io/">coreDNS官方文档</a></p><p>这里coreDNS就使用模板文件修改一下了：<a href="https://github.com/kubernetes/kubernetes/blob/master/cluster/addons/dns/coredns/coredns.yaml.base">coreDNS模板文件</a></p><p>官方的yaml文件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># __MACHINE_GENERATED_WARNING__</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">coredns</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">      <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">kubernetes.io/bootstrapping:</span> <span class="string">rbac-defaults</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:coredns</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&quot;&quot;</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">discovery.k8s.io</span></span><br><span class="line">  <span class="attr">resources:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">endpointslices</span></span><br><span class="line">  <span class="attr">verbs:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">rbac.authorization.kubernetes.io/autoupdate:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">kubernetes.io/bootstrapping:</span> <span class="string">rbac-defaults</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">EnsureExists</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:coredns</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:coredns</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">coredns</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">coredns</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">      <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">EnsureExists</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">Corefile:</span> <span class="string">|</span></span><br><span class="line"><span class="string">    .:53 &#123;</span></span><br><span class="line"><span class="string">    # errors:错误信息标准输出</span></span><br><span class="line"><span class="string">        errors</span></span><br><span class="line"><span class="string">        # 心跳检测，检测服务是否存活，在CoreDNS的http://localhost:8080/health端口提供CoreDNS服务的健康报告</span></span><br><span class="line"><span class="string">        health &#123;</span></span><br><span class="line"><span class="string">            lameduck 5s</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        # 监听8181端口，当coredns的插件已经就绪时，访问该接口会返回200 OK</span></span><br><span class="line"><span class="string">        ready</span></span><br><span class="line"><span class="string">        kubernetes __DNS__DOMAIN__ in-addr.arpa ip6.arpa &#123;</span></span><br><span class="line"><span class="string">            pods insecure</span></span><br><span class="line"><span class="string">            fallthrough in-addr.arpa ip6.arpa</span></span><br><span class="line"><span class="string">            ttl 30</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        prometheus :9153</span></span><br><span class="line"><span class="string">        # forward就表示coredns解析不了的dns域名往哪里转发。可以指向公司内部dns地址</span></span><br><span class="line"><span class="string">        forward . /etc/resolv.conf &#123;</span></span><br><span class="line"><span class="string">            max_concurrent 1000</span></span><br><span class="line"><span class="string">        &#125;</span></span><br><span class="line"><span class="string">        # dns缓存，如果第一次请求，先去etcd查询再用coredns缓存30s，如果30s内再有请求访问直接通过缓存返回</span></span><br><span class="line"><span class="string">        cache 30</span></span><br><span class="line"><span class="string">        # 检测域名解析是否有死循环，如coredns转发给内网DNS服务器，而内网服务器又转发给coredns，如果发现解析时死循环，则强制终止coredns进程（kubernetes会重建），如果不加该参数可能会导致coredns资源利用率非常高甚至卡死</span></span><br><span class="line"><span class="string">        loop</span></span><br><span class="line"><span class="string">        # 检测corefile是否更改，再重新编辑configmap配置后，默认2分钟会优雅的自动加载新的配置</span></span><br><span class="line"><span class="string">        reload</span></span><br><span class="line"><span class="string">        # 轮询DNS域名解析，如果一个域名存在多个记录则轮询解析</span></span><br><span class="line"><span class="string">        loadbalance</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">coredns</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-dns</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">    <span class="attr">kubernetes.io/name:</span> <span class="string">&quot;CoreDNS&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="comment"># replicas: not specified here:</span></span><br><span class="line">  <span class="comment"># 1. In order to make Addon Manager do not reconcile this replicas parameter.</span></span><br><span class="line">  <span class="comment"># 2. Default is 1.</span></span><br><span class="line">  <span class="comment"># 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.</span></span><br><span class="line">  <span class="attr">strategy:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">RollingUpdate</span></span><br><span class="line">    <span class="attr">rollingUpdate:</span></span><br><span class="line">      <span class="attr">maxUnavailable:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">k8s-app:</span> <span class="string">kube-dns</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">k8s-app:</span> <span class="string">kube-dns</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">securityContext:</span></span><br><span class="line">        <span class="attr">seccompProfile:</span></span><br><span class="line">          <span class="attr">type:</span> <span class="string">RuntimeDefault</span></span><br><span class="line">      <span class="attr">priorityClassName:</span> <span class="string">system-cluster-critical</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">coredns</span></span><br><span class="line">      <span class="attr">affinity:</span></span><br><span class="line">        <span class="attr">podAntiAffinity:</span></span><br><span class="line">          <span class="attr">preferredDuringSchedulingIgnoredDuringExecution:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">weight:</span> <span class="number">100</span></span><br><span class="line">            <span class="attr">podAffinityTerm:</span></span><br><span class="line">              <span class="attr">labelSelector:</span></span><br><span class="line">                <span class="attr">matchExpressions:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">k8s-app</span></span><br><span class="line">                    <span class="attr">operator:</span> <span class="string">In</span></span><br><span class="line">                    <span class="attr">values:</span> [<span class="string">&quot;kube-dns&quot;</span>]</span><br><span class="line">              <span class="attr">topologyKey:</span> <span class="string">kubernetes.io/hostname</span></span><br><span class="line">      <span class="attr">tolerations:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">&quot;CriticalAddonsOnly&quot;</span></span><br><span class="line">          <span class="attr">operator:</span> <span class="string">&quot;Exists&quot;</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">coredns</span></span><br><span class="line">      <span class="comment"># 镜像地址默认是官方的，需要更换成国内镜像源或者自己提前下载好到自己的私有仓库</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">registry.k8s.io/coredns/coredns:v1.11.1</span></span><br><span class="line">        <span class="attr">imagePullPolicy:</span> <span class="string">IfNotPresent</span></span><br><span class="line">        <span class="attr">resources:</span></span><br><span class="line">        <span class="comment"># 限制coredns的可使用资源</span></span><br><span class="line">          <span class="attr">limits:</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">__DNS__MEMORY__LIMIT__</span></span><br><span class="line">          <span class="attr">requests:</span></span><br><span class="line">            <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">            <span class="attr">memory:</span> <span class="string">70Mi</span></span><br><span class="line">        <span class="attr">args:</span> [ <span class="string">&quot;-conf&quot;</span>, <span class="string">&quot;/etc/coredns/Corefile&quot;</span> ]</span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/etc/coredns</span></span><br><span class="line">          <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">53</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">dns</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">UDP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">53</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">dns-tcp</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">9153</span></span><br><span class="line">          <span class="attr">name:</span> <span class="string">metrics</span></span><br><span class="line">          <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">        <span class="attr">livenessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/health</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8080</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">          <span class="attr">initialDelaySeconds:</span> <span class="number">60</span></span><br><span class="line">          <span class="attr">timeoutSeconds:</span> <span class="number">5</span></span><br><span class="line">          <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">          <span class="attr">failureThreshold:</span> <span class="number">5</span></span><br><span class="line">        <span class="attr">readinessProbe:</span></span><br><span class="line">          <span class="attr">httpGet:</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/ready</span></span><br><span class="line">            <span class="attr">port:</span> <span class="number">8181</span></span><br><span class="line">            <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">        <span class="attr">securityContext:</span></span><br><span class="line">          <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">false</span></span><br><span class="line">          <span class="attr">capabilities:</span></span><br><span class="line">            <span class="attr">add:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="attr">drop:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">          <span class="attr">readOnlyRootFilesystem:</span> <span class="literal">true</span></span><br><span class="line">      <span class="attr">dnsPolicy:</span> <span class="string">Default</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">          <span class="attr">configMap:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">coredns</span></span><br><span class="line">            <span class="attr">items:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">key:</span> <span class="string">Corefile</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">Corefile</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">kube-dns</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">kube-system</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">prometheus.io/port:</span> <span class="string">&quot;9153&quot;</span></span><br><span class="line">    <span class="attr">prometheus.io/scrape:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-dns</span></span><br><span class="line">    <span class="attr">kubernetes.io/cluster-service:</span> <span class="string">&quot;true&quot;</span></span><br><span class="line">    <span class="attr">addonmanager.kubernetes.io/mode:</span> <span class="string">Reconcile</span></span><br><span class="line">    <span class="attr">kubernetes.io/name:</span> <span class="string">&quot;CoreDNS&quot;</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">k8s-app:</span> <span class="string">kube-dns</span></span><br><span class="line">    <span class="comment"># clusterIP：dns地址</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">__DNS__SERVER__</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dns</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">53</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">UDP</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">dns-tcp</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">53</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">metrics</span></span><br><span class="line">    <span class="attr">port:</span> <span class="number">9153</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><p>修改上面官方配置文件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># mkdir -p /data/k8s-yaml/coredns &amp;&amp; cd $_</span></span><br><span class="line">root@k8s-master1:/data/k8s-yaml/coredns<span class="comment"># vim coredns-1.9.3.yaml</span></span><br><span class="line"><span class="comment"># __MACHINE_GENERATED_WARNING__</span></span><br><span class="line"></span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ServiceAccount</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">      kubernetes.io/cluster-service: <span class="string">&quot;true&quot;</span></span><br><span class="line">      addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">  name: system:coredns</span><br><span class="line">rules:</span><br><span class="line">- apiGroups:</span><br><span class="line">  - <span class="string">&quot;&quot;</span></span><br><span class="line">  resources:</span><br><span class="line">  - endpoints</span><br><span class="line">  - services</span><br><span class="line">  - pods</span><br><span class="line">  - namespaces</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">- apiGroups:</span><br><span class="line">  - discovery.k8s.io</span><br><span class="line">  resources:</span><br><span class="line">  - endpointslices</span><br><span class="line">  verbs:</span><br><span class="line">  - list</span><br><span class="line">  - watch</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: <span class="string">&quot;true&quot;</span></span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">    addonmanager.kubernetes.io/mode: EnsureExists</span><br><span class="line">  name: system:coredns</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:coredns</span><br><span class="line">subjects:</span><br><span class="line">- kind: ServiceAccount</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: ConfigMap</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">      addonmanager.kubernetes.io/mode: EnsureExists</span><br><span class="line">data:</span><br><span class="line">  Corefile: |</span><br><span class="line">    .:53 &#123;</span><br><span class="line">    <span class="comment"># errors:错误信息标准输出</span></span><br><span class="line">        errors</span><br><span class="line">        <span class="comment"># 心跳检测，检测服务是否存活，在CoreDNS的http://localhost:8080/health端口提供CoreDNS服务的健康报告</span></span><br><span class="line">        health &#123;</span><br><span class="line">            lameduck 5s</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># 监听8181端口，当coredns的插件已经就绪时，访问该接口会返回200 OK</span></span><br><span class="line">        ready</span><br><span class="line">        kubernetes zhangg.com in-addr.arpa ip6.arpa &#123;</span><br><span class="line">            pods insecure</span><br><span class="line">            fallthrough in-addr.arpa ip6.arpa</span><br><span class="line">            ttl 30</span><br><span class="line">        &#125;</span><br><span class="line">        prometheus :9153</span><br><span class="line">        <span class="comment"># forward就表示coredns解析不了的dns域名往哪里转发。可以指向公司内部dns地址</span></span><br><span class="line">        forward . 223.6.6.6 &#123;</span><br><span class="line">            max_concurrent 1000</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"># dns缓存，如果第一次请求，先去etcd查询再用coredns缓存30s，如果30s内再有请求访问直接通过缓存返回</span></span><br><span class="line">        cache 30</span><br><span class="line">        <span class="comment"># 检测域名解析是否有死循环，如coredns转发给内网DNS服务器，而内网服务器又转发给coredns，如果发现解析时死循环，则强制终止coredns进程（kubernetes会重建），如果不加该参数可能会导致coredns资源利用率非常高甚至卡死</span></span><br><span class="line">        loop</span><br><span class="line">        <span class="comment"># 检测corefile是否更改，再重新编辑configmap配置后，默认2分钟会优雅的自动加载新的配置</span></span><br><span class="line">        reload</span><br><span class="line">        <span class="comment"># 轮询DNS域名解析，如果一个域名存在多个记录则轮询解析</span></span><br><span class="line">        loadbalance</span><br><span class="line">    &#125;</span><br><span class="line">---</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  name: coredns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">&quot;true&quot;</span></span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">    kubernetes.io/name: <span class="string">&quot;CoreDNS&quot;</span></span><br><span class="line">spec:</span><br><span class="line">  <span class="comment"># replicas: not specified here:</span></span><br><span class="line">  <span class="comment"># 1. In order to make Addon Manager do not reconcile this replicas parameter.</span></span><br><span class="line">  <span class="comment"># 2. Default is 1.</span></span><br><span class="line">  <span class="comment"># 3. Will be tuned in real time if DNS horizontal auto-scaling is turned on.</span></span><br><span class="line">  <span class="comment"># 这里没有设置副本数，但是默认的副本数是1，如果域名解析慢的话可能是dns的pod资源配置比较低，这样的话可以微调一下配置，或者增加dns的pod副本数，从而减轻1个dns的pod域名解析压力。</span></span><br><span class="line">  replicas: 1</span><br><span class="line">  strategy:</span><br><span class="line">    <span class="built_in">type</span>: RollingUpdate</span><br><span class="line">    rollingUpdate:</span><br><span class="line">      maxUnavailable: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      k8s-app: kube-dns</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        k8s-app: kube-dns</span><br><span class="line">    spec:</span><br><span class="line">      securityContext:</span><br><span class="line">        seccompProfile:</span><br><span class="line">          <span class="built_in">type</span>: RuntimeDefault</span><br><span class="line">      priorityClassName: system-cluster-critical</span><br><span class="line">      serviceAccountName: coredns</span><br><span class="line">      affinity:</span><br><span class="line">        podAntiAffinity:</span><br><span class="line">          preferredDuringSchedulingIgnoredDuringExecution:</span><br><span class="line">          - weight: 100</span><br><span class="line">            podAffinityTerm:</span><br><span class="line">              labelSelector:</span><br><span class="line">                matchExpressions:</span><br><span class="line">                  - key: k8s-app</span><br><span class="line">                    operator: In</span><br><span class="line">                    values: [<span class="string">&quot;kube-dns&quot;</span>]</span><br><span class="line">              topologyKey: kubernetes.io/hostname</span><br><span class="line">      tolerations:</span><br><span class="line">        - key: <span class="string">&quot;CriticalAddonsOnly&quot;</span></span><br><span class="line">          operator: <span class="string">&quot;Exists&quot;</span></span><br><span class="line">      nodeSelector:</span><br><span class="line">        kubernetes.io/os: linux</span><br><span class="line">      containers:</span><br><span class="line">      - name: coredns</span><br><span class="line">      <span class="comment"># 镜像地址默认是官方的，需要更换成国内镜像源或者自己提前下载好到自己的私有仓库</span></span><br><span class="line">        image: harbor.zhangg.com/k8s-base/coredns:v1.9.3</span><br><span class="line">        imagePullPolicy: IfNotPresent</span><br><span class="line">        resources:</span><br><span class="line">        <span class="comment"># 限制coredns的可使用资源</span></span><br><span class="line">          limits:</span><br><span class="line">            cpu: 1000m</span><br><span class="line">            memory: 512Mi</span><br><span class="line">          requests:</span><br><span class="line">            cpu: 200m</span><br><span class="line">            memory: 256Mi</span><br><span class="line">        args: [ <span class="string">&quot;-conf&quot;</span>, <span class="string">&quot;/etc/coredns/Corefile&quot;</span> ]</span><br><span class="line">        volumeMounts:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          mountPath: /etc/coredns</span><br><span class="line">          readOnly: <span class="literal">true</span></span><br><span class="line">        ports:</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns</span><br><span class="line">          protocol: UDP</span><br><span class="line">        - containerPort: 53</span><br><span class="line">          name: dns-tcp</span><br><span class="line">          protocol: TCP</span><br><span class="line">        - containerPort: 9153</span><br><span class="line">          name: metrics</span><br><span class="line">          protocol: TCP</span><br><span class="line">        livenessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /health</span><br><span class="line">            port: 8080</span><br><span class="line">            scheme: HTTP</span><br><span class="line">          initialDelaySeconds: 60</span><br><span class="line">          timeoutSeconds: 5</span><br><span class="line">          successThreshold: 1</span><br><span class="line">          failureThreshold: 5</span><br><span class="line">        readinessProbe:</span><br><span class="line">          httpGet:</span><br><span class="line">            path: /ready</span><br><span class="line">            port: 8181</span><br><span class="line">            scheme: HTTP</span><br><span class="line">        securityContext:</span><br><span class="line">          allowPrivilegeEscalation: <span class="literal">false</span></span><br><span class="line">          capabilities:</span><br><span class="line">            add:</span><br><span class="line">            - NET_BIND_SERVICE</span><br><span class="line">            drop:</span><br><span class="line">            - ALL</span><br><span class="line">          readOnlyRootFilesystem: <span class="literal">true</span></span><br><span class="line">      dnsPolicy: Default</span><br><span class="line">      volumes:</span><br><span class="line">        - name: config-volume</span><br><span class="line">          configMap:</span><br><span class="line">            name: coredns</span><br><span class="line">            items:</span><br><span class="line">            - key: Corefile</span><br><span class="line">              path: Corefile</span><br><span class="line">---</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  name: kube-dns</span><br><span class="line">  namespace: kube-system</span><br><span class="line">  annotations:</span><br><span class="line">    prometheus.io/port: <span class="string">&quot;9153&quot;</span></span><br><span class="line">    prometheus.io/scrape: <span class="string">&quot;true&quot;</span></span><br><span class="line">  labels:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    kubernetes.io/cluster-service: <span class="string">&quot;true&quot;</span></span><br><span class="line">    addonmanager.kubernetes.io/mode: Reconcile</span><br><span class="line">    kubernetes.io/name: <span class="string">&quot;CoreDNS&quot;</span></span><br><span class="line">spec:</span><br><span class="line">  selector:</span><br><span class="line">    k8s-app: kube-dns</span><br><span class="line">    <span class="comment"># clusterIP：dns地址</span></span><br><span class="line">  clusterIP: 10.100.0.2</span><br><span class="line">  ports:</span><br><span class="line">  - name: dns</span><br><span class="line">    port: 53</span><br><span class="line">    protocol: UDP</span><br><span class="line">  - name: dns-tcp</span><br><span class="line">    port: 53</span><br><span class="line">    protocol: TCP</span><br><span class="line">  - name: metrics</span><br><span class="line">    port: 9153</span><br><span class="line">    protocol: TCP</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建coredns服务</span></span><br><span class="line">root@k8s-master1:/data/k8s-yaml/coredns<span class="comment"># kubectl apply -f coredns-1.9.3.yaml</span></span><br><span class="line">serviceaccount/coredns created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/system:coredns created</span><br><span class="line">configmap/coredns created</span><br><span class="line">deployment.apps/coredns created</span><br><span class="line">service/kube-dns created</span><br><span class="line"></span><br><span class="line">root@k8s-master1:/data/k8s-yaml/coredns<span class="comment"># kubectl get pod -A</span></span><br><span class="line">NAMESPACE     NAME                                       READY   STATUS    RESTARTS   AGE</span><br><span class="line">default       net-test1                                  1/1     Running   0          64m</span><br><span class="line">default       net-test2                                  1/1     Running   0          64m</span><br><span class="line">kube-system   calico-kube-controllers-6767cc9c5f-nlf4p   1/1     Running   0          68m</span><br><span class="line">kube-system   calico-node-9tnmr                          1/1     Running   0          68m</span><br><span class="line">kube-system   calico-node-cn4zv                          1/1     Running   0          68m</span><br><span class="line">kube-system   calico-node-jvz68                          1/1     Running   0          68m</span><br><span class="line">kube-system   calico-node-kc6c6                          1/1     Running   0          68m</span><br><span class="line">kube-system   calico-node-wh2nb                          1/1     Running   0          68m</span><br><span class="line">kube-system   coredns-65dc99c6d5-ndjwc                   1/1     Running   0          6s</span><br></pre></td></tr></table></figure><p><img src="/images/test-coredns.png"></p><p><strong>注意：</strong></p><blockquote><p>Service的全称格式：svc名称.namepsace名称.svc.domain后缀</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>利用kubeasz工具 二进制安装k8s高可用集群</title>
      <link href="/post/e81f2dbc.html"/>
      <url>/post/e81f2dbc.html</url>
      
        <content type="html"><![CDATA[<h1 id="基础环境准备"><a href="#基础环境准备" class="headerlink" title="基础环境准备"></a>基础环境准备</h1><h2 id="集群机器的规划"><a href="#集群机器的规划" class="headerlink" title="集群机器的规划"></a>集群机器的规划</h2><table><thead><tr><th>角色</th><th>节点数量</th><th>节点IP</th><th>描述</th></tr></thead><tbody><tr><td>部署节点</td><td>1</td><td>10.0.0.100</td><td>主要就是运行ansible、ezctl命令，建议用一台单独机器部署</td></tr><tr><td>master节点</td><td>3</td><td>10.0.0.100、10.0.0.101、10.0.0.102</td><td>k8s高可用集群至少要2个，不过一般都是奇数个</td></tr><tr><td>etcd节点</td><td>3</td><td>10.0.0.103、10.0.0.104、10.0.0.105</td><td>注意etcd集群的话是需要1，3，5….奇数个节点，大部分情况都是和master节点复用</td></tr><tr><td>Harbor</td><td>1</td><td>10.0.0.106</td><td>存放镜像，方便以后从自己的镜像仓库下载</td></tr><tr><td>node节点</td><td>2</td><td>10.0.0.107、10.0.0.108</td><td>运行应用负载的节点，这个可以根据想要在提升机器的配置或者增加工作节点</td></tr><tr><td>HA节点</td><td>2</td><td>10.0.0.109&#x2F;10.0.0.200、10.0.0.110&#x2F;10.0.0.200</td><td>主要负责api-server的负载均衡，配合keepalived来实现api-server的高可用</td></tr></tbody></table><p><strong>机器配置（建议）：</strong></p><ul><li>master节点：至少4C 8G，磁盘的话100G，如果有多更好；</li><li>worker节点：建议8C 32G，磁盘的话至少200G以上；</li></ul><h2 id="安装环境准备"><a href="#安装环境准备" class="headerlink" title="安装环境准备"></a>安装环境准备</h2><ol><li>在要部署的节点上安装ansible及准备好ssh免密登录</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在部署节点安装一下ansible、sshpass（这个所有节点都要装）</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># apt -y install ansible sshpass</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># ansible --version</span></span><br><span class="line">ansible 2.9.6</span><br><span class="line">  config file = /etc/ansible/ansible.cfg</span><br><span class="line">  configured module search path = [<span class="string">&#x27;/root/.ansible/plugins/modules&#x27;</span>, <span class="string">&#x27;/usr/share/ansible/plugins/modules&#x27;</span>]</span><br><span class="line">  ansible python module location = /usr/lib/python3/dist-packages/ansible</span><br><span class="line">  executable location = /usr/bin/ansible</span><br><span class="line">  python version = 3.8.10 (default, Jun 22 2022, 20:18:18) [GCC 9.4.0]</span><br><span class="line"><span class="comment"># 生成密钥对</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># ssh-keygen</span></span><br><span class="line"><span class="comment"># 分发秘钥的脚本</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># vim copy-sshid.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">  </span><br><span class="line">IP=<span class="string">&quot;</span></span><br><span class="line"><span class="string">10.0.0.100</span></span><br><span class="line"><span class="string">10.0.0.101</span></span><br><span class="line"><span class="string">10.0.0.102</span></span><br><span class="line"><span class="string">10.0.0.103</span></span><br><span class="line"><span class="string">10.0.0.104</span></span><br><span class="line"><span class="string">10.0.0.105</span></span><br><span class="line"><span class="string">10.0.0.106</span></span><br><span class="line"><span class="string">10.0.0.107</span></span><br><span class="line"><span class="string">10.0.0.108</span></span><br><span class="line"><span class="string">10.0.0.109</span></span><br><span class="line"><span class="string">10.0.0.110</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> node <span class="keyword">in</span> <span class="variable">$&#123;IP&#125;</span>;<span class="keyword">do</span></span><br><span class="line">  sshpass -p zhangg666 ssh-copy-id <span class="variable">$&#123;node&#125;</span> -o StrictHostKeyChecking=no</span><br><span class="line">  <span class="keyword">if</span> [ $? -eq 0 ];<span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;node&#125;</span> 秘钥copy完成&quot;</span></span><br><span class="line">    ssh <span class="variable">$&#123;node&#125;</span> <span class="string">&quot;echo &#x27;10.0.0.106 harbor.zhangg.com&#x27; &gt;&gt; /etc/hosts&quot;</span>                                                                                                                                                                                                                    </span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;node&#125;</span> 秘钥copy失败&quot;</span></span><br><span class="line">  <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># bash copy-sshid.sh</span></span><br></pre></td></tr></table></figure><ol start="2"><li>配置keepalived和haproxy(nginx)</li></ol><ul><li>在两台HA主机都安装keepalived</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># HA1主机的配置</span></span><br><span class="line">root@ha1:~<span class="comment"># ehco &#x27;net.ipv4.ip_nonlocal_bind = 1&#x27; &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line">root@ha1:~<span class="comment"># apt -y install keepalived</span></span><br><span class="line">root@ha1:~<span class="comment"># cp /usr/share/doc/keepalived/samples/keepalived.conf.sample /etc/keepalived/keepalived.conf</span></span><br><span class="line">root@ha1:~<span class="comment"># vim /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id ha1.zhangg.com</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">   vrrp_mcast_group4 234.0.0.100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state MASTER</span><br><span class="line">    interface ens32</span><br><span class="line">    virtual_router_id 99</span><br><span class="line">    priority 100</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass zhangg666</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.200 dev ens32 label ens32:1</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">root@ha1:~<span class="comment"># systemctl restart keepalived.service</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># HA2主机的配置</span></span><br><span class="line">root@ha2:~<span class="comment"># ehco &#x27;net.ipv4.ip_nonlocal_bind = 1&#x27; &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line">root@ha2:~<span class="comment"># apt -y install keepalived</span></span><br><span class="line">root@ha2:~<span class="comment"># cp /usr/share/doc/keepalived/samples/keepalived.conf.sample /etc/keepalived/keepalived.conf</span></span><br><span class="line">root@ha2:~<span class="comment"># vim /etc/keepalived/keepalived.conf</span></span><br><span class="line">! Configuration File <span class="keyword">for</span> keepalived</span><br><span class="line"></span><br><span class="line">global_defs &#123;</span><br><span class="line">   notification_email &#123;</span><br><span class="line">     acassen</span><br><span class="line">   &#125;</span><br><span class="line">   notification_email_from Alexandre.Cassen@firewall.loc</span><br><span class="line">   smtp_server 192.168.200.1</span><br><span class="line">   smtp_connect_timeout 30</span><br><span class="line">   router_id ha2.zhangg.com</span><br><span class="line">   vrrp_skip_check_adv_addr</span><br><span class="line">   vrrp_garp_interval 0</span><br><span class="line">   vrrp_gna_interval 0</span><br><span class="line">   vrrp_mcast_group4 234.0.0.100</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vrrp_instance VI_1 &#123;</span><br><span class="line">    state BACKUP</span><br><span class="line">    interface ens32</span><br><span class="line">    virtual_router_id 99</span><br><span class="line">    priority 80</span><br><span class="line">    advert_int 1</span><br><span class="line">    authentication &#123;</span><br><span class="line">        auth_type PASS</span><br><span class="line">        auth_pass zhangg666</span><br><span class="line">    &#125;</span><br><span class="line">    virtual_ipaddress &#123;</span><br><span class="line">        10.0.0.200 dev ens32 label ens32:1                                                                                                                                                                                                                                             </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">root@ha2:~<span class="comment"># systemctl restart keepalived.service</span></span><br></pre></td></tr></table></figure><p>当上面的两台HA主机配置完后，我们查看一下VIP是否在ha1主机上，如果在的话我们可以测试一下关了ha1的keepalived服务，再看一下那VIP是否会漂移到ha2主机上。</p><ul><li>在两台HA主机都安装haproxy或者nginx</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 两个HA主机安装haproxy，两个的配置是一样的</span></span><br><span class="line">apt -y install haproxy</span><br><span class="line"><span class="comment"># 在之前的配置最后再加上下面的内容</span></span><br><span class="line">vim /etc/haproxy/haproxy.cfg</span><br><span class="line"><span class="comment"># 配置状态页</span></span><br><span class="line">listen stats</span><br><span class="line">    mode http</span><br><span class="line">    <span class="built_in">bind</span> 0.0.0.0:9999</span><br><span class="line">    stats <span class="built_in">enable</span></span><br><span class="line">    <span class="built_in">log</span> global</span><br><span class="line">    stats uri /haproxy-status</span><br><span class="line">    stats auth admin:123456</span><br><span class="line"></span><br><span class="line">listen  kubernetes-api-6443</span><br><span class="line">    <span class="built_in">bind</span> 10.0.0.200:6443</span><br><span class="line">    mode tcp</span><br><span class="line">    server 10.0.0.100 10.0.0.100:6443 check inter 3s fall 3 rise 5</span><br><span class="line">    server 10.0.0.101 10.0.0.101:6443 check inter 3s fall 3 rise 5 </span><br><span class="line">    server 10.0.0.102 10.0.0.102:6443 check inter 3s fall 3 rise 5</span><br></pre></td></tr></table></figure><ol start="3"><li>配置harbor并支持https</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装docker</span></span><br><span class="line">root@harbor:~<span class="comment"># vim install_docker_ubuntu.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">set</span> -e</span><br><span class="line">UBUNTU_VERSION=$(lsb_release -r | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line">UBUNTU_CODENAME=$(lsb_release -c | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">apt update</span><br><span class="line">apt install -y \</span><br><span class="line">    apt-transport-https \</span><br><span class="line">    ca-certificates \</span><br><span class="line">    curl \</span><br><span class="line">    software-properties-common</span><br><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br><span class="line">apt-key fingerprint 0EBFCD88</span><br><span class="line">add-apt-repository \</span><br><span class="line">    <span class="string">&quot;deb [arch=amd64] https://download.docker.com/linux/ubuntu \</span></span><br><span class="line"><span class="string">    <span class="subst">$(lsb_release -cs)</span> \</span></span><br><span class="line"><span class="string">    stable&quot;</span></span><br><span class="line">apt update</span><br><span class="line">apt install -y docker-ce=5:20.10.23~3-0~ubuntu-$(lsb_release -cs) docker-ce-cli=5:20.10.23~3-0~ubuntu-$(lsb_release -cs)</span><br><span class="line"></span><br><span class="line"><span class="built_in">cat</span> &gt;&gt; /etc/docker/daemon.json &lt;&lt; <span class="string">EOF</span></span><br><span class="line"><span class="string">&#123; </span></span><br><span class="line"><span class="string">  &quot;registry-mirrors&quot;: [&quot;https://c51gf9he.mirror.aliyuncs.com&quot;],</span></span><br><span class="line"><span class="string">  &quot;exec-opts&quot;: [&quot;native.cgroupdriver=systemd&quot;],</span></span><br><span class="line"><span class="string">  &quot;live-restore&quot;: true,</span></span><br><span class="line"><span class="string">  &quot;log-driver&quot;: &quot;json-file&quot;,</span></span><br><span class="line"><span class="string">  &quot;log-opts&quot;: &#123;</span></span><br><span class="line"><span class="string">    &quot;max-size&quot;: &quot;100m&quot;,</span></span><br><span class="line"><span class="string">    &quot;max-file&quot;: &quot;3&quot;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  &quot;data-root&quot;: &quot;/data/docker/&quot;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"></span><br><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker.service</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;--------------------------------------&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;install sucess !!!&quot;</span></span><br><span class="line">root@harbor:~<span class="comment"># bash install_docker_ubuntu.sh</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装docker-compose</span></span><br><span class="line">root@harbor:~<span class="comment"># vim install_docker-compose.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">version=1.29.2</span><br><span class="line">curl -L <span class="string">&quot;https://github.com/docker/compose/releases/download/<span class="variable">$version</span>/docker-compose-<span class="subst">$(uname -s)</span>-<span class="subst">$(uname -m)</span>&quot;</span> -o /usr/bin/docker-compose</span><br><span class="line"></span><br><span class="line"><span class="built_in">chmod</span> +x /usr/bin/docker-compose</span><br><span class="line">docker-compose --version</span><br><span class="line">root@harbor:~<span class="comment"># bash install_docker-compose.sh</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装harbor</span></span><br><span class="line">root@harbor:~<span class="comment"># mkdir -p /data/service &amp;&amp; cd $_</span></span><br><span class="line">root@harbor:/data/service<span class="comment"># wget https://github.com/goharbor/harbor/releases/download/v2.5.4/harbor-offline-installer-v2.5.4.tgz</span></span><br><span class="line">root@harbor:/data/service<span class="comment"># tar xf harbor-offline-installer-v2.5.4.tgz &amp;&amp; rm -f harbor-offline-installer-v2.5.4.tgz &amp;&amp; cd harbor</span></span><br><span class="line">root@harbor:/data/service/harbor<span class="comment"># mkdir certs</span></span><br><span class="line">root@harbor:/data/service/harbor<span class="comment"># openssl genrsa -out /data/service/harbor/certs/harbor.zhangg.com.key</span></span><br><span class="line">root@harbor:/data/service/harbor<span class="comment"># openssl req -x509 -new -nodes -key /data/service/harbor/certs/harbor.zhangg.com.key -subj &quot;/CN=harbor.zhangg.com&quot; -days 365 -out /data/service/harbor/certs/harbor.zhangg.com.crt</span></span><br><span class="line">root@harbor:/data/service/harbor<span class="comment"># cp harbor.yml.tmpl harbor.yml</span></span><br><span class="line">root@harbor:/data/service/harbor<span class="comment"># vim harbor.yml</span></span><br><span class="line"><span class="comment">#修改下面修改配置</span></span><br><span class="line">hostname: harbor.zhangg.com</span><br><span class="line">http:</span><br><span class="line">  port: 80</span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: /data/service/harbor/certs/harbor.zhangg.com.crt</span><br><span class="line">  private_key: /data/service/harbor/certs/harbor.zhangg.com.key</span><br><span class="line">harbor_admin_password: zhangg666</span><br><span class="line">root@harbor:/data/service/harbor<span class="comment"># ./install.sh --with-trivy</span></span><br></pre></td></tr></table></figure><ol start="4"><li>准备kubeasz工具</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># export release=3.4.5</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># wget https://github.com/easzlab/kubeasz/releases/download/$&#123;release&#125;/ezdown</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># chmod +x ezdown</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># ./ezdown --help</span></span><br><span class="line">./ezdown: illegal option -- -</span><br><span class="line">Usage: ezdown [options] [args]</span><br><span class="line">  option:</span><br><span class="line">    -C         stop&amp;clean all <span class="built_in">local</span> containers</span><br><span class="line">    -D         download default binaries/images into <span class="string">&quot;/etc/kubeasz&quot;</span></span><br><span class="line">    -P         download system packages <span class="keyword">for</span> offline installing</span><br><span class="line">    -R         download Registry(harbor) offline installer</span><br><span class="line">    -S         start kubeasz <span class="keyword">in</span> a container</span><br><span class="line">    -X         download extra images</span><br><span class="line">    -a &lt;arc&gt;   <span class="built_in">set</span> architecture, default auto-detected by (<span class="built_in">uname</span> -m)</span><br><span class="line">    -d &lt;ver&gt;   <span class="built_in">set</span> docker-ce version, default <span class="string">&quot;20.10.22&quot;</span></span><br><span class="line">    -e &lt;ver&gt;   <span class="built_in">set</span> kubeasz-ext-bin version, default <span class="string">&quot;1.6.6&quot;</span></span><br><span class="line">    -k &lt;ver&gt;   <span class="built_in">set</span> kubeasz-k8s-bin version, default <span class="string">&quot;v1.25.6&quot;</span></span><br><span class="line">    -m &lt;str&gt;   <span class="built_in">set</span> docker registry mirrors, default <span class="string">&quot;CN&quot;</span>(used <span class="keyword">in</span> Mainland,China)</span><br><span class="line">    -p &lt;ver&gt;   <span class="built_in">set</span> kubeasz-sys-pkg version, default <span class="string">&quot;0.5.2&quot;</span></span><br><span class="line">    -z &lt;ver&gt;   <span class="built_in">set</span> kubeasz version, default <span class="string">&quot;3.4.5&quot;</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># ./ezdown -D</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># ls /etc/kubeasz/down/</span></span><br><span class="line">calico_v3.24.5.tar  coredns_1.9.3.tar  dashboard_v2.7.0.tar  docker-20.10.23.tgz  k8s-dns-node-cache_1.22.13.tar  kubeasz_3.4.5.tar  metrics-scraper_v1.0.8.tar  metrics-server_v0.5.2.tar  pause_3.9.tar  registry-2.tar</span><br></pre></td></tr></table></figure><ol start="5"><li>生成hosts和config文件并修改</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:~<span class="comment"># cd /etc/kubeasz/</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl new zhangg-k8s</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ls /etc/kubeasz/clusters/zhangg-k8s/</span></span><br><span class="line">config.yml  hosts</span><br></pre></td></tr></table></figure><ul><li>修改hosts文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># vim clusters/zhangg-k8s/hosts</span></span><br><span class="line"><span class="comment"># &#x27;etcd&#x27; cluster should have odd member(s) (1,3,5,...)</span></span><br><span class="line">[etcd]</span><br><span class="line">10.0.0.103</span><br><span class="line">10.0.0.104</span><br><span class="line">10.0.0.105</span><br><span class="line"></span><br><span class="line"><span class="comment"># master node(s), set unique &#x27;k8s_nodename&#x27; for each node</span></span><br><span class="line"><span class="comment"># CAUTION: &#x27;k8s_nodename&#x27; must consist of lower case alphanumeric characters, &#x27;-&#x27; or &#x27;.&#x27;,</span></span><br><span class="line"><span class="comment"># and must start and end with an alphanumeric character</span></span><br><span class="line">[kube_master]</span><br><span class="line">10.0.0.100</span><br><span class="line">10.0.0.101</span><br><span class="line">10.0.0.102</span><br><span class="line"></span><br><span class="line"><span class="comment"># work node(s), set unique &#x27;k8s_nodename&#x27; for each node</span></span><br><span class="line"><span class="comment"># CAUTION: &#x27;k8s_nodename&#x27; must consist of lower case alphanumeric characters, &#x27;-&#x27; or &#x27;.&#x27;,</span></span><br><span class="line"><span class="comment"># and must start and end with an alphanumeric character</span></span><br><span class="line">[kube_node]</span><br><span class="line">10.0.0.107</span><br><span class="line">10.0.0.108</span><br><span class="line"></span><br><span class="line"><span class="comment"># [optional] harbor server, a private docker registry</span></span><br><span class="line"><span class="comment"># &#x27;NEW_INSTALL&#x27;: &#x27;true&#x27; to install a harbor server; &#x27;false&#x27; to integrate with existed one</span></span><br><span class="line">[harbor]</span><br><span class="line"><span class="comment">#192.168.1.8 NEW_INSTALL=false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [optional] loadbalance for accessing k8s from outside</span></span><br><span class="line">[ex_lb]</span><br><span class="line">192.168.1.6 LB_ROLE=backup EX_APISERVER_VIP=10.0.0.200 EX_APISERVER_PORT=8443</span><br><span class="line">192.168.1.7 LB_ROLE=master EX_APISERVER_VIP=10.0.0.200 EX_APISERVER_PORT=8443</span><br><span class="line"></span><br><span class="line"><span class="comment"># [optional] ntp server for the cluster</span></span><br><span class="line">[chrony]</span><br><span class="line"><span class="comment">#192.168.1.1</span></span><br><span class="line"></span><br><span class="line">[all:vars]</span><br><span class="line"><span class="comment"># --------- Main Variables ---------------</span></span><br><span class="line"><span class="comment"># Secure port for apiservers</span></span><br><span class="line">SECURE_PORT=<span class="string">&quot;6443&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cluster container-runtime supported: docker, containerd</span></span><br><span class="line"><span class="comment"># if k8s version &gt;= 1.24, docker is not supported</span></span><br><span class="line">CONTAINER_RUNTIME=<span class="string">&quot;containerd&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Network plugins supported: calico, flannel, kube-router, cilium, kube-ovn</span></span><br><span class="line">CLUSTER_NETWORK=<span class="string">&quot;calico&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Service proxy mode of kube-proxy: &#x27;iptables&#x27; or &#x27;ipvs&#x27;</span></span><br><span class="line">PROXY_MODE=<span class="string">&quot;ipvs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># K8S Service CIDR, not overlap with node(host) networking</span></span><br><span class="line">SERVICE_CIDR=<span class="string">&quot;10.100.0.0/16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cluster CIDR (Pod CIDR), not overlap with node(host) networking</span></span><br><span class="line">CLUSTER_CIDR=<span class="string">&quot;10.200.0.0/16&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># NodePort Range</span></span><br><span class="line">NODE_PORT_RANGE=<span class="string">&quot;30000-65000&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Cluster DNS Domain</span></span><br><span class="line">CLUSTER_DNS_DOMAIN=<span class="string">&quot;zhangg.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># -------- Additional Variables (don&#x27;t change the default value right now) ---</span></span><br><span class="line"><span class="comment"># Binaries Directory</span></span><br><span class="line">bin_dir=<span class="string">&quot;/usr/bin&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Deploy Directory (kubeasz workspace)</span></span><br><span class="line">base_dir=<span class="string">&quot;/etc/kubeasz&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Directory for a specific cluster</span></span><br><span class="line">cluster_dir=<span class="string">&quot;&#123;&#123; base_dir &#125;&#125;/clusters/zhangg-k8s&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CA and other components cert/key Directory</span></span><br><span class="line">ca_dir=<span class="string">&quot;/etc/kubernetes/ssl&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Default &#x27;k8s_nodename&#x27; is empty</span></span><br><span class="line">k8s_nodename=<span class="string">&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><ul><li>修改config文件</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># vim clusters/zhangg-k8s/config.yml</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># prepare</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># 可选离线安装系统软件包 (offline|online)</span></span><br><span class="line">INSTALL_SOURCE: <span class="string">&quot;online&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 可选进行系统安全加固 github.com/dev-sec/ansible-collection-hardening</span></span><br><span class="line">OS_HARDEN: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置时间源服务器【重要：集群内机器时间必须同步】</span></span><br><span class="line">ntp_servers:</span><br><span class="line">  - <span class="string">&quot;ntp1.aliyun.com&quot;</span></span><br><span class="line">  - <span class="string">&quot;time1.cloud.tencent.com&quot;</span></span><br><span class="line">  - <span class="string">&quot;0.cn.pool.ntp.org&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置允许内部时间同步的网络段，比如&quot;10.0.0.0/8&quot;，默认全部允许</span></span><br><span class="line">local_network: <span class="string">&quot;0.0.0.0/0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:deploy</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># default: ca will expire in 100 years</span></span><br><span class="line"><span class="comment"># default: certs issued by the ca will expire in 50 years</span></span><br><span class="line">CA_EXPIRY: <span class="string">&quot;876000h&quot;</span></span><br><span class="line">CERT_EXPIRY: <span class="string">&quot;876000h&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># force to recreate CA and other certs, not suggested to set &#x27;true&#x27;</span></span><br><span class="line">CHANGE_CA: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># kubeconfig 配置参数</span></span><br><span class="line">CLUSTER_NAME: <span class="string">&quot;cluster1&quot;</span></span><br><span class="line">CONTEXT_NAME: <span class="string">&quot;context-&#123;&#123; CLUSTER_NAME &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s version</span></span><br><span class="line">K8S_VER: <span class="string">&quot;1.25.6&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># set unique &#x27;k8s_nodename&#x27; for each node, if not set(default:&#x27;&#x27;) ip add will be used</span></span><br><span class="line"><span class="comment"># CAUTION: &#x27;k8s_nodename&#x27; must consist of lower case alphanumeric characters, &#x27;-&#x27; or &#x27;.&#x27;,</span></span><br><span class="line"><span class="comment"># and must start and end with an alphanumeric character (e.g. &#x27;example.com&#x27;),</span></span><br><span class="line"><span class="comment"># regex used for validation is &#x27;[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*&#x27;</span></span><br><span class="line">K8S_NODENAME: <span class="string">&quot;&#123;%- if k8s_nodename != &#x27;&#x27; -%&#125; \</span></span><br><span class="line"><span class="string">                    &#123;&#123; k8s_nodename|replace(&#x27;_&#x27;, &#x27;-&#x27;)|lower &#125;&#125; \</span></span><br><span class="line"><span class="string">               &#123;%- else -%&#125; \</span></span><br><span class="line"><span class="string">                    &#123;&#123; inventory_hostname &#125;&#125; \</span></span><br><span class="line"><span class="string">               &#123;%- endif -%&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:etcd</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># 设置不同的wal目录，可以避免磁盘io竞争，提高性能</span></span><br><span class="line">ETCD_DATA_DIR: <span class="string">&quot;/data/service/etcd&quot;</span></span><br><span class="line">ETCD_WAL_DIR: <span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:runtime [containerd,docker]</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># ------------------------------------------- containerd</span></span><br><span class="line"><span class="comment"># [.]启用容器仓库镜像</span></span><br><span class="line">ENABLE_MIRROR_REGISTRY: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [containerd]基础容器镜像</span></span><br><span class="line">SANDBOX_IMAGE: <span class="string">&quot;harbor.zhangg.com/k8s-base/pause:3.9&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [containerd]容器持久化存储目录</span></span><br><span class="line">CONTAINERD_STORAGE_DIR: <span class="string">&quot;/data/containerd&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------- docker</span></span><br><span class="line"><span class="comment"># [docker]容器存储目录</span></span><br><span class="line">DOCKER_STORAGE_DIR: <span class="string">&quot;/data/docker&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [docker]开启Restful API</span></span><br><span class="line">ENABLE_REMOTE_API: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [docker]信任的HTTP仓库</span></span><br><span class="line">INSECURE_REG: <span class="string">&#x27;[&quot;http://easzlab.io.local:5000&quot;]&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:kube-master</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># k8s 集群 master 节点证书配置，可以添加多个ip和域名（比如增加公网ip和域名）</span></span><br><span class="line">MASTER_CERT_HOSTS:</span><br><span class="line">  - <span class="string">&quot;10.1.1.1&quot;</span></span><br><span class="line">  - <span class="string">&quot;k8s.easzlab.io&quot;</span></span><br><span class="line">  <span class="comment">#- &quot;www.test.com&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># node 节点上 pod 网段掩码长度（决定每个节点最多能分配的pod ip地址）</span></span><br><span class="line"><span class="comment"># 如果flannel 使用 --kube-subnet-mgr 参数，那么它将读取该设置为每个节点分配pod网段</span></span><br><span class="line"><span class="comment"># https://github.com/coreos/flannel/issues/847</span></span><br><span class="line">NODE_CIDR_LEN: 24</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:kube-node</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># Kubelet 根目录</span></span><br><span class="line">KUBELET_ROOT_DIR: <span class="string">&quot;/data/kubelet&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># node节点最大pod 数</span></span><br><span class="line">MAX_PODS: 200</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置为kube组件（kubelet,kube-proxy,dockerd等）预留的资源量</span></span><br><span class="line"><span class="comment"># 数值设置详见templates/kubelet-config.yaml.j2</span></span><br><span class="line">KUBE_RESERVED_ENABLED: <span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># k8s 官方不建议草率开启 system-reserved, 除非你基于长期监控，了解系统的资源占用状况；</span></span><br><span class="line"><span class="comment"># 并且随着系统运行时间，需要适当增加资源预留，数值设置详见templates/kubelet-config.yaml.j2</span></span><br><span class="line"><span class="comment"># 系统预留设置基于 4c/8g 虚机，最小化安装系统服务，如果使用高性能物理机可以适当增加预留</span></span><br><span class="line"><span class="comment"># 另外，集群安装时候apiserver等资源占用会短时较大，建议至少预留1g内存</span></span><br><span class="line">SYS_RESERVED_ENABLED: <span class="string">&quot;no&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:network [flannel,calico,cilium,kube-ovn,kube-router]</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># ------------------------------------------- flannel</span></span><br><span class="line"><span class="comment"># [flannel]设置flannel 后端&quot;host-gw&quot;,&quot;vxlan&quot;等</span></span><br><span class="line">FLANNEL_BACKEND: <span class="string">&quot;vxlan&quot;</span></span><br><span class="line">DIRECT_ROUTING: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [flannel] </span></span><br><span class="line">flannel_ver: <span class="string">&quot;v0.19.2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------- calico</span></span><br><span class="line"><span class="comment"># [calico] IPIP隧道模式可选项有: [Always, CrossSubnet, Never],跨子网可以配置为Always与CrossSubnet(公有云建议使用always比较省事，其他的话需要修改各自公有云的网络配置，具体可以参考各个公有云说明)</span></span><br><span class="line"><span class="comment"># 其次CrossSubnet为隧道+BGP路由混合模式可以提升网络性能，同子网配置为Never即可.</span></span><br><span class="line">CALICO_IPV4POOL_IPIP: <span class="string">&quot;Always&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [calico]设置 calico-node使用的host IP，bgp邻居通过该地址建立，可手工指定也可以自动发现</span></span><br><span class="line">IP_AUTODETECTION_METHOD: <span class="string">&quot;can-reach=&#123;&#123; groups[&#x27;kube_master&#x27;][0] &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [calico]设置calico 网络 backend: brid, vxlan, none</span></span><br><span class="line">CALICO_NETWORKING_BACKEND: <span class="string">&quot;brid&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [calico]设置calico 是否使用route reflectors</span></span><br><span class="line"><span class="comment"># 如果集群规模超过50个节点，建议启用该特性</span></span><br><span class="line">CALICO_RR_ENABLED: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># CALICO_RR_NODES 配置route reflectors的节点，如果未设置默认使用集群master节点 </span></span><br><span class="line"><span class="comment"># CALICO_RR_NODES: [&quot;192.168.1.1&quot;, &quot;192.168.1.2&quot;]</span></span><br><span class="line">CALICO_RR_NODES: []</span><br><span class="line"></span><br><span class="line"><span class="comment"># [calico]更新支持calico 版本: [&quot;3.19&quot;, &quot;3.23&quot;]</span></span><br><span class="line">calico_ver: <span class="string">&quot;v3.24.5&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [calico]calico 主版本</span></span><br><span class="line">calico_ver_main: <span class="string">&quot;&#123;&#123; calico_ver.split(&#x27;.&#x27;)[0] &#125;&#125;.&#123;&#123; calico_ver.split(&#x27;.&#x27;)[1] &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------- cilium</span></span><br><span class="line"><span class="comment"># [cilium]镜像版本</span></span><br><span class="line">cilium_ver: <span class="string">&quot;1.12.4&quot;</span></span><br><span class="line">cilium_connectivity_check: <span class="literal">true</span></span><br><span class="line">cilium_hubble_enabled: <span class="literal">false</span></span><br><span class="line">cilium_hubble_ui_enabled: <span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------- kube-ovn</span></span><br><span class="line"><span class="comment"># [kube-ovn]选择 OVN DB and OVN Control Plane 节点，默认为第一个master节点</span></span><br><span class="line">OVN_DB_NODE: <span class="string">&quot;&#123;&#123; groups[&#x27;kube_master&#x27;][0] &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [kube-ovn]离线镜像tar包</span></span><br><span class="line">kube_ovn_ver: <span class="string">&quot;v1.5.3&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------------- kube-router</span></span><br><span class="line"><span class="comment"># [kube-router]公有云上存在限制，一般需要始终开启 ipinip；自有环境可以设置为 &quot;subnet&quot;</span></span><br><span class="line">OVERLAY_TYPE: <span class="string">&quot;full&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [kube-router]NetworkPolicy 支持开关</span></span><br><span class="line">FIREWALL_ENABLE: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># [kube-router]kube-router 镜像版本</span></span><br><span class="line">kube_router_ver: <span class="string">&quot;v0.3.1&quot;</span></span><br><span class="line">busybox_ver: <span class="string">&quot;1.28.4&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:cluster-addon</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># coredns 自动安装</span></span><br><span class="line">dns_install: <span class="string">&quot;no&quot;</span></span><br><span class="line">corednsVer: <span class="string">&quot;1.9.3&quot;</span></span><br><span class="line">ENABLE_LOCAL_DNS_CACHE: <span class="literal">false</span></span><br><span class="line">dnsNodeCacheVer: <span class="string">&quot;1.22.13&quot;</span></span><br><span class="line"><span class="comment"># 设置 local dns cache 地址</span></span><br><span class="line">LOCAL_DNS_CACHE: <span class="string">&quot;169.254.20.10&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># metric server 自动安装</span></span><br><span class="line">metricsserver_install: <span class="string">&quot;no&quot;</span></span><br><span class="line">metricsVer: <span class="string">&quot;v0.5.2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># dashboard 自动安装</span></span><br><span class="line">dashboard_install: <span class="string">&quot;no&quot;</span></span><br><span class="line">dashboardVer: <span class="string">&quot;v2.7.0&quot;</span></span><br><span class="line">dashboardMetricsScraperVer: <span class="string">&quot;v1.0.8&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># prometheus 自动安装</span></span><br><span class="line">prom_install: <span class="string">&quot;no&quot;</span></span><br><span class="line">prom_namespace: <span class="string">&quot;monitor&quot;</span></span><br><span class="line">prom_chart_ver: <span class="string">&quot;39.11.0&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># nfs-provisioner 自动安装</span></span><br><span class="line">nfs_provisioner_install: <span class="string">&quot;no&quot;</span></span><br><span class="line">nfs_provisioner_namespace: <span class="string">&quot;kube-system&quot;</span></span><br><span class="line">nfs_provisioner_ver: <span class="string">&quot;v4.0.2&quot;</span></span><br><span class="line">nfs_storage_class: <span class="string">&quot;managed-nfs-storage&quot;</span></span><br><span class="line">nfs_server: <span class="string">&quot;192.168.1.10&quot;</span></span><br><span class="line">nfs_path: <span class="string">&quot;/data/nfs&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># network-check 自动安装</span></span><br><span class="line">network_check_enabled: <span class="literal">false</span> </span><br><span class="line">network_check_schedule: <span class="string">&quot;*/5 * * * *&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># role:harbor</span></span><br><span class="line"><span class="comment">############################</span></span><br><span class="line"><span class="comment"># harbor version，完整版本号</span></span><br><span class="line">HARBOR_VER: <span class="string">&quot;v2.6.3&quot;</span></span><br><span class="line">HARBOR_DOMAIN: <span class="string">&quot;harbor.easzlab.io.local&quot;</span></span><br><span class="line">HARBOR_PATH: /var/data</span><br><span class="line">HARBOR_TLS_PORT: 8443</span><br><span class="line">HARBOR_REGISTRY: <span class="string">&quot;&#123;&#123; HARBOR_DOMAIN &#125;&#125;:&#123;&#123; HARBOR_TLS_PORT &#125;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># if set &#x27;false&#x27;, you need to put certs named harbor.pem and harbor-key.pem in directory &#x27;down&#x27;</span></span><br><span class="line">HARBOR_SELF_SIGNED_CERT: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># install extra component</span></span><br><span class="line">HARBOR_WITH_NOTARY: <span class="literal">false</span></span><br><span class="line">HARBOR_WITH_TRIVY: <span class="literal">false</span></span><br><span class="line">HARBOR_WITH_CHARTMUSEUM: <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="部署k8s集群"><a href="#部署k8s集群" class="headerlink" title="部署k8s集群"></a>部署k8s集群</h2><h3 id="环境初始化"><a href="#环境初始化" class="headerlink" title="环境初始化"></a>环境初始化</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl setup help</span></span><br><span class="line">Usage: ezctl setup &lt;cluster&gt; &lt;step&gt;</span><br><span class="line">available steps:</span><br><span class="line">    01  prepare            to prepare CA/certs &amp; kubeconfig &amp; other system settings </span><br><span class="line">    02  etcd               to setup the etcd cluster</span><br><span class="line">    03  container-runtime  to setup the container runtime(docker or containerd)</span><br><span class="line">    04  kube-master        to setup the master nodes</span><br><span class="line">    05  kube-node          to setup the worker nodes</span><br><span class="line">    06  network            to setup the network plugin</span><br><span class="line">    07  cluster-addon      to setup other useful plugins</span><br><span class="line">    90  all                to run 01~07 all at once</span><br><span class="line">    10  ex-lb              to install external loadbalance <span class="keyword">for</span> accessing k8s from outside</span><br><span class="line">    11  harbor             to install a new harbor server or to integrate with an existed one</span><br><span class="line"></span><br><span class="line">examples: ./ezctl setup test-k8s 01  (or ./ezctl setup test-k8s prepare)</span><br><span class="line">      ./ezctl setup test-k8s 02  (or ./ezctl setup test-k8s etcd)</span><br><span class="line">          ./ezctl setup test-k8s all</span><br><span class="line">          ./ezctl setup test-k8s 04 -t restart_master</span><br><span class="line"><span class="comment"># 准备CA证书和基础系统设置</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl setup zhangg-k8s 01</span></span><br></pre></td></tr></table></figure><h3 id="部署etcd集群"><a href="#部署etcd集群" class="headerlink" title="部署etcd集群"></a>部署etcd集群</h3><p>可以自行更改启动脚本路径及版本等自定义配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl setup zhangg-k8s 02</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在各个etcd服务器上验证etcd服务：</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># export NODE_IPS=&quot;10.0.0.103 10.0.0.104 10.0.0.105&quot;</span></span><br><span class="line">root@etcd-node1:~<span class="comment"># for ip in $&#123;NODE_IPS&#125;;do ETCDCTL_API=3  /usr/bin/etcdctl --endpoints=https://$&#123;ip&#125;:2379 --cacert=/etc/kubernetes/ssl/ca.pem --cert=/etc/kubernetes/ssl/etcd.pem --key=/etc/kubernetes/ssl/etcd-key.pem endpoint health; done</span></span><br><span class="line">https://10.0.0.103:2379 is healthy: successfully committed proposal: took = 5.773118ms</span><br><span class="line">https://10.0.0.104:2379 is healthy: successfully committed proposal: took = 6.711772ms</span><br><span class="line">https://10.0.0.105:2379 is healthy: successfully committed proposal: took = 7.056248ms</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果返回的值是上面的信息的话，表示etcd集群运行正常，不然就异常的。</span></span><br></pre></td></tr></table></figure><h3 id="部署container-runtime"><a href="#部署container-runtime" class="headerlink" title="部署container-runtime"></a>部署container-runtime</h3><p>这里的运行时我就使用containerd来实现了。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改containerd的配置文件</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># vim roles/containerd/templates/config.toml.j2</span></span><br><span class="line">    [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry]</span><br><span class="line"></span><br><span class="line">      [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.auths]</span><br><span class="line"></span><br><span class="line">      [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.configs]</span><br><span class="line">        [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.configs.<span class="string">&quot;harbor.zhangg.com&quot;</span>.tls]</span><br><span class="line">          insecure_skip_verify = <span class="literal">true</span></span><br><span class="line">        [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.configs.<span class="string">&quot;harbor.zhangg.com&quot;</span>.auth]</span><br><span class="line">          username = <span class="string">&quot;admin&quot;</span></span><br><span class="line">          password = <span class="string">&quot;zhangg666&quot;</span></span><br><span class="line"></span><br><span class="line">      [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.headers]</span><br><span class="line"></span><br><span class="line">      [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.mirrors]</span><br><span class="line">        [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.registry.mirrors.<span class="string">&quot;harbor.zhangg.com&quot;</span>]</span><br><span class="line">          endpoint = [<span class="string">&quot;https://harbor.zhangg.com&quot;</span>]</span><br><span class="line">                                                                                                          </span><br><span class="line">    [plugins.<span class="string">&quot;io.containerd.grpc.v1.cri&quot;</span>.x509_key_pair_streaming]</span><br><span class="line">      tls_cert_file = <span class="string">&quot;&quot;</span></span><br><span class="line">      tls_key_file = <span class="string">&quot;&quot;</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl setup zhangg-k8s 03</span></span><br></pre></td></tr></table></figure><h3 id="部署master节点"><a href="#部署master节点" class="headerlink" title="部署master节点"></a>部署master节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl setup zhangg-k8s 04</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成后查看master节点是否已经部署到集群中</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl get node</span></span><br><span class="line">NAME         STATUS                     ROLES    AGE   VERSION</span><br><span class="line">10.0.0.100   Ready,SchedulingDisabled   master   27s   v1.25.6</span><br><span class="line">10.0.0.101   Ready,SchedulingDisabled   master   26s   v1.25.6</span><br><span class="line">10.0.0.102   Ready,SchedulingDisabled   master   26s   v1.25.6</span><br></pre></td></tr></table></figure><h3 id="部署node节点"><a href="#部署node节点" class="headerlink" title="部署node节点"></a>部署node节点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl setup zhangg-k8s 05</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成后查看node节点是否已经部署到集群中</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl get node</span></span><br><span class="line">NAME         STATUS                     ROLES    AGE    VERSION</span><br><span class="line">10.0.0.100   Ready,SchedulingDisabled   master   109s   v1.25.6</span><br><span class="line">10.0.0.101   Ready,SchedulingDisabled   master   108s   v1.25.6</span><br><span class="line">10.0.0.102   Ready,SchedulingDisabled   master   108s   v1.25.6</span><br><span class="line">10.0.0.107   Ready                      node     31s    v1.25.6</span><br><span class="line">10.0.0.108   Ready                      node     31s    v1.25.6</span><br></pre></td></tr></table></figure><h3 id="部署网络服务calico"><a href="#部署网络服务calico" class="headerlink" title="部署网络服务calico"></a>部署网络服务calico</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 修改镜像地址，将地址修改成自己harbor仓库的地址,在前面我自己将需要的镜像都push到自己的harbor仓库了</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># vim roles/calico/templates/calico-v3.24.yaml.j2</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># grep &quot;image:&quot; roles/calico/templates/calico-v3.24.yaml.j2</span></span><br><span class="line">          image: harbor.zhangg.com/k8s-base/cni:v3.24.5</span><br><span class="line">          image: harbor.zhangg.com/k8s-base/node:v3.24.5</span><br><span class="line">          image: harbor.zhangg.com/k8s-base/node:v3.24.5</span><br><span class="line">          image: harbor.zhangg.com/k8s-base/kube-controllers:v3.24.5</span><br><span class="line"></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl setup zhangg-k8s 06</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 验证网络</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># calicoctl node status</span></span><br><span class="line">Calico process is running.</span><br><span class="line"></span><br><span class="line">IPv4 BGP status</span><br><span class="line">+--------------+-------------------+-------+----------+-------------+</span><br><span class="line">| PEER ADDRESS |     PEER TYPE     | STATE |  SINCE   |    INFO     |</span><br><span class="line">+--------------+-------------------+-------+----------+-------------+</span><br><span class="line">| 10.0.0.101   | node-to-node mesh | up    | 09:00:19 | Established |</span><br><span class="line">| 10.0.0.102   | node-to-node mesh | up    | 09:00:19 | Established |</span><br><span class="line">| 10.0.0.107   | node-to-node mesh | up    | 09:00:19 | Established |</span><br><span class="line">| 10.0.0.108   | node-to-node mesh | up    | 09:00:19 | Established |</span><br><span class="line">+--------------+-------------------+-------+----------+-------------+</span><br><span class="line"></span><br><span class="line">IPv6 BGP status</span><br><span class="line">No IPv6 peers found.</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建两个pod测试一下网络是否正常</span></span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl run net-test1 --image=alpine sleep 360000</span></span><br><span class="line">pod/net-test1 created</span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl run net-test2 --image=alpine sleep 360000</span></span><br><span class="line">pod/net-test2 created</span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl get pod -o wide</span></span><br><span class="line">NAME        READY   STATUS              RESTARTS   AGE   IP              NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">net-test1   1/1     Running             0          15s   10.200.15.129   10.0.0.107   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">net-test2   0/1     ContainerCreating   0          10s   &lt;none&gt;          10.0.0.108   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl get pod -o wide</span></span><br><span class="line">NAME        READY   STATUS    RESTARTS   AGE   IP               NODE         NOMINATED NODE   READINESS GATES</span><br><span class="line">net-test1   1/1     Running   0          27s   10.200.15.129    10.0.0.107   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">net-test2   1/1     Running   0          22s   10.200.107.129   10.0.0.108   &lt;none&gt;           &lt;none&gt;</span><br><span class="line">root@k8s-master1:~<span class="comment"># kubectl exec -it net-test1 sh</span></span><br><span class="line">kubectl <span class="built_in">exec</span> [POD] [COMMAND] is DEPRECATED and will be removed <span class="keyword">in</span> a future version. Use kubectl <span class="built_in">exec</span> [POD] -- [COMMAND] instead.</span><br><span class="line">/ <span class="comment"># ping -c 5 10.200.107.129</span></span><br><span class="line">PING 10.200.107.129 (10.200.107.129): 56 data bytes</span><br><span class="line">64 bytes from 10.200.107.129: <span class="built_in">seq</span>=0 ttl=62 time=0.533 ms</span><br><span class="line">64 bytes from 10.200.107.129: <span class="built_in">seq</span>=1 ttl=62 time=0.317 ms</span><br><span class="line">64 bytes from 10.200.107.129: <span class="built_in">seq</span>=2 ttl=62 time=0.313 ms</span><br><span class="line">64 bytes from 10.200.107.129: <span class="built_in">seq</span>=3 ttl=62 time=0.351 ms</span><br><span class="line">64 bytes from 10.200.107.129: <span class="built_in">seq</span>=4 ttl=62 time=0.340 ms</span><br><span class="line"></span><br><span class="line">--- 10.200.107.129 ping statistics ---</span><br><span class="line">5 packets transmitted, 5 packets received, 0% packet loss</span><br><span class="line">round-trip min/avg/max = 0.313/0.370/0.533 ms</span><br></pre></td></tr></table></figure><p>执行完上面的步骤简单的k8s集群就部署好了，后续还需要安装部署coredns，prometheus等组件。</p><p>如果上面的操作有误的话，可以执行下面命令删除集群重新部署</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ./ezctl destroy zhangg-k8s</span></span><br><span class="line">root@k8s-master1:/etc/kubeasz<span class="comment"># ansible-playbook -i clusters/zhangg-k8s/hosts -e @clusters/zhangg-k8s/config.yml playbooks/99.clean.yml</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> kubernetes </category>
          
      </categories>
      
      
        <tags>
            
            <tag> kubernetes </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker限制容器的资源</title>
      <link href="/post/f9fc2b54.html"/>
      <url>/post/f9fc2b54.html</url>
      
        <content type="html"><![CDATA[<p>docker在默认运行容器的情况下，是不会对运行的容器进行资源限制的，如果是在自己的实验环境的话是随便你怎么弄的，不过在生产环境中是一定会对docker运行的容器进行资源限制的，如果不限制的话在生产中会带来很多弊端的。例如当资源没有做限制时，资源用完了后会导致其他的容器无法运行，在生产中的话是会部署几十个或者几百个容器的，这些容器都是共同使用的宿主机的资源CPU、内存、磁盘等等其他资源，当某一个容器占用宿主机的资源过多时，这时就会导致其他的容器无法正常运行，甚至也会导致一些服务的瘫痪，没有足够的内存运行服务的话，这时就会产生OOM现象，这时就会根据优先机制kill掉宿主机上最高的进程从而来释放空间，只要是宿主机的进程都是会有可能被kill掉的，进程被kill掉的话与之相关的进程的服务就会瘫痪。因此我们都会在创建容器的时候进行必要的资源限制。</p><h1 id="资源限制的概念"><a href="#资源限制的概念" class="headerlink" title="资源限制的概念"></a>资源限制的概念</h1><p>Docker对容器的资源限制类似于我们使用VMware Workstation创建的虚拟机，VMware Workstation创建时是可以对每一台虚拟机指定能使用的最大CPU和内存等，虚拟机在运行的过程中只能使用限定范围内的宿主机资源；Docker也是使用了类似的方法对容器进行资源限制，Docker利用cgroup功能限制每个容器能使用多少宿主机资源（主要是内存和CPU），这些限制条件可以在执行docker run命令时进行配置。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run --help | grep -E &quot;cpu|memory&quot;</span></span><br><span class="line">      --cpu-period int                 Limit CPU CFS (Completely Fair Scheduler) period</span><br><span class="line">      --cpu-quota int                  Limit CPU CFS (Completely Fair Scheduler) quota</span><br><span class="line">      --cpu-rt-period int              Limit CPU real-time period <span class="keyword">in</span> microseconds</span><br><span class="line">      --cpu-rt-runtime int             Limit CPU real-time runtime <span class="keyword">in</span> microseconds</span><br><span class="line">  -c, --cpu-shares int                 CPU shares (relative weight)</span><br><span class="line">      --cpus decimal                   Number of CPUs</span><br><span class="line">      --cpuset-cpus string             CPUs <span class="keyword">in</span> <span class="built_in">which</span> to allow execution (0-3, 0,1)</span><br><span class="line">      --cpuset-mems string             MEMs <span class="keyword">in</span> <span class="built_in">which</span> to allow execution (0-3, 0,1)</span><br><span class="line">      --kernel-memory bytes            Kernel memory <span class="built_in">limit</span></span><br><span class="line">  -m, --memory bytes                   Memory <span class="built_in">limit</span></span><br><span class="line">      --memory-reservation bytes       Memory soft <span class="built_in">limit</span></span><br><span class="line">      --memory-swap bytes              Swap <span class="built_in">limit</span> equal to memory plus swap: <span class="string">&#x27;-1&#x27;</span> to <span class="built_in">enable</span> unlimited swap</span><br><span class="line">      --memory-swappiness int          Tune container memory swappiness (0 to 100) (default -1)</span><br></pre></td></tr></table></figure><p>在进行Docker资源限制时，一些功能需要得到宿主机的内核支持，在Docker服务器上执行docker info命令可以查看相关支持，如果内核中禁用了某些功能，会在输出结尾给出警告，比较常见的就是使用Ubuntu主机时会提示“WARNING: No swap limit support”。如果要使用这些功能，就必须在宿主机上取消禁用，例如针对Ubuntu作为Docker宿主机时的不支持swap分区内存限制，我们可以修改&#x2F;etc&#x2F;default&#x2F;grub文件，添加启用功能。重启后再次执行docker info命令已不再显示warning，则说明已经取消了禁用。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker info</span></span><br><span class="line">Client:</span><br><span class="line"> Context:    default</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line"> Plugins:</span><br><span class="line">  buildx: Docker Buildx (Docker Inc.)</span><br><span class="line">    Version:  v0.10.5</span><br><span class="line">    Path:     /usr/libexec/docker/cli-plugins/docker-buildx</span><br><span class="line">  compose: Docker Compose (Docker Inc.)</span><br><span class="line">    Version:  v2.18.1</span><br><span class="line">    Path:     /usr/libexec/docker/cli-plugins/docker-compose</span><br><span class="line"></span><br><span class="line">Server:</span><br><span class="line"> Containers: 0</span><br><span class="line">  Running: 0</span><br><span class="line">  Paused: 0</span><br><span class="line">  Stopped: 0</span><br><span class="line"> Images: 0</span><br><span class="line"> Server Version: 23.0.6</span><br><span class="line"> Storage Driver: overlay2</span><br><span class="line">  Backing Filesystem: extfs</span><br><span class="line">  Supports d_type: <span class="literal">true</span></span><br><span class="line">  Using metacopy: <span class="literal">false</span></span><br><span class="line">  Native Overlay Diff: <span class="literal">true</span></span><br><span class="line">  userxattr: <span class="literal">false</span></span><br><span class="line"> Logging Driver: json-file</span><br><span class="line"> Cgroup Driver: systemd</span><br><span class="line"> Cgroup Version: 1</span><br><span class="line"> Plugins:</span><br><span class="line">  Volume: <span class="built_in">local</span></span><br><span class="line">  Network: bridge host ipvlan macvlan null overlay</span><br><span class="line">  Log: awslogs fluentd gcplogs gelf journald json-file <span class="built_in">local</span> logentries splunk syslog</span><br><span class="line"> Swarm: inactive</span><br><span class="line"> Runtimes: io.containerd.runc.v2 runc</span><br><span class="line"> Default Runtime: runc</span><br><span class="line"> Init Binary: docker-init</span><br><span class="line"> containerd version: 3dce8eb055cbb6872793272b4f20ed16117344f8</span><br><span class="line"> runc version: v1.1.7-0-g860f061</span><br><span class="line"> init version: de40ad0</span><br><span class="line"> Security Options:</span><br><span class="line">  apparmor</span><br><span class="line">  seccomp</span><br><span class="line">   Profile: <span class="built_in">builtin</span></span><br><span class="line"> Kernel Version: 4.15.0-213-generic</span><br><span class="line"> Operating System: Ubuntu 18.04.6 LTS</span><br><span class="line"> OSType: linux</span><br><span class="line"> Architecture: x86_64</span><br><span class="line"> CPUs: 2</span><br><span class="line"> Total Memory: 3.827GiB</span><br><span class="line"> Name: ubuntu</span><br><span class="line"> ID: 159601b1-ebd6-4c96-a803-e4899ae16fb6</span><br><span class="line"> Docker Root Dir: /data/docker/</span><br><span class="line"> Debug Mode: <span class="literal">false</span></span><br><span class="line"> Registry: https://index.docker.io/v1/</span><br><span class="line"> Experimental: <span class="literal">false</span></span><br><span class="line"> Insecure Registries:</span><br><span class="line">  127.0.0.0/8</span><br><span class="line"> Registry Mirrors:</span><br><span class="line">  https://c51gf9he.mirror.aliyuncs.com/</span><br><span class="line"> Live Restore Enabled: <span class="literal">true</span></span><br><span class="line"></span><br><span class="line">WARNING: No swap <span class="built_in">limit</span> support</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># vim /etc/default/grub</span></span><br><span class="line">GRUB_DEFAULT=0</span><br><span class="line">GRUB_TIMEOUT_STYLE=hidden</span><br><span class="line">GRUB_TIMEOUT=0</span><br><span class="line">GRUB_DISTRIBUTOR=`lsb_release -i -s 2&gt; /dev/null || <span class="built_in">echo</span> Debian`</span><br><span class="line">GRUB_CMDLINE_LINUX_DEFAULT=<span class="string">&quot;maybe-ubiquity&quot;</span></span><br><span class="line">GRUB_CMDLINE_LINUX=<span class="string">&quot;net.ifnames=0 biosdevname=0 cgroup_enable=memory swapaccount=1&quot;</span></span><br><span class="line">root@ubuntu:~<span class="comment"># update-grub</span></span><br><span class="line">root@ubuntu:~<span class="comment"># reboot</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker info</span></span><br></pre></td></tr></table></figure><p><img src="/images/docker-info.png"></p><h1 id="Docker容器的资源限制"><a href="#Docker容器的资源限制" class="headerlink" title="Docker容器的资源限制"></a>Docker容器的资源限制</h1><h2 id="容器的内存限制"><a href="#容器的内存限制" class="headerlink" title="容器的内存限制"></a>容器的内存限制</h2><p>Docker可以强制执行硬性的内存限制，也就是允许容器使用指定大小；也是可以执行非硬性的内存限制，即容器可以使用尽可能多的使用多的内存，除非内存检测到主机上的内存不够用了，一般我们都是有的硬性内存限制。</p><p>在产生了OOM的时候，Dockerd会尝试调整Docker守护程序上的<strong>OOM的优先级</strong>来减轻这些风险，以便它比系统上的其他进程更不可能被杀死，但是容器的OOM优先级没有调整的话，这会使的单个容器被杀死的可能性比Docker守护进程或其他系统进程被杀死的可能性会更大，不推荐通过在守护进程或容器上手动设置–oom-score-adj为极端负数，或通过在容器上设置–oom-kill-disable来跳过这些安全的措施。</p><p>在指定容器内存大小时，大部分的选项取正整数，后面跟上b（字节）、k（千字节）、m（兆字节）和g（千兆字节）作为单位的后缀。</p><p><strong>OOM 优先级的机制</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/PID/oom_score_adj #范围为-1000到1000，值越高越容易被宿主机kill掉，如果将该值设置为-1000，则进程永远不会被宿主机kernel kill。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/PIDJoom_adj #范围为-17到+15,取值越高越容易被干掉,如果是-17,则表示不能被kill，该设置参数的存在是为了和旧版本的Linux内核兼容.</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/proc/PID/oom_score #这个值是系统综合进程的内存消耗量、CPU时间(utime+stime)、存活时间(uptime - start time)和oom_adj计算出的进程得分，消耗内存越多得分越高,越容易被宿主机kernel强制杀死。</span><br></pre></td></tr></table></figure><p><img src="/images/oom_score.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–oom-score-adj：宿主机内核对进程使用的内存进行评分，评分最高的将被宿主机内核kill掉（取值范围为-1000到1000，越低越不会被kill掉），可以指定一个容器的评分为较低的负数，但会影响内核的正常工作，不推荐手动指定；</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">–oom-kill-disable：在设置了-m选项时使用，对某个容器关闭oom机制，无论是否出现内存溢出现象，该容器都不会被kill掉。如果不设置-m选项，主机在产生oom时也还是会kill到进程。除了MySQL这一类特别重要的容器，一般也不会指定。</span><br></pre></td></tr></table></figure><h3 id="内存限制相关的参数"><a href="#内存限制相关的参数" class="headerlink" title="内存限制相关的参数"></a>内存限制相关的参数</h3><ul><li>-m或–memory</li></ul><p>-m或–memory参数是可以指定容器能使用的最大内存，如果设置了此参数，这里我的环境docker版本是23版的，它的最小限制为6M。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">ubuntu       18.04     5a214d77f5d7   2 years ago   63.1MB</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm -m 2m ubuntu:18.04 bash</span></span><br><span class="line">docker: Error response from daemon: Minimum memory <span class="built_in">limit</span> allowed is 6MB.</span><br><span class="line">See <span class="string">&#x27;docker run --help&#x27;</span>.</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm -m 6m ubuntu:18.04 bash</span></span><br><span class="line">root@d60e8be5a06b:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li>–memory-swap</li></ul><p>–memory-swap是可以指定容器能使用交换分区大小，该设置的参数和物理内存显示同时存在的才会有效，两个值设定的不同也是会有不同的效果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当设置值大于物理内存时</span></span><br><span class="line">[如果想要容器内使用交换分区，则设定的值定要大于物理内存大小，容器中的swap交换分区可用大小为交换分区设定值减去物理内存设定值（所得值大于0），例如容器物理内存限制为256m，要想使用100m的交换分区，则启动容器时交换分区的设定值为356m。]</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm --memory-swap 50m ubuntu:18.04</span></span><br><span class="line">docker: Error response from daemon: You should always <span class="built_in">set</span> the Memory <span class="built_in">limit</span> when using Memoryswap <span class="built_in">limit</span>, see usage.</span><br><span class="line">See <span class="string">&#x27;docker run --help&#x27;</span>.</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm -m 256m --memory-swap 356m ubuntu:18.04 </span></span><br><span class="line">root@6a80facbbc35:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当设置值为0或者等于物理内存时</span></span><br><span class="line">[当值为0，这时也就是可以忽略在个参数设置，也就是不使用交换分区]</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm -m 256m --memory-swap 0 ubuntu:18.04 </span></span><br><span class="line">root@3e897dc2df3b:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm -m 256m --memory-swap 256m ubuntu:18.04 </span></span><br><span class="line">root@db0d4901ccc1:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当设置值为unset时</span></span><br><span class="line">[当宿主机开启了swap功能，并且--memory-swap设定值为<span class="built_in">unset</span>，即启动容器时未添加--memory-swap参数，则表示容器可使用的交换分区大小为2倍的物理内存大小；我们将容器的物理内存设定为512m，不添加--memory-swap参数时，容器能使用的交换分区大小为1g]</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm -m 256m ubuntu:18.04 </span></span><br><span class="line">root@7c7972991d25:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当设置值为-1时</span></span><br><span class="line">[当宿主机开启了swap功能，并且容器--memory-swap设定值为-1，表示容器可以使用宿主机的swap最大空间]</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it --rm -m 256m --memory-swap -1 ubuntu:18.04 </span></span><br><span class="line">root@ad30bc9955a2:/<span class="comment"># exit</span></span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><ul><li>–memory-swappiness</li></ul><p>–memory-swappiness可以设置容器使用交换分区的倾向性，取值范围为0-100，0表示只有在物理内存不足的情况下才会使用交换分区，值越高表示越倾向于使用交换分区，取值为100时表示优先使用交换分区。通常我们不会使用到该参数。</p><ul><li>–kernel-memory</li></ul><p>–kernel-memory可以指定容器中可以使用的最大内核内存大小，由于内核内存与用户空间内存是相互隔离的，无法直接与用户空间内存进行交换，因此内核内存不足的容器可能会阻塞宿主机资源，这时就会对主机和其它容易及服务进程产生影响，<strong>在生产中不要设置容器的内核内存大小</strong>。</p><ul><li>–memory-reservation</li></ul><p>–memory-reservation允许指定小于物理内存值的软限制，当Docker检测到宿主机上的内存不足时会激活该限制。如果使用该参数时，设定值必须低于-m指定的物理内存才能使其优先，并且因为该参数是软限制，因而不能保证容器不超过设置的限制，但容器能使用的最大内存不会超过物理内存设定值。</p><h3 id="容器内存限制的验证"><a href="#容器内存限制的验证" class="headerlink" title="容器内存限制的验证"></a>容器内存限制的验证</h3><p>这里我们下载压力测试的镜像来验证容器的内存限制。</p><p><img src="/images/verify_memory_limits.png"></p><p><img src="/images/verify_memory_limits1.png"></p><h4 id="内存大小硬限制"><a href="#内存大小硬限制" class="headerlink" title="内存大小硬限制"></a>内存大小硬限制</h4><p>不限制物理内存：</p><p>使用在前面下载好的压力测试镜像来创建一个容器，利用–vm指定2个工作进程，并设置每个工作进程最多允许使用256M的内存，并且宿主机也不限制当前容器的最大内存。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c1 lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">98142e90ef96bb7e5484c88b1759f26cdd481cda5c42f488d7eb95f3eed72306</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">98142e90ef96   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   7 seconds ago   Up 6 seconds             zhang-c1</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats zhang-c1</span></span><br></pre></td></tr></table></figure><p><img src="/images/verify_memory_limits2.png"></p><p>限制物理内存：</p><p>使用-m或–memory选项来指定容器最大使用内存</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c1 -m 256m lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">8a4cb2bc83137425963d5df3fa25051a18f298bf342e6d70fe762c20c04e5c92</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">8a4cb2bc8313   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   8 seconds ago   Up 7 seconds             zhang-c1</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats zhang-c1</span></span><br></pre></td></tr></table></figure><p><img src="/images/verify_memory_limits3.png"></p><p>宿主机验证cgroup：</p><p>宿主机对容器的资源限制主要是利用Docker的cgroup功能来实现的，可以在&#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;memory&#x2F;system.slice&#x2F;目录下找到docker-容器Id.scope目录，在这个目录下面有这相关配置。（docker19版本或之前的版本是在&#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;memory&#x2F;docker&#x2F;目录下找到对应容器ID，容器ID目录下的memory.limit_in_bytes文件中记录了宿主机对容器的内存资源限制），memory.limit_in_bytes文件中的值是将容器内存转化为字节，所以一般数值会很大；我们是可以使用命令来编辑这个文件的数值，从而修改了物理内存大小的限制。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED              STATUS              PORTS     NAMES</span><br><span class="line">8a4cb2bc8313   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   About a minute ago   Up About a minute             zhang-c1</span><br><span class="line">root@ubuntu:~<span class="comment"># ls /sys/fs/cgroup/memory/system.slice/docker-8a4cb2bc83137425963d5df3fa25051a18f298bf342e6d70fe762c20c04e5c92.scope/</span></span><br><span class="line">cgroup.clone_children  memory.force_empty              memory.kmem.slabinfo                memory.kmem.tcp.usage_in_bytes  memory.memsw.failcnt             memory.move_charge_at_immigrate  memory.soft_limit_in_bytes  memory.use_hierarchy</span><br><span class="line">cgroup.event_control   memory.kmem.failcnt             memory.kmem.tcp.failcnt             memory.kmem.usage_in_bytes      memory.memsw.limit_in_bytes      memory.numa_stat                 memory.stat                 notify_on_release</span><br><span class="line">cgroup.procs           memory.kmem.limit_in_bytes      memory.kmem.tcp.limit_in_bytes      memory.limit_in_bytes           memory.memsw.max_usage_in_bytes  memory.oom_control               memory.swappiness           tasks</span><br><span class="line">memory.failcnt         memory.kmem.max_usage_in_bytes  memory.kmem.tcp.max_usage_in_bytes  memory.max_usage_in_bytes       memory.memsw.usage_in_bytes      memory.pressure_level            memory.usage_in_bytes</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-8a4cb2bc83137425963d5df3fa25051a18f298bf342e6d70fe762c20c04e5c92.scope/memory.limit_in_bytes </span></span><br><span class="line">268435456</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;268435456/1024/1024&quot; | bc</span></span><br><span class="line">256</span><br><span class="line"></span><br><span class="line"><span class="comment"># 手动修改一些物理内存大小的限制</span></span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;320*1024*1024&quot; | bc</span></span><br><span class="line">335544320</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;335544320&quot; &gt; /sys/fs/cgroup/memory/system.slice/docker-8a4cb2bc83137425963d5df3fa25051a18f298bf342e6d70fe762c20c04e5c92.scope/memory.limit_in_bytes</span></span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-8a4cb2bc83137425963d5df3fa25051a18f298bf342e6d70fe762c20c04e5c92.scope/memory.limit_in_bytes</span></span><br><span class="line">335544320</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats zhang-c1</span></span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O       BLOCK I/O        PIDS</span><br><span class="line">8a4cb2bc8313   zhang-c1   169.29%   319.8MiB / 320MiB   99.94%    1.19kB / 0B   40.5GB / 218GB   5</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 我们可以通过文本编辑工具去修改文件里面的内存限制值，但是是在原有的基础上添加内存限制，如果这时修改值小于原有的内存的话就会报错”write error: Device or resource busy”</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># echo &quot;128*1024*1024&quot; | bc</span></span><br><span class="line">134217728</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;134217728&quot; &gt; /sys/fs/cgroup/memory/system.slice/docker-8a4cb2bc83137425963d5df3fa25051a18f298bf342e6d70fe762c20c04e5c92.scope/memory.limit_in_bytes</span></span><br><span class="line">-bash: <span class="built_in">echo</span>: write error: Device or resource busy</span><br></pre></td></tr></table></figure><h4 id="内存大小软限制-不常用"><a href="#内存大小软限制-不常用" class="headerlink" title="内存大小软限制(不常用)"></a>内存大小软限制(不常用)</h4><p>内存的软限制是需要使用到–memory-reservation参数，这个参数设置的作用不是很大，设置了后使用docker stats查看时”MEM USAGE &#x2F; LIMIT”的值还是在设置的最大内存值附件波动。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c2 -m 256m --memory-reservation 128m lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">f80dbfa3d7aa0158b40b66e1126dbb6428085ef911eb87ff180009c95060c391</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">f80dbfa3d7aa   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   3 seconds ago    Up 3 seconds              zhang-c2</span><br><span class="line">8a4cb2bc8313   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   15 minutes ago   Up 15 minutes             zhang-c1</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats zhang-c2</span></span><br></pre></td></tr></table></figure><p><img src="/images/verify_memory_limits4.png"></p><p>容器的内存限制设置为软限制时，也是可以修改&#x2F;sys&#x2F;fs&#x2F;cgroup&#x2F;memory&#x2F;system.slice&#x2F;docker-*&#x2F;memory.soft_limit_in_bytes文件，可以增加或者减少。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-f80dbfa3d7aa0158b40b66e1126dbb6428085ef911eb87ff180009c95060c391.scope/memory.soft_limit_in_bytes </span></span><br><span class="line">134217728</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;192*1024*1024&quot; | bc</span></span><br><span class="line">201326592</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;201326592&quot; &gt; /sys/fs/cgroup/memory/system.slice/docker-f80dbfa3d7aa0158b40b66e1126dbb6428085ef911eb87ff180009c95060c391.scope/memory.soft_limit_in_bytes </span></span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-f80dbfa3d7aa0158b40b66e1126dbb6428085ef911eb87ff180009c95060c391.scope/memory.soft_limit_in_bytes </span></span><br><span class="line">201326592</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;134217728&quot; &gt; /sys/fs/cgroup/memory/system.slice/docker-f80dbfa3d7aa0158b40b66e1126dbb6428085ef911eb87ff180009c95060c391.scope/memory.soft_limit_in_bytes </span></span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-f80dbfa3d7aa0158b40b66e1126dbb6428085ef911eb87ff180009c95060c391.scope/memory.soft_limit_in_bytes </span></span><br><span class="line">134217728</span><br></pre></td></tr></table></figure><h4 id="关闭OOM机制"><a href="#关闭OOM机制" class="headerlink" title="关闭OOM机制"></a>关闭OOM机制</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 默认是开启OOM机制的，想要关闭OOM机制的话想要添加--oom-kill-disable参数的</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c3 -m 256m lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">1f42f8fda18cfbbc557eb82c7e410b5a4c748ef6c51c357aa7b2cfea0b3496c4</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">1f42f8fda18c   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   5 seconds ago    Up 3 seconds              zhang-c3</span><br><span class="line">f80dbfa3d7aa   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   11 minutes ago   Up 11 minutes             zhang-c2</span><br><span class="line">8a4cb2bc8313   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   27 minutes ago   Up 27 minutes             zhang-c1</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-1f42f8fda18cfbbc557eb82c7e410b5a4c748ef6c51c357aa7b2cfea0b3496c4.scope/memory.oom_control</span></span><br><span class="line">oom_kill_disable 0</span><br><span class="line">under_oom 0</span><br><span class="line">oom_kill 29</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c4 -m 256m --oom-kill-disable lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">9452561024bfe81aa3dabd48266a25422aa003edf54332aaa6436ced40936ea5</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED              STATUS              PORTS     NAMES</span><br><span class="line">9452561024bf   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   5 seconds ago        Up 3 seconds                  zhang-c4</span><br><span class="line">1f42f8fda18c   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   About a minute ago   Up About a minute             zhang-c3</span><br><span class="line">f80dbfa3d7aa   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   13 minutes ago       Up 13 minutes                 zhang-c2</span><br><span class="line">8a4cb2bc8313   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   28 minutes ago       Up 28 minutes                 zhang-c1</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-9452561024bfe81aa3dabd48266a25422aa003edf54332aaa6436ced40936ea5.scope/memory.oom_control</span></span><br><span class="line">oom_kill_disable 1</span><br><span class="line">under_oom 1</span><br><span class="line">oom_kill 0</span><br></pre></td></tr></table></figure><p>不过上面的操作会影响到宿主机的正常工作，这个参数一般都是不会去添加上的，除非一些特殊情况，那就需要另外加其他配置了。</p><h4 id="交换分区限制"><a href="#交换分区限制" class="headerlink" title="交换分区限制"></a>交换分区限制</h4><p>当启动一个容器设置的内存是256m，没有添加–memory-swap参数时，这时验证cgroup时memory.memsw.limit_in_bytes文件的值是默认设置的内存的2倍；当我们希望能使用128m的交换分区，则需要设置–memory-swap参数的值为384m，设置完后再查看memory.memsw.limit_in_bytes文件时，这时就已经是设定的384m。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c5 -m 256m lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">a8e160d2f559dc3f6cf7f15a872bc8885c2d7d9336ce4f9fc433a8385d4d7dda</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">a8e160d2f559   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   4 seconds ago   Up 3 seconds             zhang-c5</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-a8e160d2f559dc3f6cf7f15a872bc8885c2d7d9336ce4f9fc433a8385d4d7dda.scope/memory.memsw.limit_in_bytes</span></span><br><span class="line">536870912</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;536870912/1024/1024&quot; | bc</span></span><br><span class="line">512</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c6 -m 256m --memory-swap 384m lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">3b063314ad723881de48aadddf92eb4c431719d117c0b792ba812c693ed80f0a</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">3b063314ad72   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   6 seconds ago    Up 4 seconds              zhang-c6</span><br><span class="line">a8e160d2f559   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   14 minutes ago   Up 14 minutes             zhang-c5</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/memory/system.slice/docker-3b063314ad723881de48aadddf92eb4c431719d117c0b792ba812c693ed80f0a.scope/memory.memsw.limit_in_bytes</span></span><br><span class="line">402653184</span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;402653184/1024/1024&quot; | bc</span></span><br><span class="line">384</span><br></pre></td></tr></table></figure><p><strong>注意：</strong> 这里的–memory-swap参数设置的值比设置的物理内存要小的话是会报错的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c7 -m 256m --memory-swap 128m lorel/docker-stress-ng:latest --vm 2 --vm-bytes 256M</span></span><br><span class="line">docker: Error response from daemon: Minimum memoryswap <span class="built_in">limit</span> should be larger than memory <span class="built_in">limit</span>, see usage.</span><br><span class="line">See <span class="string">&#x27;docker run --help&#x27;</span>.</span><br></pre></td></tr></table></figure><h2 id="容器的CPU限制"><a href="#容器的CPU限制" class="headerlink" title="容器的CPU限制"></a>容器的CPU限制</h2><p>在默认的情况下，每个容器对主机CPU周期的访问权限是没有限制的，但是我们是可以设置各种约束来限制给定容器访问宿主机的CPU的周期，大多数的用户使用使用的默认的CFS调度的方式，在Docker 1.13版本以及更高的版本，是还可以配置实时的优先级的。</p><h3 id="容器CPU限制的参数"><a href="#容器CPU限制的参数" class="headerlink" title="容器CPU限制的参数"></a>容器CPU限制的参数</h3><ul><li>–cpus</li></ul><p>–cpus 参数是在Docker1.13版本及后面的版本才开始使用的，也就是替代了之前版本中的 –cpu-period（CPU调度周期）和 –-cpu-quota（CPU调度限制）参数；使用该参数可以指定容器使用宿主机中的可用CPU资源，假设宿主机中是有4个CPU，启动容器时设置了–cpus&#x3D;”1.5”，则表示容器最多可以访问宿主机1.5个CPU，并且可以是在4个CPU的每个核心上都使用一点，但总数不能超过1.5个。</p><ul><li>–cpuset-cpus</li></ul><p>–cpuset-cpus 参数是用于指定容器运行的CPU编号，也就是我们说的绑定CPU核心。</p><ul><li>–cpuset-mems</li></ul><p>–cpuset-mem 参数是设置使用哪个cpu的内存，这个仅对非统一内存访问（NUMA）的架构有效，这个参数用的少。</p><ul><li>–cpu-shares</li></ul><p>–cpu-shares 参数是用于设置CFS中调度的相对最大比例权重，cpu-shares的值越高的容器，将会分得更多的时间片（宿主机多核CPU的总数为100%，假设容器A的–cpu-shares设定值为1024，容器B的–cpu-shares设定值为2048，则容器B能获得的宿主机CPU资源最多为容器1的2倍），默认的时间片是1024，最大是262144。</p><h3 id="容器CPU限制的验证"><a href="#容器CPU限制的验证" class="headerlink" title="容器CPU限制的验证"></a>容器CPU限制的验证</h3><h4 id="不限制容器的CPU"><a href="#不限制容器的CPU" class="headerlink" title="不限制容器的CPU"></a>不限制容器的CPU</h4><p>这里我的机器环境CPU核数是2C的，先不对容器的CPU做限制了，分配2个CPU加上两个工作进程，启动容器后在验证一下cgroup中的一些配置值。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c7 -m 128m lorel/docker-stress-ng:latest --cpu 2 --vm 2</span></span><br><span class="line">75b7eb753064c37898bc700842a7cc4ba68c902426d42d23de02d5740fb173a8</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">75b7eb753064   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   4 seconds ago   Up 3 seconds             zhang-c7</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats zhang-c7 </span></span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">75b7eb753064   zhang-c7   194.42%   69.88MiB / 128MiB   54.59%    836B / 0B   90.1kB / 6.8GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">75b7eb753064   zhang-c7   193.23%   127.8MiB / 128MiB   99.87%    836B / 0B   90.1kB / 7.07GB   7</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED              STATUS              PORTS     NAMES</span><br><span class="line">75b7eb753064   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   About a minute ago   Up About a minute             zhang-c7                  </span><br><span class="line"><span class="comment"># 这里的值默认是-1，也就是默认情况下容器对宿主机的CPU资源占用是不受限制的</span></span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-75b7eb753064c37898bc700842a7cc4ba68c902426d42d23de02d5740fb173a8.scope/cpu.cfs_quota_us </span></span><br><span class="line">-1</span><br></pre></td></tr></table></figure><h4 id="限制容器的CPU"><a href="#限制容器的CPU" class="headerlink" title="限制容器的CPU"></a>限制容器的CPU</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c8 -m 128m --cpus 1 lorel/docker-stress-ng:latest --cpu 2 --vm 2</span></span><br><span class="line">12d7917faa4cce53469fc3701aa22626d4c8d99216e60cbc75beb4fae223d0cc</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS        PORTS     NAMES</span><br><span class="line">12d7917faa4c   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   3 seconds ago   Up 1 second             zhang-c8</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats zhang-c8</span></span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">12d7917faa4c   zhang-c8   101.98%   128MiB / 128MiB     99.99%    766B / 0B   32.8kB / 1.81GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">12d7917faa4c   zhang-c8   101.98%   128MiB / 128MiB     99.99%    766B / 0B   32.8kB / 1.81GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">12d7917faa4c   zhang-c8   101.02%   128MiB / 128MiB     99.98%    836B / 0B   36.9kB / 1.94GB   7</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED              STATUS              PORTS     NAMES</span><br><span class="line">12d7917faa4c   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   About a minute ago   Up About a minute             zhang-c8</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-12d7917faa4cce53469fc3701aa22626d4c8d99216e60cbc75beb4fae223d0cc.scope/cpu.cfs_quota_us </span></span><br><span class="line">100000</span><br></pre></td></tr></table></figure><p>从上面的查看cpu.cfs_quota_us文件时，发现里面的值是100000，这个值其实是以百分比的形式来呈现的，每个核心CPU都是按照1000位单位转换百分比来进行资源分配的，如果是一个CPU的话就是100000&#x2F;1000&#x3D;100%，以此类推就好了。</p><p><strong>注意：</strong> 这里要注意了当要给容器分配CPU资源时，要计划好一个容器分多少，是不可以超过宿主机的最大CPU核心数，超过的话是会报错的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c9 -m 128m --cpus 4 lorel/docker-stress-ng:latest --cpu 2 --vm 2</span></span><br><span class="line">docker: Error response from daemon: Range of CPUs is from 0.01 to 2.00, as there are only 2 CPUs available.</span><br><span class="line">See <span class="string">&#x27;docker run --help&#x27;</span>.</span><br></pre></td></tr></table></figure><h4 id="容器绑定指定的CPU"><a href="#容器绑定指定的CPU" class="headerlink" title="容器绑定指定的CPU"></a>容器绑定指定的CPU</h4><p>默认容器是没有与宿主机的CPU核心做绑定的，运行容器时是工作在宿主机上的任意一个CPU核心上；如果想要绑定CPU核心的话是要使用到–cpuset-cpus参数，Linux系统中是从0开始编号的，之所以1号CPU就是编号0，绑定多个CPU是用逗号隔开，连续的可以使用短横线。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-c9 -m 128m --cpus 1 --cpuset-cpus 1 lorel/docker-stress-ng:latest --cpu 2 --vm 2</span></span><br><span class="line">4fdcf27e32bcb6d4a14026373957303cae42b48c7bb4d0c278bccd877660d2df</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">4fdcf27e32bc   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   5 seconds ago   Up 5 seconds             zhang-c9</span><br><span class="line"><span class="comment"># 查看当前宿主机上的CPU核心编号</span></span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpuset/system.slice/cpuset.cpus</span></span><br><span class="line">0-1</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpuset/system.slice/docker-4fdcf27e32bcb6d4a14026373957303cae42b48c7bb4d0c278bccd877660d2df.scope/cpuset.cpus</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure><h4 id="基于cpu-shares来切分CPU"><a href="#基于cpu-shares来切分CPU" class="headerlink" title="基于cpu-shares来切分CPU"></a>基于cpu-shares来切分CPU</h4><p>–cpu-shares这个参数是根据不同容器所占的权重来划分宿主机CPU资源，如果设置的权重越高，容器就越容易获得更多的宿主机CPU资源。这里我就启动两个容器来做测试了一个容器的–cpu-shares值设置为1000，另一个就设置500，这样的话查看CPU利用率的话会明显点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-t1 -m 128m --cpu-shares 1000 lorel/docker-stress-ng:latest --cpu 2 --vm 2</span></span><br><span class="line">db4d2dc60261f42449a2af6791233d6d1b27e9e9e42ee19f5002f95c3a307ec4</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -it -d --name zhang-t2 -m 128m --cpu-shares 500 lorel/docker-stress-ng:latest --cpu 2 --vm 2</span></span><br><span class="line">ecf63d132507a2b4d354ad550967607ae2b766bb6447c5bb725dfc2c882f689d</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED          STATUS          PORTS     NAMES</span><br><span class="line">ecf63d132507   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   3 seconds ago    Up 3 seconds              zhang-t2</span><br><span class="line">db4d2dc60261   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   20 seconds ago   Up 19 seconds             zhang-t1</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats </span></span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">ecf63d132507   zhang-t2   63.70%    127.9MiB / 128MiB   99.90%    726B / 0B   20.5kB / 6.09GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   124.46%   127.9MiB / 128MiB   99.92%    796B / 0B   65.5kB / 14GB     7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">ecf63d132507   zhang-t2   63.70%    127.9MiB / 128MiB   99.90%    726B / 0B   20.5kB / 6.09GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   124.46%   127.9MiB / 128MiB   99.92%    796B / 0B   65.5kB / 14GB     7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">ecf63d132507   zhang-t2   63.22%    126.3MiB / 128MiB   98.67%    726B / 0B   20.5kB / 6.18GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   124.70%   127.9MiB / 128MiB   99.91%    796B / 0B   65.5kB / 14.2GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O         PIDS</span><br><span class="line">ecf63d132507   zhang-t2   63.22%    126.3MiB / 128MiB   98.67%    726B / 0B   20.5kB / 6.18GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   124.70%   127.9MiB / 128MiB   99.91%    796B / 0B   65.5kB / 14.2GB   7</span><br></pre></td></tr></table></figure><h4 id="动态修改cpu-shares值（修改权重）"><a href="#动态修改cpu-shares值（修改权重）" class="headerlink" title="动态修改cpu-shares值（修改权重）"></a>动态修改cpu-shares值（修改权重）</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">ecf63d132507   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   2 minutes ago   Up 2 minutes             zhang-t2</span><br><span class="line">db4d2dc60261   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   3 minutes ago   Up 3 minutes             zhang-t1</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-ecf63d132507a2b4d354ad550967607ae2b766bb6447c5bb725dfc2c882f689d.scope/cpu.shares </span></span><br><span class="line">500</span><br><span class="line">root@ubuntu:~<span class="comment"># echo 2000 &gt; /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-ecf63d132507a2b4d354ad550967607ae2b766bb6447c5bb725dfc2c882f689d.scope/cpu.shares </span></span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-ecf63d132507a2b4d354ad550967607ae2b766bb6447c5bb725dfc2c882f689d.scope/cpu.shares </span></span><br><span class="line">2000</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats</span></span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   125.70%   128MiB / 128MiB     99.98%    866B / 0B   127kB / 33.4GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   63.96%    127.9MiB / 128MiB   99.90%    936B / 0B   225kB / 55.8GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   125.70%   128MiB / 128MiB     99.98%    866B / 0B   127kB / 33.4GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   63.96%    127.9MiB / 128MiB   99.90%    936B / 0B   225kB / 55.8GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   125.09%   127.8MiB / 128MiB   99.83%    866B / 0B   127kB / 33.6GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   63.01%    128MiB / 128MiB     100.00%   936B / 0B   225kB / 55.9GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   125.09%   127.8MiB / 128MiB   99.83%    866B / 0B   127kB / 33.6GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   63.01%    128MiB / 128MiB     100.00%   936B / 0B   225kB / 55.9GB   7</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 这时我又将zhang-t2的cpu-shares值改回去，在验证一下cgroup的数据</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE                           COMMAND                  CREATED         STATUS         PORTS     NAMES</span><br><span class="line">ecf63d132507   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   6 minutes ago   Up 6 minutes             zhang-t2</span><br><span class="line">db4d2dc60261   lorel/docker-stress-ng:latest   <span class="string">&quot;/usr/bin/stress-ng …&quot;</span>   6 minutes ago   Up 6 minutes             zhang-t1</span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-ecf63d132507a2b4d354ad550967607ae2b766bb6447c5bb725dfc2c882f689d.scope/cpu.shares </span></span><br><span class="line">2000</span><br><span class="line">root@ubuntu:~<span class="comment"># echo 500 &gt; /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-ecf63d132507a2b4d354ad550967607ae2b766bb6447c5bb725dfc2c882f689d.scope/cpu.shares </span></span><br><span class="line">root@ubuntu:~<span class="comment"># cat /sys/fs/cgroup/cpu,cpuacct/system.slice/docker-ecf63d132507a2b4d354ad550967607ae2b766bb6447c5bb725dfc2c882f689d.scope/cpu.shares </span></span><br><span class="line">500</span><br><span class="line">root@ubuntu:~<span class="comment"># docker stats </span></span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   65.44%    127.9MiB / 128MiB   99.91%    936B / 0B   176kB / 57.8GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   121.41%   127.9MiB / 128MiB   99.91%    936B / 0B   246kB / 72.1GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   65.44%    127.9MiB / 128MiB   99.91%    936B / 0B   176kB / 57.8GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   121.41%   127.9MiB / 128MiB   99.91%    936B / 0B   246kB / 72.1GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   62.51%    127.9MiB / 128MiB   99.91%    936B / 0B   176kB / 57.9GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   126.19%   128MiB / 128MiB     99.99%    936B / 0B   246kB / 72.2GB   7</span><br><span class="line"></span><br><span class="line">CONTAINER ID   NAME       CPU %     MEM USAGE / LIMIT   MEM %     NET I/O     BLOCK I/O        PIDS</span><br><span class="line">ecf63d132507   zhang-t2   62.51%    127.9MiB / 128MiB   99.91%    936B / 0B   176kB / 57.9GB   7</span><br><span class="line">db4d2dc60261   zhang-t1   126.19%   128MiB / 128MiB     99.99%    936B / 0B   246kB / 72.2GB   7</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker的数据管理</title>
      <link href="/post/c67fd481.html"/>
      <url>/post/c67fd481.html</url>
      
        <content type="html"><![CDATA[<h1 id="Docker数据管理"><a href="#Docker数据管理" class="headerlink" title="Docker数据管理"></a>Docker数据管理</h1><p>如果正在运行中的容器如果生成了新的数据或者修改了现有的一个已经存在的文件，那么新产生的数据就会被复制到读写层进行持久化保存，这个读写层的话也就是容器的工作目录，这就是写时复制（COW）copy on write的机制。</p><p><img src="/images/COW.png"></p><h2 id="Docker默认的数据存储类型"><a href="#Docker默认的数据存储类型" class="headerlink" title="Docker默认的数据存储类型"></a>Docker默认的数据存储类型</h2><p>在没有设置数据卷或其他数据存储方式时，Docker是无法对容器中新产生的数据进行持久化保存。暂时保存在读写层的数据也会随着容器的删除而被删除，这样的话对于MySQL这类要求数据能做到持久化保存的容器是极为不利的。</p><h2 id="Docker数据持久化存储的类型"><a href="#Docker数据持久化存储的类型" class="headerlink" title="Docker数据持久化存储的类型"></a>Docker数据持久化存储的类型</h2><p>Docker要使数据持久化保存的话，现在Docker的数据存储类型有数据卷、文件挂载和数据卷容器这三种类型。</p><h3 id="数据卷"><a href="#数据卷" class="headerlink" title="数据卷"></a>数据卷</h3><p>数据卷实际上就是宿主机上的文件或目录，可以被直接挂载到容器中，容器中产生的新数据也都会直接保存到宿主机的挂载目录中，从而实现容器数据的持久化保存。</p><p><img src="/images/COW.png"></p><p><strong>数据卷的特点：</strong></p><ol><li>数据卷是宿主机的目录或者文件，可以在多个容器之间共同使用；</li><li>在宿主机对数据卷中的数据做出更改后，所有使用该数据卷的容器都会随着更新；</li><li>数据卷的数据可以持久保存，即使删除使用该数据卷的容器也不会受到影响；</li><li>在容器里写入的数据不会影响到镜像本身。</li></ol><p><strong>适合数据卷的服务类型：</strong></p><p>在生产环境中，我们是需要针对不同的类型服务来使用不同类型的数据存储做出相应的规划，从而保证服务的可扩展性、稳定性和数据的安全性。</p><p>不是所有的服务都是要使用到数据卷的，就例如下面这图一样，从左边到右边是无存储到有存储的需求，总下面到上面是从无http请求的状态到有http请求状态，根据实际要求来确定服务是否需要使用数据卷</p><p><img src="/images/data-storage.png"></p><p><strong>数据卷的使用场景：</strong></p><ol><li>日志输出</li><li>静态web文件</li><li>应用的配置文件</li><li>多容器之间的目录或文件共享</li></ol><h3 id="文件挂载"><a href="#文件挂载" class="headerlink" title="文件挂载"></a>文件挂载</h3><p>文件挂载的话一般用于一些配置文件和一些很少改动的文件场景，比如nginx的配置文件、Tomcat的配置文件等等一些其他服务的配置文件，这种类型比较少用。</p><h3 id="数据卷容器"><a href="#数据卷容器" class="headerlink" title="数据卷容器"></a>数据卷容器</h3><p>数据卷容器的功能是可以让数据在多个docker容器之间共享，即可以让B容器方法A容器的内容，也可以让C容器访问A容器的内容。</p><p><img src="/images/data-storage1.png"></p><h1 id="MySQL容器中的数据持久保存"><a href="#MySQL容器中的数据持久保存" class="headerlink" title="MySQL容器中的数据持久保存"></a>MySQL容器中的数据持久保存</h1><h2 id="下面MySQL镜像"><a href="#下面MySQL镜像" class="headerlink" title="下面MySQL镜像"></a>下面MySQL镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID   CREATED   SIZE</span><br><span class="line">root@ubuntu:~<span class="comment"># docker pull mysql:5.7.44</span></span><br><span class="line">5.7.44: Pulling from library/mysql</span><br><span class="line">11a38aebcb7a: Pull complete</span><br><span class="line">91ab01309bd6: Pull complete</span><br><span class="line">6c91fabb88c2: Pull complete</span><br><span class="line">8f46e806ab5c: Pull complete</span><br><span class="line">29f5af1d1661: Pull complete</span><br><span class="line">62aca7179a54: Pull complete</span><br><span class="line">85023e6de3be: Pull complete</span><br><span class="line">6d5934a87cbb: Pull complete</span><br><span class="line">c878502d3f70: Pull complete</span><br><span class="line">4756467c684a: Pull complete</span><br><span class="line">ee9043dd2677: Pull complete</span><br><span class="line">Digest: sha256:f566819f2eee3a60cf5ea6c8b7d1bfc9de62e34268bf62dc34870c4fca8a85d1</span><br><span class="line">Status: Downloaded newer image <span class="keyword">for</span> mysql:5.7.44</span><br><span class="line">docker.io/library/mysql:5.7.44</span><br><span class="line">root@ubuntu:~<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">mysql        5.7.44    bdba757bc933   5 weeks ago   501MB</span><br></pre></td></tr></table></figure><h2 id="启动一个未设置数据存储的MySQL容器"><a href="#启动一个未设置数据存储的MySQL容器" class="headerlink" title="启动一个未设置数据存储的MySQL容器"></a>启动一个未设置数据存储的MySQL容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用刚刚下载的镜像启动一个容器，并设置root用户的登陆密码</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=&quot;zhang@1234&quot; --name mysql-nodatadisk mysql:5.7.44</span></span><br><span class="line">13d6709083d7069d9db8e8718fd8bfdaf8ee6bb5eabe9a88b9317a223519ccf9</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS         PORTS                                                  NAMES</span><br><span class="line">13d6709083d7   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   10 seconds ago   Up 9 seconds   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql-nodatadisk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用客户端测试连接</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mysql -uroot -p&quot;zhang@1234&quot; -h 10.0.0.111</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 2</span><br><span class="line">Server version: 5.7.44 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zhang;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| zhang              |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 当删除这个容器在启动一个新的容器时</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker rm -f mysql-nodatadisk</span></span><br><span class="line">mysql-nodatadisk</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -d -p 3306:3306 -e MYSQL_ROOT_PASSWORD=&quot;zhang@1234&quot; --name mysql-nodatadisk mysql:5.7.44</span></span><br><span class="line">e8360b78b35d47e76440a92f4766b8ae49dbef142b60dfd4cdfbee3be4d399eb</span><br><span class="line"><span class="comment"># 这时使用数据库客户端连接后会发现没有刚刚创建的容器，每个容器之间的隔离的。相当于两个系统一样。</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mysql -uroot -p&quot;zhang@1234&quot; -h 10.0.0.111</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 2</span><br><span class="line">Server version: 5.7.44 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><h2 id="设置MySQL的容器数据持久保存"><a href="#设置MySQL的容器数据持久保存" class="headerlink" title="设置MySQL的容器数据持久保存"></a>设置MySQL的容器数据持久保存</h2><h3 id="数据持久保存数据的原理"><a href="#数据持久保存数据的原理" class="headerlink" title="数据持久保存数据的原理"></a>数据持久保存数据的原理</h3><p>可以在宿主机上使用docker inspect 容器name&#x2F;容器ID 来看已经创建容器的相关信息，数据主要是在LowerDir、MergedDir、UpperDir和WorkDir这几个目录中。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker inspect mysql-nodatadisk</span></span><br><span class="line">    <span class="string">&quot;LowerDir&quot;</span>: <span class="string">&quot;/data/docker/overlay2/b9b03593e15f4d3fb772febb550ef7a68965e417d85d99e28a66e6d0c6a0c981-init/diff:/data/docker/overlay2/d4d5930373738d547fe6f7744a724b2d0f39599f3e60067024735095823d8327/diff:/data/docker/overlay2/06f62e6822df51fc28ab380b204480263df92d6749268903d939b3b2d563ab94/diff:/data/docker/overlay2/8f80b3f08b76a1183531bd36681ea3573202c2e25cef0550c05a87d9b551c8e3/diff:/data/docker/overlay2/8f69ad5d43a87f6875efe21b81dbd06de46d21d6ac5d46d880ad1582157e3da2/diff:/data/docker/overlay2/8f5280b98af10559c24ec1f9a8e94005e8155c71f2ccca04da6082063384ce92/diff:/data/docker/overlay2/8818c80d0192ee4d439d204b0f766811523b351256cb0877f48928dd6bb24c82/diff:/data/docker/overlay2/a03ccf9f4b5105b9052dc6bfd502f8d975ade835903270290333a73b3b208873/diff:/data/docker/overlay2/0db90302e93b74821dc342537aacabc58cd33b645d12a5ad841d59745ccfbf13/diff:/data/docker/overlay2/b60ff6043eb62b874fbbba82da35907c043992fb9fcc65ad4d255b95b7e7f8cf/diff:/data/docker/overlay2/9b6aeac447ab4a4b515c59cda8de90c1ca426c1a26c47e122b56b440029bf1eb/diff:/data/docker/overlay2/b2dfd3fb23b11b86fa65efbc2b2aaddbcfeef0ef464d6dad136444018034554a/diff&quot;</span>,</span><br><span class="line">    <span class="string">&quot;MergedDir&quot;</span>: <span class="string">&quot;/data/docker/overlay2/b9b03593e15f4d3fb772febb550ef7a68965e417d85d99e28a66e6d0c6a0c981/merged&quot;</span>,</span><br><span class="line">    <span class="string">&quot;UpperDir&quot;</span>: <span class="string">&quot;/data/docker/overlay2/b9b03593e15f4d3fb772febb550ef7a68965e417d85d99e28a66e6d0c6a0c981/diff&quot;</span>,</span><br><span class="line">    <span class="string">&quot;WorkDir&quot;</span>: <span class="string">&quot;/data/docker/overlay2/b9b03593e15f4d3fb772febb550ef7a68965e417d85d99e28a66e6d0c6a0c981/work&quot;</span></span><br></pre></td></tr></table></figure><p>这四个目录的简介：</p><ul><li>LowerDir：这个目录是容器所使用的镜像，是只读的；</li><li>MergedDir：这个目录指的是容器的最上层，这是可以进行读写的操作的；</li><li>UpperDir：这个目录是容器的文件系统，使用Union FS将LowerDir和UpperDir合并给容器使用</li><li>WorkDir：这个目录是容器在宿主机上的工作目录</li></ul><p>当我们没有设置数据存储的时候，删除容器的话也就是说&#x2F;data&#x2F;docker&#x2F;overlay2&#x2F;目录下创建的容器可写层也会跟随这个容器删除而删除；如果使用了数据存储的话，可以将容器后面产生的数据保存到数据卷中，即使容器删了，数据卷也还是会在的，这样的话就可以在创建一个容器指定这个数据卷就好了，这样数据也就不会随着容器的删除而删掉，从而将容器的数据得到了持久的保存。</p><h3 id="创建数据卷来保存容器的数据"><a href="#创建数据卷来保存容器的数据" class="headerlink" title="创建数据卷来保存容器的数据"></a>创建数据卷来保存容器的数据</h3><p><strong>这里要注意：启动MySQL容器的时候是需要给root用户密码的，不然的话容器会起不来。</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># docker run -d -p 3307:3306 mysql:5.7.44</span></span><br><span class="line">83b36ceab16eb24f764fe6c4f27a3a764d777c828cc7d2f3e84131ca0de72833</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                                  NAMES</span><br><span class="line">e8360b78b35d   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   24 minutes ago   Up 24 minutes   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql-nodatadisk</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS                     PORTS                                                  NAMES</span><br><span class="line">83b36ceab16e   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   6 seconds ago    Exited (1) 5 seconds ago                                                          cool_elion</span><br><span class="line">e8360b78b35d   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   24 minutes ago   Up 24 minutes              0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql-nodatadisk</span><br><span class="line">root@ubuntu:~<span class="comment"># docker logs -f cool_elion</span></span><br><span class="line">2023-12-05 04:05:29+00:00 [Note] [Entrypoint]: Entrypoint script <span class="keyword">for</span> MySQL Server 5.7.44-1.el7 started.</span><br><span class="line">2023-12-05 04:05:30+00:00 [Note] [Entrypoint]: Switching to dedicated user <span class="string">&#x27;mysql&#x27;</span></span><br><span class="line">2023-12-05 04:05:30+00:00 [Note] [Entrypoint]: Entrypoint script <span class="keyword">for</span> MySQL Server 5.7.44-1.el7 started.</span><br><span class="line">2023-12-05 04:05:30+00:00 [ERROR] [Entrypoint]: Database is uninitialized and password option is not specified</span><br><span class="line">    You need to specify one of the following as an environment variable:</span><br><span class="line">    - MYSQL_ROOT_PASSWORD</span><br><span class="line">    - MYSQL_ALLOW_EMPTY_PASSWORD</span><br><span class="line">    - MYSQL_RANDOM_ROOT_PASSWORD</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除容器状态处于exited的容器</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker rm `docker ps -aq -f status=exited` </span></span><br></pre></td></tr></table></figure><p><strong>上面命令解释：</strong></p><p>docker ps 是列出容器的命令。</p><ul><li>-a 参数表示列出所有的容器，包括正在运行的和停止的。</li><li>-q 表示仅输出容器ID。</li><li>-f 表示根据某种条件过滤结果，在这里用 status&#x3D;exited 来过滤出所有已经退出的容器。</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在宿主机上创建一个目录来做数据卷，并创建一个MySQL容器使用这个数据卷</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mkdir -p /data/mysql-data</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY   TAG       IMAGE ID       CREATED       SIZE</span><br><span class="line">mysql        5.7.44    bdba757bc933   5 weeks ago   501MB</span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -d -p 3306:3306 -v /data/mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=&quot;zhang@1234&quot; --name mysql-datadisk mysql:5.7.44</span></span><br><span class="line">26850257778edb677babc5ddf489464acd0e2fe4506c45225a96e1b690c28ae2</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED          STATUS          PORTS                                                  NAMES</span><br><span class="line">26850257778e   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   32 seconds ago   Up 32 seconds   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql-datadisk</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在客户端上创建一个测试数据库</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mysql -uroot -p&quot;zhang@1234&quot; -h 10.0.0.111</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 2</span><br><span class="line">Server version: 5.7.44 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create database zhang;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| zhang              |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这时在宿主机上的/data/mysql-data目录下面就会多了一个zhang的目录</span></span><br><span class="line">root@ubuntu:~<span class="comment"># ll /data/mysql-data/</span></span><br><span class="line">total 188488</span><br><span class="line">drwxr-xr-x 6 systemd-coredump root                 4096 Apr  25 12:24 ./</span><br><span class="line">drwx--x--x 4 root             root                 4096 Apr  25 12:20 ../</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump       56 Apr  25 12:21 auto.cnf</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1680 Apr  25 12:21 ca-key.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump     1112 Apr  25 12:21 ca.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump     1112 Apr  25 12:21 client-cert.pem</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1680 Apr  25 12:21 client-key.pem</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump     1318 Apr  25 12:22 ib_buffer_pool</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 79691776 Apr  25 12:22 ibdata1</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 50331648 Apr  25 12:22 ib_logfile0</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 50331648 Apr  25 12:21 ib_logfile1</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 12582912 Apr  25 12:22 ibtmp1</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump     4096 Apr  25 12:21 mysql/</span><br><span class="line">lrwxrwxrwx 1 systemd-coredump systemd-coredump       27 Apr  25 12:21 mysql.sock -&gt; /var/run/mysqld/mysqld.sock</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump     4096 Apr  25 12:21 performance_schema/</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1680 Apr  25 12:21 private_key.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump      452 Apr  25 12:21 public_key.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump     1112 Apr  25 12:21 server-cert.pem</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1676 Apr  25 12:21 server-key.pem</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump    12288 Apr  25 12:21 sys/</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump     4096 Apr  25 12:24 zhang/</span><br></pre></td></tr></table></figure><h3 id="删除刚刚创建的容器并重新启动一个容器"><a href="#删除刚刚创建的容器并重新启动一个容器" class="headerlink" title="删除刚刚创建的容器并重新启动一个容器"></a>删除刚刚创建的容器并重新启动一个容器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在宿主机上删除刚刚创建挂载数据卷的容器，在检查/data/mysql-data目录下的文件是否存在</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED       STATUS       PORTS                                                  NAMES</span><br><span class="line">26850257778e   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   2 hours ago   Up 2 hours   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql-datadisk</span><br><span class="line">root@ubuntu:~<span class="comment"># docker rm -f mysql-datadisk</span></span><br><span class="line">mysql-datadisk</span><br><span class="line">root@ubuntu:~<span class="comment"># ll /data/mysql-data/</span></span><br><span class="line">total 188488</span><br><span class="line">drwxr-xr-x 6 systemd-coredump root                 4096 Apr  25 12:24 ./</span><br><span class="line">drwx--x--x 4 root             root                 4096 Apr  25 12:20 ../</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump       56 Apr  25 12:21 auto.cnf</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1680 Apr  25 12:21 ca-key.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump     1112 Apr  25 12:21 ca.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump     1112 Apr  25 12:21 client-cert.pem</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1680 Apr  25 12:21 client-key.pem</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump     1318 Apr  25 12:22 ib_buffer_pool</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 79691776 Apr  25 12:22 ibdata1</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 50331648 Apr  25 12:22 ib_logfile0</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 50331648 Apr  25 12:21 ib_logfile1</span><br><span class="line">-rw-r----- 1 systemd-coredump systemd-coredump 12582912 Apr  25 12:22 ibtmp1</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump     4096 Apr  25 12:21 mysql/</span><br><span class="line">lrwxrwxrwx 1 systemd-coredump systemd-coredump       27 Apr  25 12:21 mysql.sock -&gt; /var/run/mysqld/mysqld.sock</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump     4096 Apr  25 12:21 performance_schema/</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1680 Apr  25 12:21 private_key.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump      452 Apr  25 12:21 public_key.pem</span><br><span class="line">-rw-r--r-- 1 systemd-coredump systemd-coredump     1112 Apr  25 12:21 server-cert.pem</span><br><span class="line">-rw------- 1 systemd-coredump systemd-coredump     1676 Apr  25 12:21 server-key.pem</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump    12288 Apr  25 12:21 sys/</span><br><span class="line">drwxr-x--- 2 systemd-coredump systemd-coredump     4096 Apr  25 12:24 zhang/</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用/data/mysql-data目录作为数据卷在重新启动一个新的容器，创建完后在用客户端检查数据是否有</span></span><br><span class="line">root@ubuntu:~<span class="comment"># docker run -d -p 3306:3306 --restart=always -v /data/mysql-data:/var/lib/mysql -e MYSQL_ROOT_PASSWORD=&quot;zhang@1234&quot; --name mysql-datadisk1 mysql:5.7.44</span></span><br><span class="line">05b2e60771841091d571451a036c664dade7d5b1342f46270877e027cf27795e</span><br><span class="line">root@ubuntu:~<span class="comment"># docker ps</span></span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                  CREATED         STATUS         PORTS                                                  NAMES</span><br><span class="line">05b2e6077184   mysql:5.7.44   <span class="string">&quot;docker-entrypoint.s…&quot;</span>   7 seconds ago   Up 6 seconds   0.0.0.0:3306-&gt;3306/tcp, :::3306-&gt;3306/tcp, 33060/tcp   mysql-datadisk1</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># mysql -uroot -p&quot;zhang@1234&quot; -h 10.0.0.111</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 2</span><br><span class="line">Server version: 5.7.44 MySQL Community Server (GPL)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2023, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| zhang              |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br></pre></td></tr></table></figure><p>从上面的客户端连接测试，发现使用数据卷存储创建的容器，即使删除了容器数据也是存在数据卷中的，这样的话就实现了容器的数据持久保存。</p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建harbor私有镜像仓库</title>
      <link href="/post/2194fb2b.html"/>
      <url>/post/2194fb2b.html</url>
      
        <content type="html"><![CDATA[<h1 id="Harbor的简介"><a href="#Harbor的简介" class="headerlink" title="Harbor的简介"></a>Harbor的简介</h1><p>Harbor是一个用于存储和分发Docker镜像的企业级Registry服务器，由VMware开源，其通过添加了一些企业必需的功能特性，例如安全。标识和管理等，扩展了开源Docker Distribution。作为一个企业级私有Registry服务器，Harbor提供了更好的性能和安全，也提升了用户使用Registry构建和运行环境传输镜像的效率。Harbor支持安装在多个Registry节点的镜像资源复制，镜像全部保存在私有Registry中，确保数据和知识产权在公司内部网络中管控，另外，Harbor也提供了高级的安全特性，诸如用户管理，访问控制和活动审计等。</p><p>Harbor官方github地址：<a href="https://github.com/goharbor/harbor">https://github.com/goharbor/harbor</a></p><p>Harbor官方地址：<a href="https://goharbor.io/">https://goharbor.io/</a></p><p><img src="/images/harbor_Architecture.png"></p><p><strong>Harbor的功能：</strong></p><ul><li>基于角色的访问控制：用户与Docker镜像仓库通过“项目”进行组织管理，一个用户可以对多个镜像仓库在同一命名空间（project）里有不同的权限。</li><li>镜像的复制：镜像可以在多个Registry实例中复制（同步），尤其适合于负载均衡、高可用、混合云和各个云平台的场景。</li><li>图形化的用户界面：用户可以通过账号密码登陆后浏览浏览器，检索当前的Docker镜像仓库，管理项目和命名空间。</li><li>AD&#x2F;LDAP支：Harbor可以集成与企业内部已经有的AD&#x2F;LDAP，用来鉴权认证管理。</li><li>审计管理：所有针对镜像仓库的操作都可以被记录追溯，用来审计管理。</li><li>国际化：拥有英文、中文、德文、日文和俄文的本地话版本，还有其他更多的语言将会在后期的版本中添加进来。</li><li>RESTful API - RESTful API：提供给管理员对于Harbor更多的操控，从而使得与其他管理软件之间的集成变得更加便利；</li><li>部署简单：提供了在线和离线安装两种工具，我们也可以安装到vSphere（OVA方式）虚拟设备中。</li></ul><h1 id="安装Harbor"><a href="#安装Harbor" class="headerlink" title="安装Harbor"></a>安装Harbor</h1><h2 id="Harbor的安装方式"><a href="#Harbor的安装方式" class="headerlink" title="Harbor的安装方式"></a>Harbor的安装方式</h2><ul><li>在线安装：在安装的时候，下载安装的程序包就会比较小，其他的各种依赖包的话是需要通过网络下载的；</li><li>离线安装：离线安装时，下载安装的程序包会比较大，里面包含了在安装过程中所需要的各个资源，主机不联网也是可以的，笔者推荐使用离线安装。</li></ul><h2 id="下载并解压harbor压缩包"><a href="#下载并解压harbor压缩包" class="headerlink" title="下载并解压harbor压缩包"></a>下载并解压harbor压缩包</h2><p>harbor压缩包下载地址：<a href="https://github.com/goharbor/harbor/releases">https://github.com/goharbor/harbor/releases</a></p><p>这里我使用的是harbor 2.8.4版本的离线安装压缩包</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># mkdir -p /data/service &amp;&amp; cd $_</span></span><br><span class="line">root@ubuntu:/data/service<span class="comment"># wget https://github.com/goharbor/harbor/releases/download/v2.8.4/harbor-offline-installer-v2.8.4.tgz</span></span><br><span class="line">root@ubuntu:/data/service<span class="comment"># ll -h</span></span><br><span class="line">total 581M</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Apr 22 09:31 ./</span><br><span class="line">drwx--x--x 4 root root 4.0K Apr 22 09:31 ../</span><br><span class="line">-rw-r--r-- 1 root root 581M Aug 16 14:44 harbor-offline-installer-v2.8.4.tgz</span><br><span class="line">root@ubuntu:/data/service<span class="comment"># tar xf harbor-offline-installer-v2.8.4.tgz</span></span><br></pre></td></tr></table></figure><h2 id="修改Harbor配置文件并开始安装Harbor"><a href="#修改Harbor配置文件并开始安装Harbor" class="headerlink" title="修改Harbor配置文件并开始安装Harbor"></a>修改Harbor配置文件并开始安装Harbor</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/data/service<span class="comment"># cd harbor/</span></span><br><span class="line">root@ubuntu:/data/service/harbor<span class="comment"># ll</span></span><br><span class="line">total 597548</span><br><span class="line">drwxr-xr-x 2 root root      4096 Apr 22 09:33 ./</span><br><span class="line">drwxr-xr-x 3 root root      4096 Apr 22 09:33 ../</span><br><span class="line">-rw-r--r-- 1 root root      3639 Aug 15 17:53 common.sh</span><br><span class="line">-rw-r--r-- 1 root root 611834153 Aug 15 17:54 harbor.v2.8.4.tar.gz</span><br><span class="line">-rw-r--r-- 1 root root     12499 Aug 15 17:53 harbor.yml.tmpl</span><br><span class="line">-rwxr-xr-x 1 root root      2725 Aug 15 17:53 install.sh*</span><br><span class="line">-rw-r--r-- 1 root root     11347 Aug 15 17:53 LICENSE</span><br><span class="line">-rwxr-xr-x 1 root root      1881 Aug 15 17:53 prepare*</span><br><span class="line"><span class="comment"># 准备harbor配置文件</span></span><br><span class="line">root@ubuntu:/data/service/harbor<span class="comment"># cp harbor.yml.tmpl harbor.yml</span></span><br><span class="line"><span class="comment"># 修改配置文件（找到相关要改得到修改即可）</span></span><br><span class="line">root@ubuntu:/data/service/harbor<span class="comment"># vim harbor.yml</span></span><br><span class="line"><span class="comment"># 这配置是设置的访问地址，可以使用域名或IP地址，使用域名的话需要做好域名解析的，如果自定义的域名的话，可以在本地的host文件自定义一下。</span></span><br><span class="line">hostname: harbor.zhang.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># http的相关配置</span></span><br><span class="line">http:</span><br><span class="line">  <span class="comment"># port for http, default is 80. If https enabled, this port will redirect to https port</span></span><br><span class="line">  port: 80</span><br><span class="line"></span><br><span class="line"><span class="comment"># https的相关配置</span></span><br><span class="line"><span class="comment">#https:</span></span><br><span class="line">  <span class="comment">#port: 443</span></span><br><span class="line">  <span class="comment">#certificate: /your/certificate/path</span></span><br><span class="line">  <span class="comment">#private_key: /your/private/key/path</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line">harbor_admin_password: zhang1234</span><br><span class="line"></span><br><span class="line"><span class="comment"># Harbor 数据库的配置（）</span></span><br><span class="line">database:</span><br><span class="line">  <span class="comment"># The password for the root user of Harbor DB. Change this before any production use.</span></span><br><span class="line">  <span class="comment"># Harbor DB root用户的密码。 在生产环境使用之前必须更改此设置，默认的设置是root123</span></span><br><span class="line">  password: zhang1234</span><br><span class="line"></span><br><span class="line"><span class="comment"># 存放harbor的数据的目录，在生产环境中看情况存储在哪，一般都是放在数据盘上</span></span><br><span class="line">data_volume: /data/harbor-data</span><br><span class="line">root@ubuntu:/data/service/harbor<span class="comment"># ./install.sh</span></span><br></pre></td></tr></table></figure><p><img src="/images/install-harbor.png"></p><h2 id="用浏览器访问测试"><a href="#用浏览器访问测试" class="headerlink" title="用浏览器访问测试"></a>用浏览器访问测试</h2><p><img src="/images/install-harbor1.png"></p><p><img src="/images/install-harbor2.png"></p><h2 id="Harbor的https实现"><a href="#Harbor的https实现" class="headerlink" title="Harbor的https实现"></a>Harbor的https实现</h2><p>需要实现https的话，首先得有ssl的域名证书，这里的我就是自签证书了，在生产环境中一般都是购买的ssl证书，不过一个阿里云企业账号一年可以免费有20个免费证书的申请额度。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/data/service/harbor<span class="comment"># cd /data/harbor-data/</span></span><br><span class="line">root@ubuntu:/data/harbor-data<span class="comment"># mkdir cert &amp;&amp; cd $_</span></span><br><span class="line">root@ubuntu:/data/harbor-data/cert<span class="comment"># vim cert.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">CA_SUBJECT=<span class="string">&quot;/O=zhang/CN=ca.zhang.com&quot;</span></span><br><span class="line">SUBJECT=<span class="string">&quot;/C=CN/ST=guangdong/L=shenzhen/O=zhang/CN=harbor.zhang.com&quot;</span></span><br><span class="line">SERIAL=34</span><br><span class="line">EXPIRE=365</span><br><span class="line">FILE=harbor.zhang.com</span><br><span class="line"></span><br><span class="line">openssl req  -x509 -newkey rsa:2048 -subj <span class="variable">$CA_SUBJECT</span> -keyout ca.key -nodes -days <span class="variable">$EXPIRE</span> -out ca.crt</span><br><span class="line">openssl req -newkey rsa:2048 -nodes -keyout <span class="variable">$&#123;FILE&#125;</span>.key  -subj <span class="variable">$SUBJECT</span> -out <span class="variable">$&#123;FILE&#125;</span>.csr</span><br><span class="line">openssl x509 -req -<span class="keyword">in</span> <span class="variable">$&#123;FILE&#125;</span>.csr  -CA ca.crt -CAkey ca.key -set_serial <span class="variable">$SERIAL</span>  -days <span class="variable">$EXPIRE</span> -out <span class="variable">$&#123;FILE&#125;</span>.crt</span><br><span class="line"><span class="built_in">chmod</span> 600 <span class="variable">$&#123;FILE&#125;</span>.key ca.key</span><br><span class="line">root@ubuntu:/data/harbor-data/cert<span class="comment"># bash cert.sh</span></span><br><span class="line">root@ubuntu:/data/harbor-data/cert<span class="comment"># ls</span></span><br><span class="line">ca.crt  ca.key  cert.sh  harbor.zhang.com.crt  harbor.zhang.com.csr  harbor.zhang.com.key</span><br><span class="line">root@ubuntu:/data/harbor-data/cert<span class="comment"># vim /data/service/harbor/harbor.yml</span></span><br><span class="line"><span class="comment"># https 相关配置</span></span><br><span class="line">https:</span><br><span class="line">  port: 443</span><br><span class="line">  certificate: /data/harbor-data/cert/harbor.zhang.com.crt</span><br><span class="line">  private_key: /data/harbor-data/cert/harbor.zhang.com.key</span><br><span class="line"></span><br><span class="line">root@ubuntu:/data/harbor-data/cert<span class="comment"># cd /data/service/harbor/</span></span><br><span class="line">root@ubuntu:/data/service/harbor<span class="comment"># ls</span></span><br><span class="line">common  common.sh  docker-compose.yml  harbor.v2.8.4.tar.gz  harbor.yml  harbor.yml.tmpl  install.sh  LICENSE  prepare</span><br><span class="line">root@ubuntu:/data/service/harbor<span class="comment"># ./install.sh</span></span><br></pre></td></tr></table></figure><p><img src="/images/install-harbor3.png"></p><p><img src="/images/install-harbor4.png"></p>]]></content>
      
      
      <categories>
          
          <category> Docker </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将VMware虚拟机迁移到KVM环境</title>
      <link href="/post/4fdc4379.html"/>
      <url>/post/4fdc4379.html</url>
      
        <content type="html"><![CDATA[<h1 id="准备好VMware中虚拟机的vmdk文件"><a href="#准备好VMware中虚拟机的vmdk文件" class="headerlink" title="准备好VMware中虚拟机的vmdk文件"></a>准备好VMware中虚拟机的vmdk文件</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># mkdir /data/vmware-vmdk</span></span><br><span class="line">root@ubuntu:~<span class="comment"># cd /data/vmware-vmdk/</span></span><br><span class="line">root@ubuntu:/data/vmware-vmdk<span class="comment"># ll</span></span><br><span class="line">total 4005580</span><br><span class="line">drwxr-xr-x 2 root root       4096 Apr 16 15:38 ./</span><br><span class="line">drwxr-xr-x 4 root root       4096 Apr 16 15:37 ../</span><br><span class="line">-rw-r--r-- 1 root root 4101701632 Apr 16 15:39 Ubuntu1804.vmdk</span><br></pre></td></tr></table></figure><h1 id="转换磁盘文件格式"><a href="#转换磁盘文件格式" class="headerlink" title="转换磁盘文件格式"></a>转换磁盘文件格式</h1><p>我们可以使用qemu-img命令，这个命令不仅可以创建磁盘，还可以进行磁盘格式的转换，qemu-img加上convert指令，可以将源文件转换为指定格式的磁盘文件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 使用前我们可以查看一下命令的帮助</span></span><br><span class="line">root@ubuntu:/data/vmware-vmdk<span class="comment"># qemu-img -h</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始转换磁盘文件格式</span></span><br><span class="line">root@ubuntu:/data/vmware-vmdk<span class="comment"># qemu-img convert -f vmdk -O qcow2 Ubuntu1804.vmdk Ubuntu1804.qcow2</span></span><br><span class="line">root@ubuntu:/data/vmware-vmdk<span class="comment"># ll -h</span></span><br><span class="line">total 7.7G</span><br><span class="line">drwxr-xr-x 2 root root 4.0K Apr 16 16:08 ./</span><br><span class="line">drwxr-xr-x 4 root root 4.0K Apr 16 15:37 ../</span><br><span class="line">-rw-r--r-- 1 root root 3.8G Apr 16 16:09 Ubuntu1804.qcow2</span><br><span class="line">-rw-r--r-- 1 root root 3.9G Apr 16 15:39 Ubuntu1804.vmdk</span><br><span class="line"><span class="comment"># 我们将转换完的磁盘文件移动到我们存放磁盘文件的目录下面</span></span><br><span class="line">root@ubuntu:/data/vmware-vmdk<span class="comment"># mv Ubuntu1804.qcow2 /var/lib/libvirt/images/</span></span><br><span class="line">root@ubuntu:/data/vmware-vmdk<span class="comment"># ls /var/lib/libvirt/images/</span></span><br><span class="line">Ubuntu1804.qcow2  zhang-test.qcow2  zhang-test.raw</span><br></pre></td></tr></table></figure><h1 id="开始使用virt-manager工具来导入文件"><a href="#开始使用virt-manager工具来导入文件" class="headerlink" title="开始使用virt-manager工具来导入文件"></a>开始使用virt-manager工具来导入文件</h1><p>刚刚我们使用了qemu-img命令来将磁盘转成了KVM环境支持的磁盘格式，现在的话我们就使用virt-manager工具来把文件导入后在恢复原虚拟机。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/data/vmware-vmdk<span class="comment"># virt-manager</span></span><br></pre></td></tr></table></figure><p><img src="/images/import1.png"></p><p><img src="/images/import2.png"></p><p><img src="/images/import3.png"></p><p><img src="/images/import4.png"></p><p><img src="/images/import5.png"></p><h1 id="验证迁移后的虚拟机是否可以正常使用"><a href="#验证迁移后的虚拟机是否可以正常使用" class="headerlink" title="验证迁移后的虚拟机是否可以正常使用"></a>验证迁移后的虚拟机是否可以正常使用</h1><p><img src="/images/import6.png"></p><p>我们也可以利用xshell或其他工具连接到这个虚拟机，是可以正常连接的。</p><p><img src="/images/import7.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> KVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> KVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用KVM创建Bridge和NAT网络虚拟机</title>
      <link href="/post/eb27ad01.html"/>
      <url>/post/eb27ad01.html</url>
      
        <content type="html"><![CDATA[<h1 id="主机环境准备"><a href="#主机环境准备" class="headerlink" title="主机环境准备"></a>主机环境准备</h1><p>这里的宿主机可以使用ubuntu或centos等其他的系统都可以，不过CPU的话建议4核或4核以上、内存的话就至少2G、磁盘的话多的话可以多给点都可以。资源给少了的话会导致没法安装成功。</p><p><img src="/images/kvm-config.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># grep -E &quot;vmx|svm&quot; /proc/cpuinfo </span></span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid avx512f avx512dq rdseed adx smap avx512ifma clflushopt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid md_clear flush_l1d arch_capabilities</span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid avx512f avx512dq rdseed adx smap avx512ifma clflushopt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid md_clear flush_l1d arch_capabilities</span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid avx512f avx512dq rdseed adx smap avx512ifma clflushopt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid md_clear flush_l1d arch_capabilities</span><br><span class="line">flags        : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ss syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon rep_good nopl xtopology tsc_reliable nonstop_tsc cpuid pni pclmulqdq vmx ssse3 fma cx16 pcid sse4_1 sse4_2 x2apic movbe popcnt tsc_deadline_timer aes xsave avx f16c rdrand hypervisor lahf_lm abm 3dnowprefetch cpuid_fault invpcid_single ssbd ibrs ibpb stibp ibrs_enhanced tpr_shadow vnmi ept vpid ept_ad fsgsbase tsc_adjust bmi1 avx2 smep bmi2 erms invpcid avx512f avx512dq rdseed adx smap avx512ifma clflushopt avx512cd sha_ni avx512bw avx512vl xsaveopt xsavec xgetbv1 xsaves arat avx512vbmi umip pku ospke avx512_vbmi2 gfni vaes vpclmulqdq avx512_vnni avx512_bitalg avx512_vpopcntdq rdpid md_clear flush_l1d arch_capabilities</span><br><span class="line">root@ubuntu:~<span class="comment"># grep -E &quot;vmx|svm&quot; /proc/cpuinfo | wc -l</span></span><br><span class="line">4</span><br></pre></td></tr></table></figure><h1 id="创建相关网络的虚拟机"><a href="#创建相关网络的虚拟机" class="headerlink" title="创建相关网络的虚拟机"></a>创建相关网络的虚拟机</h1><h2 id="安装KVM的相关工具包"><a href="#安装KVM的相关工具包" class="headerlink" title="安装KVM的相关工具包"></a>安装KVM的相关工具包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># apt update</span></span><br><span class="line">root@ubuntu:~<span class="comment"># apt install -y qemu-kvm qemu-utils libvirt-daemon-system libvirt-clients bridge-utils virt-manager virt-viewer</span></span><br><span class="line">root@ubuntu:~<span class="comment"># systemctl enable --now libvirtd</span></span><br><span class="line"><span class="comment"># 这里验证是否生成NAT网卡virbr0</span></span><br><span class="line">root@ubuntu:~<span class="comment"># ifconfig virbr0</span></span><br><span class="line">virbr0: flags=4099&lt;UP,BROADCAST,MULTICAST&gt;  mtu 1500</span><br><span class="line">        inet 192.168.122.1  netmask 255.255.255.0  broadcast 192.168.122.255</span><br><span class="line">        ether 52:54:00:94:40:33  txqueuelen 1000  (Ethernet)</span><br><span class="line">        RX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        RX errors 0  dropped 0  overruns 0  frame 0</span><br><span class="line">        TX packets 0  bytes 0 (0.0 B)</span><br><span class="line">        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0</span><br><span class="line"></span><br><span class="line">root@ubuntu:~<span class="comment"># grep -R &quot;192.168.122.1&quot; /etc/libvirt/</span></span><br><span class="line">/etc/libvirt/qemu/networks/autostart/default.xml:  &lt;ip address=<span class="string">&#x27;192.168.122.1&#x27;</span> netmask=<span class="string">&#x27;255.255.255.0&#x27;</span>&gt;</span><br><span class="line">/etc/libvirt/qemu/networks/default.xml:  &lt;ip address=<span class="string">&#x27;192.168.122.1&#x27;</span> netmask=<span class="string">&#x27;255.255.255.0&#x27;</span>&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在这里我们也是可以修改/etc/libvirt/qemu/networks/default.xml或者/etc/libvirt/qemu/networks/autostart/default.xml文件来改变默认的virbr0地址，修改完后重启一下服务器生效。</span></span><br><span class="line">root@ubuntu:~<span class="comment"># ll /etc/libvirt/qemu/networks/autostart/default.xml </span></span><br><span class="line">lrwxrwxrwx 1 root root 38 Apr 13 09:58 /etc/libvirt/qemu/networks/autostart/default.xml -&gt; /etc/libvirt/qemu/networks/default.xml</span><br><span class="line"><span class="comment"># 如果怕修改出错的话可以将原有的配置文件先备份一下</span></span><br><span class="line">root@ubuntu:~<span class="comment"># cp /etc/libvirt/qemu/networks/default.xml&#123;,.bk&#125;</span></span><br><span class="line"><span class="comment"># 如果想要修改了配置不用重启服务器的话可以进行下面的操作</span></span><br><span class="line">root@ubuntu:~<span class="comment"># virsh net-destroy default</span></span><br><span class="line">root@ubuntu:~<span class="comment"># virsh net-undefine default</span></span><br><span class="line">root@ubuntu:~<span class="comment"># vim /etc/libvirt/qemu/networks/default.xml</span></span><br><span class="line">&lt;!--</span><br><span class="line">WARNING: THIS IS AN AUTO-GENERATED FILE. CHANGES TO IT ARE LIKELY TO BE</span><br><span class="line">OVERWRITTEN AND LOST. Changes to this xml configuration should be made using:</span><br><span class="line">  virsh net-edit default</span><br><span class="line">or other application using the libvirt API.</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;network&gt;</span><br><span class="line">  &lt;name&gt;default&lt;/name&gt;</span><br><span class="line">  &lt;uuid&gt;85fb91a0-b816-4d07-91ce-a8e38b0235f5&lt;/uuid&gt;</span><br><span class="line">  &lt;forward mode=<span class="string">&#x27;nat&#x27;</span>/&gt;</span><br><span class="line">  &lt;bridge name=<span class="string">&#x27;virbr0&#x27;</span> stp=<span class="string">&#x27;on&#x27;</span> delay=<span class="string">&#x27;0&#x27;</span>/&gt;</span><br><span class="line">  &lt;mac address=<span class="string">&#x27;52:54:00:94:40:33&#x27;</span>/&gt;</span><br><span class="line">  &lt;ip address=<span class="string">&#x27;10.1.8.1&#x27;</span> netmask=<span class="string">&#x27;255.255.255.0&#x27;</span>&gt;</span><br><span class="line">    &lt;dhcp&gt;</span><br><span class="line">      &lt;range start=<span class="string">&#x27;10.1.8.2&#x27;</span> end=<span class="string">&#x27;10.1.8.254&#x27;</span>/&gt;</span><br><span class="line">    &lt;/dhcp&gt;</span><br><span class="line">  &lt;/ip&gt;</span><br><span class="line">&lt;/network&gt;</span><br><span class="line">root@ubuntu:~<span class="comment"># virsh net-define /etc/libvirt/qemu/networks/default.xml</span></span><br><span class="line">root@ubuntu:~<span class="comment"># virsh net-start default</span></span><br><span class="line"><span class="comment"># 但是我进行上面的操作后发现/etc/libvirt/qemu/networks/autostart/default.xml文件软连接没有了，我就在这有创建了一下。</span></span><br><span class="line">root@ubuntu:~<span class="comment"># ln -s /etc/libvirt/qemu/networks/default.xml /etc/libvirt/qemu/networks/autostart/default.xml</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 经过上面的操作后我们就可以验证一下virbr0的配置是否生效了</span></span><br><span class="line">root@ubuntu:~<span class="comment"># ip add show virbr0</span></span><br><span class="line">3: virbr0: &lt;NO-CARRIER,BROADCAST,MULTICAST,UP&gt; mtu 1500 qdisc noqueue state DOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 52:54:00:94:40:33 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.1.8.1/24 brd 10.1.8.255 scope global virbr0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line"></span><br><span class="line"><span class="comment"># 这里就是还需要修改ip_forward功能的，因为后面创建的虚拟机网关要指定到virbr0的地址，是要经过NAT转化后才可以用上外网，不然是用不了外网的。</span></span><br><span class="line">root@ubuntu:~<span class="comment"># echo &quot;net.ipv4.ip_forward = 1&quot; &gt;&gt; /etc/sysctl.conf</span></span><br><span class="line">root@ubuntu:~<span class="comment"># sysctl -p</span></span><br><span class="line">root@ubuntu:~<span class="comment"># grep &quot;net.ipv4.ip_forward&quot; /etc/sysctl.conf </span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure><h2 id="创建磁盘"><a href="#创建磁盘" class="headerlink" title="创建磁盘"></a>创建磁盘</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 如果不清楚怎么创建的话可以查看一下相关命令的帮助</span></span><br><span class="line">root@ubuntu:~<span class="comment"># qemu-img --help</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># KVM中的磁盘格式有raw和qcow2，raw是裸格式的，占用的空间会比较大，不支持快照的功能，但是性能会好一些，不方便传输；而qcow2的话它占用的空间就会小，也支持快照，写时复制，这样的话性能就会比raw要差一点，不过这个方便传输。</span></span><br><span class="line"><span class="comment"># 默认的虚拟机磁盘存放的路径是放在了/var/lib/libvirt/images/，后面我们创建的虚拟机磁盘就会放到这个目录下。</span></span><br><span class="line">root@ubuntu:~<span class="comment"># cd /var/lib/libvirt/images/</span></span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># ll</span></span><br><span class="line">total 8</span><br><span class="line">drwx--x--x 2 root root 4096 Jan  9  2023 ./</span><br><span class="line">drwxr-xr-x 7 root root 4096 Apr 13 10:21 ../</span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># qemu-img create -f raw zhang-test.raw 10G</span></span><br><span class="line">Formatting <span class="string">&#x27;zhang-test.raw&#x27;</span>, <span class="built_in">fmt</span>=raw size=10737418240</span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># qemu-img create -f qcow2 zhang-test.qcow2 10G</span></span><br><span class="line">Formatting <span class="string">&#x27;zhang-test.qcow2&#x27;</span>, <span class="built_in">fmt</span>=qcow2 size=10737418240 cluster_size=65536 lazy_refcounts=off refcount_bits=16</span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># ll -h</span></span><br><span class="line">total 208K</span><br><span class="line">drwx--x--x 2 root root 4.0K Apr 13 11:03 ./</span><br><span class="line">drwxr-xr-x 7 root root 4.0K Apr 13 10:21 ../</span><br><span class="line">-rw-r--r-- 1 root root 193K Apr 13 11:03 zhang-test.qcow2</span><br><span class="line">-rw-r--r-- 1 root root  10G Apr 13 11:02 zhang-test.raw</span><br><span class="line"></span><br><span class="line"><span class="comment"># 我们可以使用file命令来查看文件的类型</span></span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># file zhang-test.raw </span></span><br><span class="line">zhang-test.raw: data</span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># file zhang-test.qcow2 </span></span><br><span class="line">zhang-test.qcow2: QEMU QCOW2 Image (v3), 10737418240 bytes</span><br></pre></td></tr></table></figure><h2 id="创建ISO文件的存放路径"><a href="#创建ISO文件的存放路径" class="headerlink" title="创建ISO文件的存放路径"></a>创建ISO文件的存放路径</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># mkdir -p /data/iso/ &amp;&amp; cd $_</span></span><br><span class="line"><span class="comment"># 创建好了目录后我们就可以将镜像存放到这里了</span></span><br><span class="line">root@ubuntu:/data/iso<span class="comment"># ll</span></span><br><span class="line">total 1373580</span><br><span class="line">drwxr-xr-x 2 root root       4096 Apr 13 11:16 ./</span><br><span class="line">drwxr-xr-x 3 root root       4096 Apr 13 11:10 ../</span><br><span class="line">-rw-r--r-- 1 root root 1406533632 Apr 13 11:16 ubuntu-20.04.5-live-server-amd64.iso</span><br></pre></td></tr></table></figure><h2 id="创建NAT网络虚拟机"><a href="#创建NAT网络虚拟机" class="headerlink" title="创建NAT网络虚拟机"></a>创建NAT网络虚拟机</h2><h3 id="创建虚拟机"><a href="#创建虚拟机" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><p>在创建虚拟机是需要使用命令行和virt-manager图形管理工具.</p><p>在这里我们使用到了virt-install命令，它的选项很多，但是用的也就几个，有–virt-type（使用的管理程序名称，比如kvm、qemu、xen等）、-n（可以指定虚拟机的名称，在同一宿主机上的虚拟机名称是不可以同名的）、–ram&#x2F;–memory（指定最大内存，设置后是不会立即占用）、–vcpus（指定虚拟CPU核心数）、–cdrom（指定光盘镜像的路径）、–disk（指定要使用的存储磁盘的路径）、–network（指定使用那种的网络进行安装）、–graphics（配置虚拟机显示设置）、–noautoconsole（不要自动尝试连接到客户端控制台）等其他的配置。</p><p>创建默认类型网络（NAT）虚拟机，创建完后默认会打开5900端口，后期在创建的话会在此端口的基础上加1.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/data/iso<span class="comment"># virt-install --virt-type kvm --name zhang_nat --ram 1024 --vcpus 2 --cdrom=/data/iso/ubuntu-20.04.5-live-server-amd64.iso --disk path=/var/lib/libvirt/images/zhang-test.raw --network network=default --graphics vnc,listen=0.0.0.0 --noautoconsole</span></span><br><span class="line">WARNING  Requested memory 1024 MiB is less than the recommended 2048 MiB <span class="keyword">for</span> OS ubuntu20.04</span><br><span class="line"></span><br><span class="line">Starting install...</span><br><span class="line">Domain installation still <span class="keyword">in</span> progress. You can reconnect to </span><br><span class="line">the console to complete the installation process.</span><br><span class="line">root@ubuntu:/data/iso<span class="comment"># ss -tnl | grep 5900</span></span><br><span class="line">LISTEN  0        1                0.0.0.0:5900           0.0.0.0:*</span><br></pre></td></tr></table></figure><h3 id="安装虚拟机"><a href="#安装虚拟机" class="headerlink" title="安装虚拟机"></a>安装虚拟机</h3><p>在这里安装的话是可以使用vnc或者virt-manager工具，这里我没有安装vnc的工具就使用virt-manager工具安装了，使用这个安装的话要使用xshell和xmanager工具，而且xshell终端的话还要支持X11转移，不然的话是没办法打开virt-manager界面的。</p><p><img src="/images/tunnel.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:/data/iso<span class="comment"># virt-manager</span></span><br></pre></td></tr></table></figure><p><img src="/images/virt-manager.png"></p><p>这里的安装系统步骤的话我就省略了，跟在VMware中安装系统是一样的，这里就是看能不能获取到IP，如果获取不到的话就需要查看宿主机的配置是否有错误。</p><h3 id="验证创建的虚拟机是否可以正常使用"><a href="#验证创建的虚拟机是否可以正常使用" class="headerlink" title="验证创建的虚拟机是否可以正常使用"></a>验证创建的虚拟机是否可以正常使用</h3><p>当我们将安装系统的步骤操作完后，就可以验证了。</p><p><img src="/images/nat-verify1.png"></p><p><img src="/images/nat-verify2.png"></p><p>从上面的两个图会发现可以ping通外网，也可以下载包，这样的话就安装虚拟机没啥问题了。</p><h2 id="创建Bridge网络虚拟机"><a href="#创建Bridge网络虚拟机" class="headerlink" title="创建Bridge网络虚拟机"></a>创建Bridge网络虚拟机</h2><p>桥接网络可以运行在宿主机上的虚拟机使用和宿主机相同的网段IP，并且可以使用从外部直接访问到虚拟机，而外网是没办法直接访问NAT网络虚拟机的，NAT网络虚拟机对宿主机的性能消耗也是挺大的，在企业中用的更多的是Bridge网络的虚拟机，少部分是用的NAT网络的虚拟机。还需要在宿主机上安装bridge-utils包，创建桥接网卡后重启会导致远程终端断开连接。</p><h3 id="创建br0桥接的网卡"><a href="#创建br0桥接的网卡" class="headerlink" title="创建br0桥接的网卡"></a>创建br0桥接的网卡</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首先备份一下之前的网卡配置文件</span></span><br><span class="line">root@ubuntu:~<span class="comment"># cp /etc/netplan/00-installer-config.yaml&#123;,.bk&#125;</span></span><br><span class="line">root@ubuntu:~<span class="comment"># vim /etc/netplan/00-installer-config.yaml</span></span><br><span class="line"><span class="comment"># This is the network config written by &#x27;subiquity&#x27;</span></span><br><span class="line">network:</span><br><span class="line">  ethernets:</span><br><span class="line">    ens32:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">  bridges:</span><br><span class="line">    br0:</span><br><span class="line">      dhcp4: no</span><br><span class="line">      dhcp6: no</span><br><span class="line">      addresses: [10.0.0.111/24]</span><br><span class="line">      gateway4: 10.0.0.2</span><br><span class="line">      nameservers:</span><br><span class="line">        addresses: [223.6.6.6]</span><br><span class="line">      interfaces:</span><br><span class="line">        - ens32</span><br><span class="line">  version: 2</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新加载网络配置</span></span><br><span class="line">root@ubuntu:~<span class="comment"># netplan apply</span></span><br><span class="line">root@ubuntu:~<span class="comment"># ip add show br0</span></span><br><span class="line">8: br0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc noqueue state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 00:0c:29:<span class="built_in">cd</span>:70:65 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.0.0.111/24 brd 10.0.0.255 scope global br0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 fe80::20c:29ff:fecd:7065/64 scope <span class="built_in">link</span> </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h3 id="创建虚拟机-1"><a href="#创建虚拟机-1" class="headerlink" title="创建虚拟机"></a>创建虚拟机</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># cd /var/lib/libvirt/images/</span></span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># ls</span></span><br><span class="line">zhang-test.qcow2  zhang-test.raw</span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># virt-install --virt-type kvm --name zhang_bridge --ram 1024 --vcpus 2 --cdrom=/data/iso/ubuntu-20.04.5-live-server-amd64.iso --disk path=/var/lib/libvirt/images/zhang-test.qcow2 --network bridge=br0 --graphics vnc,listen=0.0.0.0 --noautoconsole</span></span><br><span class="line">WARNING  Requested memory 1024 MiB is less than the recommended 2048 MiB <span class="keyword">for</span> OS ubuntu20.04</span><br><span class="line"></span><br><span class="line">Starting install...</span><br><span class="line">Domain installation still <span class="keyword">in</span> progress. You can reconnect to </span><br><span class="line">the console to complete the installation process.</span><br><span class="line">root@ubuntu:/var/lib/libvirt/images<span class="comment"># virt-manager</span></span><br></pre></td></tr></table></figure><p><img src="/images/virt-manager1.png"></p><p>安装操作系统步骤省略。</p><h3 id="验证虚拟机是否可以正确使用"><a href="#验证虚拟机是否可以正确使用" class="headerlink" title="验证虚拟机是否可以正确使用"></a>验证虚拟机是否可以正确使用</h3><p>进入虚拟后，查看是否可以ping通外网，能正常使用apt安装软件包</p><p><img src="/images/bridge-verify1.png"></p><p>这个bridge桥接和NAT是不同的，使用bridge网络时外部的网络是可以直接访问bridge网络的虚拟机的，这里只要是虚拟机是开机的，宿主机没有什么问题，外部的可以正常连接，而NAT就不同了只能在宿主机上使用。</p><p><img src="/images/bridge-verify2.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> KVM </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> KVM </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>http状态码简介</title>
      <link href="/post/8a7f3df2.html"/>
      <url>/post/8a7f3df2.html</url>
      
        <content type="html"><![CDATA[<h1 id="http状态码"><a href="#http状态码" class="headerlink" title="http状态码"></a>http状态码</h1><p>状态码的职责就是当客户端想服务器端发送请求时，描述的返回请求结果。我们就可以通过状态码指定服务器端是否正常处理了请求，还是出现了错误。</p><table><thead><tr><th></th><th>类别</th><th>原因</th></tr></thead><tbody><tr><td>2XX</td><td>Success（成功状态码）</td><td>请求正常处理完毕</td></tr><tr><td>3XX</td><td>Redirection（重定向状态码）</td><td>需要进行附加操作以完成请求</td></tr><tr><td>4XX</td><td>Client Error（客户端错误状态码）</td><td>服务器无法处理请求</td></tr><tr><td>5XX</td><td>Server Error（服务器错误状态码）</td><td>服务器处理请求出错</td></tr></tbody></table><h2 id="2XX-成功"><a href="#2XX-成功" class="headerlink" title="2XX 成功"></a>2XX 成功</h2><p>2xx的响应结果表明请求被正常处理了。</p><h3 id="200-OK"><a href="#200-OK" class="headerlink" title="200 OK"></a>200 OK</h3><p><img src="/images/code200.png"></p><p>表示从客户端发过来的请求在服务器中被正常处理了。在响应报文内，随着状态码一起返回的信息会因方法的不同而发生改变。比如：</p><ul><li>使用 GET 方法时，对应请求资源的实体会作为响应返回；</li><li>使用 HEAD 方法时，对应请求资源的实体首部不随报文主体作为响应返回（即在响应中只返回首部，不会返回实体的主体部分）。</li></ul><h3 id="204-NoContent"><a href="#204-NoContent" class="headerlink" title="204 NoContent"></a>204 NoContent</h3><p><img src="/images/code204.png"></p><p>该状态码代表服务器接收的请求已成功处理，但在返回的响应报文中不含实体的主体部分。另外，也不允许返回任何实体的主体。比如：当从浏览器发出请求处理后，返回204响应，那么浏览器显示的页面不发生更新。一般在只需要从客户端往服务器发送信息，而对客户端不需要发送新信息内容的情况下使用。</p><h3 id="206-Partial-Content"><a href="#206-Partial-Content" class="headerlink" title="206 Partial Content"></a>206 Partial Content</h3><p><img src="/images/code206.png"></p><p>该状态码表示客户端进行了范围请求，而服务器成功执行了这部分的GET请求。响应报文中包含由Content-Range指定范围的实体内容。</p><h2 id="3XX-重定向"><a href="#3XX-重定向" class="headerlink" title="3XX 重定向"></a>3XX 重定向</h2><p>3XX响应结果表明浏览器响应执行某些特殊的处理以正确的处理请求。</p><h3 id="301-Moved-Permanently"><a href="#301-Moved-Permanently" class="headerlink" title="301 Moved Permanently"></a>301 Moved Permanently</h3><p>永久重定向。改状态码表示请求的资源被分配到了新的URI，以后应使用资源现在所指的URI。也就是说，如果已经把资源对应的URI保存为书签了，这时应该按照location首部字段提示的URI重新保存。</p><h3 id="302-Found"><a href="#302-Found" class="headerlink" title="302 Found"></a>302 Found</h3><p>临时重定向。该状态码表示请求的资源已经分配了新的URI，希望用户（本次）能使用新的URI访问。这个状态码和301 Moved Permanently状态码差不多，但302的状态码代表的资源不是被永久移动的，这个是临时的，如果已移动资源对应的URI将来还有可能发生改变。假设用户把URI保存书签了，但是不会像301状态码出现的那样去更新书签，而是仍旧保留返回的302状态码的页面的URI为书签。</p><h3 id="303-See-Other"><a href="#303-See-Other" class="headerlink" title="303 See Other"></a>303 See Other</h3><p>该状态码表示由于请求对应的资源存在另一个URI，应使用GET方法定向获取请求的资源。303状态码和302状态码有这相同的功能，但是303状态码明确了是表示客户端应当采用GET方法获取资源，这点与302状态码有区别。比如，当使用POST方法访问CGI程序，其执行后的处理结果是希望客户端能以GET方法重定向到另一个URI上去时，返回303状态码。虽然302 Found状态码也可以实现相同的功能，但这里使用303状态码是最理想的。</p><p>当301、302、303响应状态码返回时，几乎所有的浏览器都会把POST改成GET，并删除请求报文内的主体，之后请求会自动再次发送。<br>301、302标准是禁止将POST方法改变成GET方法的，但实际使用时大家都会这么做。</p><h3 id="304-Not-Modified"><a href="#304-Not-Modified" class="headerlink" title="304 Not Modified"></a>304 Not Modified</h3><p><img src="/images/code304.png"></p><p>该状态码表示客户端发送附带条件的请求时，服务器端允许请求访问资源，但因发生请求没有满足条件的情况后，直接返回304 Not Modified（服务器端资源未改变，可直接使用客户端未过期的缓存）。304状态码返回时，不包含任何响应的主体部分。304虽然是被划为3XX类别中，但是和重定向没有啥关系</p><h3 id="307-Temporary-Redirect"><a href="#307-Temporary-Redirect" class="headerlink" title="307 Temporary Redirect"></a>307 Temporary Redirect</h3><p>临时重定向。该状态码与302 Found有着相同的含义。尽管302标准禁止POST变换成GET，但实际使用时大家并不遵守。307会遵照浏览器标准，不会从POST变成GET。但是，对于处理响应时的行为，每种浏览器有可能出现不同的情况。</p><h2 id="4XX-客户端错误"><a href="#4XX-客户端错误" class="headerlink" title="4XX 客户端错误"></a>4XX 客户端错误</h2><p>4XX的响应结果表明客户端是发生错误的原因所在。</p><h3 id="400-Bad-Request"><a href="#400-Bad-Request" class="headerlink" title="400 Bad Request"></a>400 Bad Request</h3><p><img src="/images/code400.png"></p><p>该状态码表示请求报文中存在语法错误，当错误发生时，需要修改请求的内容后再次发送请求。另外，浏览器会像200 OK一样对待该状态码。</p><h3 id="401-Unauthorized"><a href="#401-Unauthorized" class="headerlink" title="401 Unauthorized"></a>401 Unauthorized</h3><p><img src="/images/code401.png"></p><p>该状态码表示发送的请求需要有HTTP认证（BASIC认证、DIGEST认证）的认证信息。另外若之前已进行过1次请求，则表示用户认证失败。</p><p>返回含有401的响应必须包含一个适用于被请求资源的WWW-Authenticate首部用以质询（challenge）用户信息。当浏览器初次接收到401响应，会弹出认证用的对话窗口。</p><h3 id="403-Forbidden"><a href="#403-Forbidden" class="headerlink" title="403 Forbidden"></a>403 Forbidden</h3><p><img src="/images/code403.png"></p><p>该状态码表明对请求资源的访问被服务器拒绝了。服务器端没有必要给出拒绝的详细理由，但如果想作说明的话，可以在实体的主体部分对原因进行描述，这样就能让用户看到了。未获得文件系统的访问授权，访问权限出现某些问题（从未授权的发送源IP地址试图访问）等列举的情况都可能是发生403的原因。</p><h3 id="404-Not-Found"><a href="#404-Not-Found" class="headerlink" title="404 Not Found"></a>404 Not Found</h3><p>该状态码表明服务器上无法找到请求的资源或是服务器无法回应且不知原因，除此之外，也可以在服务器端拒绝请求且不想说明理由时使用。</p><h2 id="5xx服务器错误"><a href="#5xx服务器错误" class="headerlink" title="5xx服务器错误"></a>5xx服务器错误</h2><h3 id="500-Internal-Server-Error"><a href="#500-Internal-Server-Error" class="headerlink" title="500 Internal Server Error"></a>500 Internal Server Error</h3><p><img src="/images/code500.png"></p><p>该状态码表明服务器端在执行请求时发生了错误。也有可能是Web应用存在的bug或某些临时的故障。</p><h3 id="503-Service-Unavailable"><a href="#503-Service-Unavailable" class="headerlink" title="503 Service Unavailable"></a>503 Service Unavailable</h3><p><img src="/images/code503.png"></p><p>该状态码表明服务器暂时处于超负载或正在进行停机维护，现在无法处理请求。如果事先得知解除以上状况需要的时间，最好写入Retry-After首部字段再返回给客户端。</p><h3 id="504-Gateway-Timeout"><a href="#504-Gateway-Timeout" class="headerlink" title="504 Gateway Timeout"></a>504 Gateway Timeout</h3><p>该状态码表明服务器端网关超时，无法处理用户请求。</p><p><strong>注意：有时候返回的状态码不一定是正确的，这个用户有时候查觉不到，比如Web应用程序内部发生错误，状态码依然返回200 OK，这种情况也经常遇到。</strong></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>oom的简介</title>
      <link href="/post/a0d7bb83.html"/>
      <url>/post/a0d7bb83.html</url>
      
        <content type="html"><![CDATA[<h1 id="OOM"><a href="#OOM" class="headerlink" title="OOM"></a>OOM</h1><p><strong>oom就是我们常说的内存溢出，它是指需要的内存空间大于系统分配的内存空间，oom的后果就是会使项目crash。</strong></p><h2 id="Java-heap-space"><a href="#Java-heap-space" class="headerlink" title="Java heap space"></a>Java heap space</h2><p>当堆内存（Heap Space）没有足够的空间存放新创建的对象时，这会就会抛出java.lang.OutOfMemoryError:Javaheap space 错误（可以根据实际中生产经验，可以把程序中的日志的OutOfMemoryError关键字设置为告警，当告警了就可以方便立即处理）。</p><p><strong>出现的原因分析：</strong></p><p>Java heap space错误产生的常见原因可以分为以下几方面：</p><ol><li>请求创建一个超大的对象，通常是一个大的数据组；</li><li>超出预期的访问量或数据量，通常是上游的系统请求流量飙升，常见于各类的促销或秒杀活动，可以结合业务流量的指标来排查是否有尖状的峰值；</li><li>过渡使用终结器（Finalizer），该对象没有立即被GC；</li><li>内存的泄漏（Memory Leak），大量对象引用没有释放，JVM无法对其自动回收，常见于使用了File等资源没有回收。</li></ol><p><strong>解决的方案：</strong></p><p>针对大部分情况，通常可以通过-Xmx 参数稍微调高点JVM堆内存空间就可以了，如果还是没解决的话，就可以尝试下面的情况来处理：</p><ol><li>如果是超大对象的话，可以检查其合理性，比如是否一次性查询了数据库全部内容，而没有做内容的数量限制；</li><li>如果是业务的峰值压力，可以考虑添几件机器资源，或者限制流量；</li><li>如果是内存泄漏的话，需要找到持有的对象，修改代码设计，比如关闭没有释放的连接。</li></ol><h2 id="GC-overhead-limit-exceeded"><a href="#GC-overhead-limit-exceeded" class="headerlink" title="GC overhead limit exceeded"></a>GC overhead limit exceeded</h2><p>当Java进程花费8%以上的时间执行GC，但只恢复了不到2%的内存，且该动作连续重复了5次，就会抛出java.lang.OutOfMemoryError:GC overhead limit exceeded错误。简单地说，就是应用程序已经基本耗尽了所有可用内存，GC也无法回收。</p><p>这类的问题原因和解决方法和上面Java heap space的差不多，可以参考上面的步骤试试。</p><h2 id="Permgen-space"><a href="#Permgen-space" class="headerlink" title="Permgen space"></a>Permgen space</h2><p>该错误表示永久代（Permanent Generation）已用满，通常是因为加载的class数目太多或体积太大。</p><p><strong>出现的原因分析：</strong></p><p>永久代存储对象主要包括以下几类：</p><ol><li>加载&#x2F;缓存到内存中的 class 定义，包括类的名称，字段，方法和字节码；</li><li>常量池；</li><li>对象数组&#x2F;类型数组所关联的 class；</li><li>JIT 编译器优化后的 class 信息。</li></ol><p>PermGen的使用量与加载到内存的class的数量&#x2F;大小正相关。</p><p><strong>解决的方案：</strong></p><p>根据 Permgen space 报错的时机，可以采用不同的解决方案，如下所示：</p><ol><li>程序启动报错，修改 -XX:MaxPermSize 启动参数，调大永久代空间。</li><li>应用重新部署时报错，很可能是没有应用没有重启，导致加载了多份 class 信息，只需重启 JVM 即可解决。</li><li>运行时报错，应用程序可能会动态创建大量 class，而这些 class 的生命周期很短暂，但是 JVM 默认不会卸载class，可以设置 -XX:+CMSClassUnloadingEnabled 和 -XX:+UseConcMarkSweepGC这两个参数允许 JVM 卸载class。</li></ol><p>如果上述方法无法解决，可以通过 jmap 命令 dump 内存对象 jmap-dump:format&#x3D;b,file&#x3D;dump.hprof ，然后利用 Eclipse MAT <a href="https://www.eclipse.org/mat">https://www.eclipse.org/mat</a> 功能逐一分析开销最大的 classloader 和重复 class。</p><h2 id="Metaspace"><a href="#Metaspace" class="headerlink" title="Metaspace"></a>Metaspace</h2><p>JDK1.8使用Metaspace替换了永久代（Permanent Generation），该错误表示Metaspace已被用满，通常是因为加载的class数目太多或体积太大。</p><p>此类问题的原因与解决方法跟Permgenspace非常类似，可以参考上文。需要特别注意的是调整Metaspace空间大小的启动参数为-XX:MaxMetaspaceSize。</p><h2 id="Unable-to-create-new-native-thread"><a href="#Unable-to-create-new-native-thread" class="headerlink" title="Unable to create new native thread"></a>Unable to create new native thread</h2><p>每个Java线程都需要占用一定的内存空间，当JVM向底层操作系统请求创建一个新的native线程时，如果没有足够的资源分配就会报此类错误。</p><p><strong>出现的原因分析：</strong></p><p>JVM向OS请求创建native线程失败，就会抛出Unableto createnewnativethread，常见的原因包括以下几类：</p><ol><li>线程数超过操作系统最大线程数 ulimit 限制；</li><li>线程数超过 kernel.pid_max（只能重启）；</li><li>native 内存不足；</li></ol><p>该问题发生的常见过程主要包括以下几步：</p><ol><li>JVM内部的应用程序请求创建一个新的Java线程；</li><li>JVM native方法代理了该次请求，并向操作系统请求创建一个native线程；</li><li>操作系统尝试创建一个新的native线程，并为其分配内存；</li><li>如果操作系统的虚拟内存已耗尽，或是受到32位进程的地址空间限制，操作系统就会拒绝本次native内存分配；</li><li>JVM将抛出java.lang.OutOfMemoryError:Unableto createnewnativethread错误。</li></ol><h2 id="Out-of-swap-space"><a href="#Out-of-swap-space" class="headerlink" title="Out of swap space"></a>Out of swap space</h2><p>该错误表示所有可用的虚拟内存已被耗尽。虚拟内存（Virtual Memory）由物理内存（Physical Memory）和交换空间（Swap Space）两部分组成。当运行时程序请求的虚拟内存溢出时就会报 Outof swap space? 错误。</p><p><strong>出现的原因分析：</strong></p><p>该错误出现的常见原因包括以下几类：</p><ol><li>地址空间不足；</li><li>物理内存已耗光；</li><li>应用程序的本地内存泄漏（native leak），例如不断申请本地内存，却不释放。</li><li>执行jmap-histo:live命令，强制执行Full GC；如果几次执行后内存明显下降，则基本确认为Direct ByteBuffer问题。</li></ol><p><strong>解决的方案：</strong></p><p>根据错误原因可以采取如下解决方案：</p><ol><li>升级地址空间为 64 bit；</li><li>使用 Arthas 检查是否为 Inflater&#x2F;Deflater 解压缩问题，如果是，则显式调用 end 方法。</li><li>Direct ByteBuffer 问题可以通过启动参数 -XX:MaxDirectMemorySize 调低阈值。</li><li>升级服务器配置&#x2F;隔离部署，避免争用。</li></ol><h2 id="Kill-process-or-sacrifice-child"><a href="#Kill-process-or-sacrifice-child" class="headerlink" title="Kill process or sacrifice child"></a>Kill process or sacrifice child</h2><p>有一种内核作业（Kernel Job）名为Out of Memory Killer，它会在可用内存极低的情况下“杀死”（kill）某些进程。OOM Killer会对所有进程进行打分，然后将评分较低的进程“杀死”，具体的评分规则可以参考Surviving the Linux OOM Killer。</p><p>不同于其他的 OOM 错误， Killprocessorsacrifice child 错误不是由 JVM 层面触发的，而是由操作系统层面触发的。</p><p><strong>出现的原因分析：</strong></p><p>默认情况下，Linux 内核允许进程申请的内存总量大于系统可用内存，通过这种“错峰复用”的方式可以更有效的利用系统资源。然而，这种方式也会无可避免地带来一定的“超卖”风险。例如某些进程持续占用系统内存，然后导致其他进程没有可用内存。此时，系统将自动激活 OOM Killer，寻找评分低的进程，并将其“杀死”，释放内存资源。</p><p><strong>解决的方案：</strong></p><ol><li>升级服务器配置&#x2F;隔离部署，避免争用。</li><li>OOM Killer 调优。</li></ol><h2 id="Requested-array-size-exceeds-VM-limit"><a href="#Requested-array-size-exceeds-VM-limit" class="headerlink" title="Requested array size exceeds VM limit"></a>Requested array size exceeds VM limit</h2><p>JVM 限制了数组的最大长度，该错误表示程序请求创建的数组超过最大长度限制。</p><p>JVM 在为数组分配内存前，会检查要分配的数据结构在系统中是否可寻址，通常为 Integer.MAX_VALUE-2。</p><p>此类问题比较罕见，通常需要检查代码，确认业务是否需要创建如此大的数组，是否可以拆分为多个块，分批执行。</p><h2 id="Direct-buffer-memory"><a href="#Direct-buffer-memory" class="headerlink" title="Direct buffer memory"></a>Direct buffer memory</h2><p>Java允许应用程序通过Direct ByteBuffer直接访问堆外内存，许多高性能程序通过Direct ByteBuffer结合内存映射文件（Memory Mapped File）实现高速IO。</p><p><strong>出现的原因分析：</strong></p><p>Direct ByteBuffer的默认大小为64MB，一旦使用超出限制，就会抛出Directbuffer memory错误。</p><p><strong>解决的方案：</strong></p><ol><li>Java只能通过ByteBuffer.allocateDirect方法使用Direct ByteBuffer，因此，可以通过Arthas等在线诊断工具拦截该方法进行排查。</li><li>检查是否直接或间接使用了 NIO，如 netty，jetty 等。</li><li>通过启动参数 -XX:MaxDirectMemorySize 调整 Direct ByteBuffer 的上限值。</li><li>检查 JVM 参数是否有 -XX:+DisableExplicitGC 选项，如果有就去掉，因为该参数会使 System.gc() 失效。</li><li>检查堆外内存使用代码，确认是否存在内存泄漏；或者通过反射调用 sun.misc.Cleaner 的 clean() 方法来主动释放被 Direct ByteBuffer 持有的内存空间。</li><li>内存容量确实不足，升级配置。</li></ol>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>比较LVS、Nginx、HAProxy三者的优缺点</title>
      <link href="/post/718f4c20.html"/>
      <url>/post/718f4c20.html</url>
      
        <content type="html"><![CDATA[<h1 id="LVS"><a href="#LVS" class="headerlink" title="LVS"></a>LVS</h1><p><strong>LVS的优点</strong></p><ol><li>抗负载能力强、工作在第4层仅作分发之用，没有流量的产生，这个特点也决定了它在负载均衡软件里的性能最强的；无流量，同时保证了均衡器IO的性能不会受到大流量的影响；</li><li>工作稳定，自身有完整的双机热备方案，如LVS+Keepalived和LVS+Heartbeat；</li><li>应用范围比较广，可以对所有应用做负载均衡；</li><li>配置性比较低，这是一个缺点也是一个优点，因为没有可太多配置的东西，所以并不需要太多接触，大大减少了人为出错的几率；</li></ol><p><strong>LVS的缺点</strong></p><ol><li>软件本身不支持正则处理，不能做动静分离，这就凸显了Nginx&#x2F;HAProxy+Keepalived的优势。</li><li>如果网站应用比较庞大的话，这时候使用LVS&#x2F;DR+Keepalived就比较复杂了，特别是后面有Windows Server应用的机器，实施及配置还有维护过程就比较麻烦，相对而言，这时候就一个使用Nginx&#x2F;HAProxy+Keepalived就会简单多了。</li></ol><p><strong>LVS支持的调度算法</strong></p><ul><li>RR：Round Robin，轮询，较为常用</li><li>WRR：Weighted RR，加权轮询，也较为常用</li><li>SH：Source Hashing，源地址散列调度算法</li><li>DH：Destination Hashing，目标地址散列调度算法</li><li>LC：least connections，最少连接，适用于长连接的应用</li><li>WLC：Weighted LC，加权最少连接，<strong>默认的调度算法</strong>，较为常用</li><li>SED：Shortest Expection Delay，最短延迟调度</li><li>NQ：Never Queue，永不排队调度</li><li>LBLC：Locality-Based LC，基于局部性的最少链接</li><li>LBLCR：LBLC with Replication，带复制的基于局部性最少连接</li></ul><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><p><strong>Nginx的优点</strong></p><ol><li>工作是在OSI的第七层，可以针对http应用做一些分流的策略。比如针对域名、目录结构。它的正则要比HAProxy要更为强大和灵活；</li><li>Nginx对网络的依赖非常小，理论上能ping通就可以进行负载功能，这个也是它的优势；</li><li>Nginx安装和配置都比较简单，测试起来也比较方便；</li><li>可以承担高的负载压力且稳定，一般能支持超过几万次的并发量；</li><li>Nginx可以通过端口检测到服务器内部的故障，比如根据服务器处理网页返回的状态码、超时等，并且还会把错误的请求重新提交得到另一个节点；</li><li>Nginx不仅仅是一款优秀的负载均衡器&#x2F;反向代理软件，它同时也是功能强大的web应用服务器。LNMP现在也是非常流行的web环境，有了和LAMP环境进行对抗的之势了，Nginx在处理静态页面、特别是抗高并发的方面上相对apache有优势；</li><li>Nginx现在作为Web反向加速缓存越来越成熟了，速度比传统的Squid服务器要更快，有这需求的小伙伴可以考虑试试用做作为反向代理加速器；</li></ol><p><strong>Nginx的缺点</strong></p><ul><li>Nginx不支持url来检测。</li><li>Nginx仅能支持http和Email，这个是它的弱势。</li><li>Nginx的Session的保持，Cookie的引导能力相对欠缺。</li></ul><p><strong>Nginx支持的调度算法</strong></p><ul><li>rr：轮询，<strong>默认的调度算法</strong></li><li>wrr：加权轮询</li><li>ip_hash：源地址hash</li><li>least_conn：最少连接</li><li>hash KEY [consistent]：一致性hash算法</li></ul><h1 id="HAProxy"><a href="#HAProxy" class="headerlink" title="HAProxy"></a>HAProxy</h1><p><strong>HAProxy的优点</strong></p><ol><li>HAProxy是支持虚拟主机的，可以在第4、7层（支持多网段）；</li><li>能够补充Nginx的一些缺点比如Session的保持，Cookie的引导等工作；</li><li>支持通过获取指定的url来检测后端服务器的状态；</li><li>HAProxy跟LVS有点类似，本身就是一款负载均衡软件；单纯从效率上来讲HAProxy比Nginx有更出色的负载均衡速度，在并发处理上也是优于Nginx的；</li><li>HAProxy可以对MySQL读进行负载均衡，对后盾的MySQL节点进行检测和负载均衡，不过在后端的MySQL中的slaves数量超过10台的话性能就不如LVS了；</li><li>支持ACL访问控制技术，对接收到的报文进行匹配和过滤，这也就是HAProxy的独特之处。</li></ol><p><strong>HAProxy的缺点</strong></p><ul><li>不支持POP&#x2F;SMTP协议</li><li>不支持SPDY协议</li><li>不支持HTTP cache功能</li><li>重载配置的功能需要重启进程</li><li>多进程模式支持不够友好</li></ul><p><strong>HAProxy支持的调度算法</strong></p><ul><li>static-rr：基于权重的轮询静态调度算法</li><li>first：自上而下</li><li>roundrobin：基于权重的轮询动态算法，默认调度算法</li><li>leastconn：加权的最少连接</li><li>random：随机负载平衡</li><li>source：源地址hash</li><li>uri：基于对用户请求的URI</li><li>url_param：对用户请求的URL中的params部分中的一个参数key对应的value值作hash计算</li><li>hdr：针对用户每个http头部（header）请求中的指定信息做hash</li><li>rdp-cookie：对Windows远程桌面的负载</li></ul><h1 id="三者区别"><a href="#三者区别" class="headerlink" title="三者区别"></a>三者区别</h1><p>LVS：是基于四层的转发，只能做端口的转发，基于URL、基于目录的转发LVS是做不了的。<br>HAProxy：是基于四层和七层的转发，是专业的代理服务器。<br>Nginx：是WEB服务器，缓存服务器，又是反向代理服务器，也可以做七层的转发。</p><p>在工作中的话，就需要根据实际情况来选型了，不过一般的场景Nginx都可以选择。</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows Server多用户同时登录</title>
      <link href="/post/c40b87d2.html"/>
      <url>/post/c40b87d2.html</url>
      
        <content type="html"><![CDATA[<h1 id="解决Windows-Server多用户同时登录的问题"><a href="#解决Windows-Server多用户同时登录的问题" class="headerlink" title="解决Windows Server多用户同时登录的问题"></a>解决Windows Server多用户同时登录的问题</h1><h2 id="安装远程桌面服务"><a href="#安装远程桌面服务" class="headerlink" title="安装远程桌面服务"></a>安装远程桌面服务</h2><p>目前情况是Windows server 2016上默认只允许2个用户可以同时登录，多了则不可以登录。</p><p>现在网上教程大多都是直接配置的第二步（配置远程连接数量），其实没有前面这一步骤的话，直接做第二步骤的情况下是不会生效的。</p><ol><li>首先添加角色和功能</li></ol><p><img src="/images/addrole.png"></p><ol start="2"><li>基于角色或基于功能的安装</li></ol><p><img src="/images/addrole1.png"></p><ol start="3"><li>前面的直接下一步就可以了，到这里选择远程桌面服务。在这里我选择了两个，一个是远程桌面会话主机（选择这一个就可以实现多用户，但只有120天的有效期），另一个就是远程桌面授权（这个就是为了后面申请许可证实现永久生效）。</li></ol><p><img src="/images/addrole2.png"></p><p><img src="/images/addrole3.png"></p><p>其他的步骤就下一步的，到最后直接安装就好了，等安装完后是需要重启一下系统的，业务机器的话需要提前跟她们确认一下是否可以重启。</p><h2 id="配置远程连接数量"><a href="#配置远程连接数量" class="headerlink" title="配置远程连接数量"></a>配置远程连接数量</h2><ol><li>使用win键加+R键端口运行框，在框中输入gpedit.msc打开策略编辑器</li></ol><p><img src="/images/gpedit.png"></p><ol start="2"><li>在计算机本地组策略里选择“计算机配置 &gt; 管理模板 &gt; windows组件 &gt; 远程桌面服务 &gt; 远程桌面会话主机 &gt; 连接”。设置“允许用户通过使用远程桌面服务进行远程连接”、“限制连接数量（可根据具体数量设置）”和“将远程桌面服务用户限制到单独的远程桌面”</li></ol><p><img src="/images/connect.png"></p><ol start="3"><li>鼠标右键点击“编辑”，设置“允许用户通过使用远程桌面服务进行远程连接”设置为已启用。</li></ol><p><img src="/images/connect1.png"></p><ol start="4"><li>“限制连接数量”选择已启用，这里的数量根据实际来设置。</li></ol><p><img src="/images/connect2.png"></p><ol start="5"><li>“将远程桌面服务用户限制到单独的远程桌面”选择已启用，或者已禁用，请注意此处已启用和已禁用的区别。本例以勾选“已启用”为例。</li></ol><ul><li>已启用：多个用户同时登录的多用户登录，不能单用户多登录。</li></ul><p>例如：当配置了已启用的话，用户A、用户B、用户C可以分别使用账号A、账号B、账号C同时登录远程桌面服务器，但是不支持用户A、用户B、用户C使用同一个账号同时登录远程桌面服务器。</p><ul><li>已禁用：单个用户可以同时多个登录的多用户登录。</li></ul><p>例如：当配置为已禁用的话，用户A、用户B、用户C可以使用同一个帐号同时登录。</p><p><img src="/images/connect3.png"></p><ol start="6"><li>运行cmd ，输入”gpupdate &#x2F;force”，强制执行本地组策略，重启服务器，整个配置过程完成。</li></ol><h2 id="申请多用户会话授权的license"><a href="#申请多用户会话授权的license" class="headerlink" title="申请多用户会话授权的license"></a>申请多用户会话授权的license</h2><ol><li>在 服务器管理器&gt;&gt;桌面桌面服务&gt;&gt;服务器，选择RD授权管理器</li></ol><p><img src="/images/license.png"></p><ol start="2"><li>选择未激活的服务器，鼠标右键选择属性</li></ol><p><img src="/images/license1.png"></p><ol start="3"><li>在属性对话框中，连接方法选择“Web浏览器”，记下对话框中出现的产品ID，在获取服务器许可证时，需在网页上注册此ID。</li></ol><p><img src="/images/license2.png"></p><ol start="4"><li>选择“必需信息”，填写信息后单击“确定”</li></ol><p><img src="/images/license3.png"></p><ol start="5"><li>用下载了的浏览器打开 <a href="https://activate.microsoft.com/">https://activate.microsoft.com</a> ，开始注册并获取服务器许可密码向导</li></ol><p>如果这选择中文的话下一步啥都没有的话，建议还默认选择英文就好了。</p><p><img src="/images/license4.png"></p><ol start="6"><li>输入“产品ID：xxxxx-xxxxx-xxxxx-xxxxx”，填写所需信息后，单击“下一步”确认产品信息无误后再次单击“下一步”</li></ol><p><img src="/images/license5.png"></p><ol start="7"><li>根据页面提示，记录服务器ID。在“需要此时获取客户机许可证吗”中选择”是”</li></ol><p><img src="/images/license6.png"></p><ol start="8"><li>如果没有许可证，在许可证程序选择“企业协议（Enterprise agreement）”，确定信息无误后，单击”下一步”</li></ol><p><img src="/images/license7.png"></p><ol start="9"><li>填写配置信息</li></ol><p>这里产品类型选择 Windows Server 2012 Remote Desktop Services Per User client access license(终端服务客户端访问许可证)<br>选择数量，我这里选择999。注册码可以在网上找的，在”注册号码”中输入你从微软获得的那个七位数（如果自己没有许可证，那么就输入6565792,4954438,6879321或者5296992），我这里输入的6565792有效。</p><p><img src="/images/license8.png"></p><ol start="10"><li>记录许可证服务器ID和许可证密钥包ID，然后单击“结束”</li></ol><p><img src="/images/license9.png"></p><h2 id="激活服务器"><a href="#激活服务器" class="headerlink" title="激活服务器"></a>激活服务器</h2><ol><li>登录服务器，打开RD授权管理器选择服务器，单击右键选择“激活服务器”</li></ol><p><img src="/images/activation.png"></p><ol start="2"><li>在激活服务器向导中单击“下一步 ”</li></ol><p><img src="/images/activation1.png"></p><ol start="3"><li>在连接方法处选择Web浏览器，然后单击“下一步”</li></ol><p><img src="/images/activation2.png"></p><ol start="4"><li>输入许可服务器ID，然后单击“下一步”</li></ol><p>许可服务器ID为前面步骤7中获取的ID</p><p><img src="/images/activation3.png"></p><ol start="5"><li>选择立即启动许可安装向导，单击“下一步”</li></ol><p><img src="/images/activation4.png"></p><ol start="6"><li>输入许可密钥包ID，单击“下一步”</li></ol><p>密钥包ID为步骤10中获取的密钥包ID</p><p><img src="/images/activation5.png"></p><h2 id="配置远程桌面会话主机授权服务器（云服务器）"><a href="#配置远程桌面会话主机授权服务器（云服务器）" class="headerlink" title="配置远程桌面会话主机授权服务器（云服务器）"></a>配置远程桌面会话主机授权服务器（云服务器）</h2><ol><li>首先登录Windows云服务器</li><li>在操作系统界面打开 服务器管理器 &gt;&gt; 工具 &gt;&gt; Terminal Service &gt;&gt; RD授权诊断程序，查看当前服务器的授权状态。</li></ol><p><img src="/images/Authorize.png"></p><ol start="3"><li>在运行里输入“gpedit.msc”，打开计算机本地组策略</li></ol><p><img src="/images/gpedit.png"></p><ol start="4"><li>在计算机本地组策略里选择“计算机配置 &gt; 管理模板 &gt; windows组件 &gt; 远程桌面服务 &gt; 远程桌面会话主机 &gt; 授权”，找到 “使用指定的远程桌面许可服务器”和“设置远程桌面授权模式”</li></ol><p><img src="/images/Authorize1.png"></p><ol start="5"><li>设置“使用指定的远程桌面许可证服务器”为启用，并在“要使用的许可证服务器”中，设置当前服务器的私有IP或者主机名</li></ol><p><img src="/images/Authorize2.png"></p><ol start="6"><li>启用“设置远程桌面授权模式”，设置授权模式为“按用户”</li></ol><p><img src="/images/Authorize3.png"></p><ol start="7"><li>运行cmd ，输入gpupdate &#x2F;force，强制执行本地组策略，重启服务器，整个配置过程完成。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Windows Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>远程桌面连接出现了内部错误</title>
      <link href="/post/c247ac64.html"/>
      <url>/post/c247ac64.html</url>
      
        <content type="html"><![CDATA[<h1 id="远程桌面连接出现了内部错误的问题"><a href="#远程桌面连接出现了内部错误的问题" class="headerlink" title="远程桌面连接出现了内部错误的问题"></a>远程桌面连接出现了内部错误的问题</h1><p><img src="/images/%E5%86%85%E9%83%A8%E9%94%99%E8%AF%AF.png"></p><h2 id="远程桌面出现内部错误的原因"><a href="#远程桌面出现内部错误的原因" class="headerlink" title="远程桌面出现内部错误的原因"></a>远程桌面出现内部错误的原因</h2><p>前段时间有很多用户反馈，业务远程桌面连接出现内部错误，像这种错误往往都是突然发生的；这些问题主要出现在Windows Server 2008&#x2F;2012&#x2F;2016&#x2F;2019等系统中。 </p><p><strong>远程桌面连接出现了内部错误的原因可能有以下几点：</strong></p><ul><li>网络连接不稳定：远程桌面连接依赖于网络来实现功能，若网络连接不稳定或存在其他问题，将容易导致内部错误的出现。</li><li>版本兼容性问题：远程桌面连接软件存在多个版本，不同版本间可能出现不兼容的情况。若您正在使用较旧的版本，连接更新版本的远程桌面时，可能会遇到远程桌面提示内部错误。</li><li>防火墙屏蔽问题：防火墙作为电脑安全防护的重要程序，有时会阻挡远程桌面连接请求，从而导致远程桌面连接出现了内部错误。</li><li>远程桌面连接设置：远程桌面连接设置不正确，也会导致远程桌面提示内部错误。</li></ul><h2 id="如何解决远程连接提示内部错误的问题？"><a href="#如何解决远程连接提示内部错误的问题？" class="headerlink" title="如何解决远程连接提示内部错误的问题？"></a>如何解决远程连接提示内部错误的问题？</h2><h3 id="方法一、更改远程桌面连接设置"><a href="#方法一、更改远程桌面连接设置" class="headerlink" title="方法一、更改远程桌面连接设置"></a>方法一、更改远程桌面连接设置</h3><p>当你遇到远程桌面连接时出现了内部错误时，可以先更改远程桌面连接的设置来解决问题。</p><ol><li>按“Win + R”打开运行对话框，输入“mstsc”打开远程桌面连接。</li></ol><p><img src="/images/mstsc.png"></p><ol start="2"><li>在远程桌面连接主界面点击“显示选项”，然后切换到“体验”选项卡，勾选“持久位图缓存”和“如果连接中断，则重新连接”。接下来，再次单击“连接”以查看远程桌面出现内部错误是否已解决。</li></ol><p><img src="/images/%E6%98%BE%E7%A4%BA%E9%80%89%E9%A1%B9.png"></p><h3 id="方法二、更改远程桌面安全性"><a href="#方法二、更改远程桌面安全性" class="headerlink" title="方法二、更改远程桌面安全性"></a>方法二、更改远程桌面安全性</h3><p>远程桌面出现内部错误还可以在本地组策略编辑器中，更改“远程（RDP）连接要求使用指定的安全层”来解决相关的问题。</p><ol><li>按“Win + R”打开运行对话框，输入“gpedit.msc”打开本地组策略编辑器。</li></ol><p><img src="/images/gpedit.png"></p><ol start="2"><li>在左侧依次选择：“计算机配置” &gt; “管理模板” &gt; “Windows组件” &gt; “远程桌面服务” &gt; “远程桌面会话主机” &gt; “安全” &gt; “远程（RDP）连接要求使用指定的安全层”</li></ol><p><img src="/images/%E5%AE%89%E5%85%A8%E5%B1%82%E9%85%8D%E7%BD%AE.png"></p><ol start="3"><li>双击打开“远程（RDP）连接要求使用指定的安全层”，在新界面中勾选“已启用”，在安全层中选择“RDP”并点击“确定”</li></ol><p><img src="/images/%E5%90%AF%E7%94%A8%E5%AE%89%E5%85%A8%E5%B1%82.png"></p><h3 id="方法三、重启远程桌面服务"><a href="#方法三、重启远程桌面服务" class="headerlink" title="方法三、重启远程桌面服务"></a>方法三、重启远程桌面服务</h3><p>远程桌面提示内部错误可以进行入服务管理，将与远程桌面相关的服务进行重启，如Remote Desktop Configuration、Remote Desktop Services，Remote Desktop Services UserMode Port Redirector。下面将以Remote Desktop Services为例，为您讲解怎么重启远程桌面服务。</p><ol><li>按“Win + R”打开运行对话框，输入“services.msc”打开服务。</li></ol><p><img src="/images/services.png"></p><ol start="2"><li>找到并双击“Remote Desktop Services”，在“常规”选项卡中单击“停止”，然后单击“确定”。</li></ol><p><img src="/images/services1.png"></p><ol start="3"><li>如果您不允许远程桌面服务自动启动，则远程桌面上可能会提示内部错误。因此需要设置远程桌面服务自动启动。</li></ol><p><img src="/images/services2.png"></p><h3 id="方法四、设置防火墙"><a href="#方法四、设置防火墙" class="headerlink" title="方法四、设置防火墙"></a>方法四、设置防火墙</h3><p>若以上三种方法都尝试了，远程桌面还是出现提示内部错误的话，你可以设置一下访问防火墙允许远程桌面通过或者将防火墙关闭。</p><ol><li>搜索“Windows Defender 防火墙”并将其打开，在单击窗口左侧“允许应用或功能通过 Windows Defender 防火墙”</li></ol><p><img src="/images/%E9%98%B2%E7%81%AB%E5%A2%991.png"></p><ol start="2"><li>单击“更改设置”后，找到“远程桌面”并勾选，然后再保存设置。</li></ol><p><img src="/images/%E9%98%B2%E7%81%AB%E5%A2%992.png"></p><h2 id="推荐的几款远程桌面替代工具"><a href="#推荐的几款远程桌面替代工具" class="headerlink" title="推荐的几款远程桌面替代工具"></a>推荐的几款远程桌面替代工具</h2><ul><li><a href="https://www.teamviewer.cn/cn/">TeamViewer</a></li><li><a href="https://anydesk.com/zhs">AnyDesk</a></li><li><a href="https://sunlogin.oray.com/">向日葵</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Windows Server </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Windows Server </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>iptables相关知识</title>
      <link href="/post/8e3cd0cc.html"/>
      <url>/post/8e3cd0cc.html</url>
      
        <content type="html"><![CDATA[<h1 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h1><h2 id="iptables基础概念"><a href="#iptables基础概念" class="headerlink" title="iptables基础概念"></a>iptables基础概念</h2><p>iptables是一个命令行工具，位于用户空间，它使得插入、修改和删除信息包过滤表中的规则变得容易。</p><p>我们知道iptables是按照规则办事的，规则也就是一些预定的条件，规则一般定义为“如果数据包头符合这样的条件，就这样处理这个数据包”。规则存储在内核空间的信息包过滤表中，这些规则分别指定了源地址、目的地址、传输协议（如：TCP、UDP、ICMP）和服务类型（如：HTTP、FTP和 SMTP）等。当数据包与规则匹配时，iptables 就根据规则所定义的方法来处理这些数据包，如放行（ACCEPT）、拒绝（REJECT）和丢弃（DROP）等。配置防火墙的主要工作就是添加、修改和删除这些规则。</p><h2 id="iptables的组成"><a href="#iptables的组成" class="headerlink" title="iptables的组成"></a>iptables的组成</h2><p>iptables是由五个表table和五个链chain以及一些规则组成</p><p><img src="/images/iptables1.png"></p><p><strong>链 chain：</strong></p><ul><li>内置链：每个内置链对应于一个钩子函数 </li><li>自定义链：用于对内置链进行扩展或补充，可实现更灵活的规则组织管理机制；只有Hook钩子调用自定义链时，才生效</li></ul><p><strong>五个内置链chain:</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INPUT,OUTPUT,FORWARD,PREROUTING,POSTROUTING</span><br></pre></td></tr></table></figure><p><strong>五个表table：</strong> filter、nat、mangle、raw、security</p><ul><li>filter：过滤规则表，根据预定义的规则过滤符合条件的数据包,默认表 </li><li>nat：network address translation 地址转换规则表 </li><li>mangle：修改数据标记位规则表 </li><li>raw：关闭启用的连接跟踪机制，加快封包穿越防火墙速度 </li><li>security：用于强制访问控制（MAC）网络规则，由Linux安全模块（如SELinux）实现</li></ul><p>优先级由高到低的顺序为：</p><p>security –&gt;raw–&gt;mangle–&gt;nat–&gt;filter </p><p><strong>表和链对应关系</strong></p><p><img src="/images/iptables2.png"></p><p><strong>数据包过滤匹配流程</strong></p><p><img src="/images/iptables3.png"></p><p><strong>内核中数据包的传输过程</strong></p><ul><li>当一个数据包进入网卡时，数据包首先进入入PREROUTING链，内核根据数据包目的IP判断是否需要转送出去；</li><li>如果数据包是进入本机的，数据包就会沿着图向下移动，到达INPUT链。数据包到达INPUT链后，任何进程都会收到它。本机上运行的程序可以发送数据包，这些数据包经过OUTPUT链，然后到达POSTROUTING链输出；</li><li>如果数据包是要转发出去的，且内核允许转发，数据包就会向右移动，经过FORWARD链，然后到达POSTROUTING链输出；</li></ul><h2 id="netfilter-完整流程"><a href="#netfilter-完整流程" class="headerlink" title="netfilter 完整流程"></a>netfilter 完整流程</h2><p><img src="/images/iptables4.png"></p><h2 id="iptables命令格式"><a href="#iptables命令格式" class="headerlink" title="iptables命令格式"></a>iptables命令格式</h2><p>iptables命令格式为：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables [ -t 表名] 命令选项 [链名] [条件匹配] [-j 处理动作或跳转]</span><br></pre></td></tr></table></figure><p>如果没有显示设置表名，那么默认为filter表，即默认 -t filter。</p><p><strong>命令选项</strong></p><ul><li>-L 列出一个或所有链的规则</li><li>-v 显示详细信息，包括每条规则的匹配句数量和匹配字节数</li><li>-x 在v的基础上，禁止自动换算单位（K,M）</li><li>-n 只显示ip地址和端口号，不显示域名和服务名称</li><li>-I 插入到防火墙第一条生效</li><li>-A 添加链是添加到最后一条</li><li>-D 删除指定链中的某一条规则，按规则序号或内容确定要删除的规则</li><li>-F 清空指定链中的所有规则，默认清空表中所有链的内容</li><li>-X 删除指定表中用户自定义的规则链</li></ul><p><strong>匹配条件</strong></p><ul><li>-i 入站请求interface（网卡）</li><li>-o 出站请求interface（网卡）</li><li>-s 入站源地址</li><li>-d 目标地址</li><li>-p 指定规则协议，如tcp, udp,icmp等，可以使用 all 来指定所有协议</li><li>–dport 目的端口，数据包的目的（dport）地址是80，就是要访问我本地的80端口</li><li>–sport 来源端口 数据包的来源端口是（sport）80，就是对方的数据包是80端口发送过来的</li></ul><p><strong>动作</strong></p><ul><li>ACCEPT：允许数据包通过。</li><li>DROP：直接丢弃数据包，不给任何回应信息，这时候客户端会感觉自己的请求泥牛入海了，过了超时时间才会有反应。</li><li>REJECT：拒绝数据包通过，必要时会给数据发送端一个响应的信息，客户端刚请求就会收到拒绝的信息。（一般不使用REJECT(拒绝)行为，REJECT会带来安全隐患。）</li><li>SNAT：源地址转换，解决内网用户用同一个公网地址上网的问题。</li><li>MASQUERADE：是SNAT的一种特殊形式，适用于动态的、临时会变的ip上。</li><li>DNAT：目标地址转换。</li><li>REDIRECT：在本机做端口映射。</li><li>LOG：在&#x2F;var&#x2F;log&#x2F;messages文件中记录日志信息，然后将数据包传递给下一条规则，也就是说除了记录以外不对数据包做任何其他操作，仍然让下一条规则去匹配。</li></ul><h2 id="iptables-规则"><a href="#iptables-规则" class="headerlink" title="iptables 规则"></a>iptables 规则</h2><p>规则就是根据匹配条件来尝试匹配每个流经此处的报文，一旦匹配成功，则由规则后面指定的处理动作进行处理。</p><p>规则大致由两个逻辑单元组成：匹配条件和动作。最常用的匹配条件是“源地址”、“目标地址”、“源端口”、“目标端口”；最常用的动作有 ACCEPT（接受）、DROP（丢弃）、REJECT（拒绝）。</p><p>在实际上的操作中，都是以“表”为操作入口的，如果你经常操作关系型的数据库，那么当你听到“表”这个词的时候，这时你可能会联想到“增删改查”，当我们定义 iptables 规则时，所做的操作其实类似于“增删改查”，下面我们不妨从最简单的“查”操作开始入手。</p><p>filter 表是我们最常用到的表，我们这里以 filter 表为例说明具体的操作。下面的命令展示如何查看 filter 表中的规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -t filter -L</span></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain FORWARD (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination         </span><br><span class="line"></span><br><span class="line">Chain OUTPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br></pre></td></tr></table></figure><p>上面的指令中我们使用到了 -t 选项指定要操作的表，使用 -L 选项查看 -t 选项对应表的规则。 -L 对应的是List，意思就是将规则列出来。上面的命令的意义就是为列出filter表的所有规则。</p><p>我们也可以指定查看某一个表的链的规则。例如查看 INPUT 链的规则：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -L INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT)</span><br><span class="line">target     prot opt <span class="built_in">source</span>               destination</span><br></pre></td></tr></table></figure><p>上面显示的是 filter 表中的 INPUT 链的规则（省略了 -t 选项，默认表为filter表），想要看其他链将 INPUT 改成其他链名就好了；这里我们还可以使用 -v 选项来查看更多、更详细的信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -vL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 2014 packets, 144K bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination</span><br></pre></td></tr></table></figure><p>上面目录输出后一些字段，这些字段就是规则对应的属性，具体的含义归纳如下：</p><ul><li>pkts: 匹配到的报文的个数。</li><li>bytes: 匹配到的报文包的大小总和。</li><li>target: 表示规则对应的“动作”，即规则匹配成功后需要采取的措施。</li><li>prot: 对应的协议，是否只针对某些协议应用此规则。</li><li>opt: 表示规则对应的选项。</li><li>in: 表示数据包由哪个interface（网卡）流入，我们可以设置通过哪块网卡流入的报文需要匹配当前规则。</li><li>out：表示数据包由哪个interface（网卡）流出，我们可以设置通过哪块网卡流出的报文需要匹配当前规则。</li><li>source: 表示规则对应的源头地址，可以是一个 IP，也可以是一个网段。</li><li>destination: 表示规则对应的目标地址。</li></ul><p>在上面的输出结果中 Chain INPUT (policy ACCEPT 2014 packets, 144K bytes) ,这里面包含了 policy ACCEPT 、2014 packets、144K bytes 三部分。</p><ul><li>policy：表示当前链的默认策略，policy ACCEPT 表示的是上面 INPUT 链中的默认动作是ACCEPT，也就是说默认是接受通过INPUT的所有请求。</li><li>packets：表示当前链的默认策略匹配到的包的数量。</li><li>bytes：表示当前链的默认策略匹配到的所有包的大小总和。</li></ul><p>如果我们需要清空规则的话可以使用 -F 清空指定链中的所有规则，默认清空表中所有链的内容。</p><p>这里我们有两个测试机器，ip分别为 zhang1(10.0.0.7) 和 zhang2(10.0.0.17)。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># ping 10.0.0.17</span></span><br><span class="line">PING 10.0.0.17 (10.0.0.17) 56(84) bytes of data.</span><br><span class="line">64 bytes from 10.0.0.17: icmp_seq=1 ttl=64 time=0.171 ms</span><br><span class="line">64 bytes from 10.0.0.17: icmp_seq=2 ttl=64 time=0.321 ms</span><br><span class="line">64 bytes from 10.0.0.17: icmp_seq=3 ttl=64 time=0.339 ms</span><br><span class="line">64 bytes from 10.0.0.17: icmp_seq=4 ttl=64 time=0.188 ms</span><br><span class="line">64 bytes from 10.0.0.17: icmp_seq=5 ttl=64 time=0.325 ms</span><br></pre></td></tr></table></figure><p>这时我在10.0.0.7上面配置一个规则，拒绝10.0.0.17上的所有报文访问10.0.0.7。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -t filter -I INPUT -s 10.0.0.17 -j DROP</span></span><br></pre></td></tr></table></figure><p>上面的命令中的 -I 选项，指明将“规则”插入哪个链中，I表示Inset，也就是插入的意思，这里表示添加规则的意思。这里的 -s 选项是指明匹配条件的“源地址”，如果报文的源地址属于 -s 对应的地址，那么报文则满足匹配条件。s也就是source（源）。这里的 -j 选项是指明当匹配条件满足时，所执行的动作，上面的命令指定了动作为DROP，当报文的源地址为10.0.0.17时，报文就会被DROP。</p><p>这时我们在查看一下filter表中INPUT链：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -vL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 42 packets, 2748 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">    4   336 DROP       all  --  any    any     zhang2               anywhere</span><br></pre></td></tr></table></figure><p>看到上面的结果我们会发现响应的规则已经添加了，在iptables中，动作被称之为“target”，所以上面的target字段对应的动作为DROP。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -A INPUT -s 10.0.0.17 -j ACCEPT </span></span><br><span class="line">[root@zhang1 ~]<span class="comment"># iptables -vL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 6 packets, 364 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">    4   336 DROP       all  --  any    any     zhang2               anywhere            </span><br><span class="line">    0     0 ACCEPT     all  --  any    any     zhang2               anywhere</span><br></pre></td></tr></table></figure><p>上面的操作我们有添加了一条规则，但是没有使用 -I 选项了，而是使用的 -A 选项，A表示的append，也就是在INPUT链中追加规则。 -I 和 -A 选项的区别在于：-I选项是表示在链的首部插入规则，而-A是在链的规则后追加规则。</p><p>新添加了一条规则后发现zhang1去ping zhang2的时候还是ping不同，看似新增的规则没有生效，这是我们将-A换成-I在添加试一下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -I INPUT -s 10.0.0.17 -j ACCEPT </span></span><br><span class="line">[root@zhang1 ~]<span class="comment"># iptables -vL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 6 packets, 364 bytes)</span><br><span class="line"> pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">    0     0 ACCEPT     all  --  any    any     zhang2               anywhere            </span><br><span class="line">    4   336 DROP       all  --  any    any     zhang2               anywhere            </span><br><span class="line">    0     0 ACCEPT     all  --  any    any     zhang2               anywhere            </span><br><span class="line">[root@zhang1 ~]<span class="comment"># ping zhang2</span></span><br><span class="line">PING zhang2 (10.0.0.17) 56(84) bytes of data.</span><br><span class="line">64 bytes from zhang2 (10.0.0.17): icmp_seq=1 ttl=64 time=0.499 ms</span><br><span class="line">64 bytes from zhang2 (10.0.0.17): icmp_seq=2 ttl=64 time=0.284 ms</span><br><span class="line">64 bytes from zhang2 (10.0.0.17): icmp_seq=3 ttl=64 time=0.337 ms</span><br><span class="line">64 bytes from zhang2 (10.0.0.17): icmp_seq=4 ttl=64 time=0.315 ms</span><br></pre></td></tr></table></figure><p>这时我们发现已经可以ping通了，从上面的规则中会发现刚刚添加的ACCEPT规则在DROP规则之前了，可以得出规则的放的顺序很重要。</p><p style="color: brown; font-weight: bold;">注意：如果在前面报文就已经被匹配上了的话，iptables则会对报文执行对应的动作，即后面的规则也能匹配到当前规则，很有可能也没有机会再对报文执行相应的动作了。就像上面的例子来说，报文先被第一条规则匹配到了，于是当前报文被“放行”了。也正是因为报文已经放行了，后面的第二条规则即使能够匹配到放行的报文，也没有机会对刚才的报文进行丢弃操作了。这也是iptables的工作规则。</p><p>我们可以使用 –line-number 选项来列出规则的序号，如下例子：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables --line-numbers -vnL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 393 packets, 28336 bytes)</span><br><span class="line">num   pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">1        4   336 ACCEPT     all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">2        4   336 DROP       all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">3        0     0 ACCEPT     all  --  *      *       10.0.0.17            0.0.0.0/0</span><br></pre></td></tr></table></figure><p>我们在添加规则的时候，还可以指定新增规则的编号，这样我们就能在任意位置插入规则了，我们只要把刚才的命令稍作修改即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@zhang1 ~]<span class="comment"># iptables -I INPUT 2 -s 10.0.0.17 -j DROP</span></span><br><span class="line">[root@zhang1 ~]<span class="comment"># iptables --line-numbers -vnL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 16 packets, 984 bytes)</span><br><span class="line">num   pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">1        4   336 ACCEPT     all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">2        0     0 DROP       all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">3        4   336 DROP       all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">4        0     0 ACCEPT     all  --  *      *       10.0.0.17            0.0.0.0/0</span><br></pre></td></tr></table></figure><p>在上面我们还是用的-I选项进行插入规则的操作，-I INPUT 2 表示在INPUT链中新增规则，新增规则的编号是2.</p><p>当我们要删除规则时，我们可以使用规则的编号去删除，也是可以使用具体的匹配条件和动作去删除。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 删除指定的编号对应的规则</span></span><br><span class="line">[root@zhang1 ~]<span class="comment"># iptables -t filter -D INPUT 4</span></span><br><span class="line">[root@zhang1 ~]<span class="comment"># iptables --line-numbers -vnL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 7 packets, 440 bytes)</span><br><span class="line">num   pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">1        4   336 ACCEPT     all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">2        0     0 DROP       all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">3        4   336 DROP       all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除掉第一条规则</span></span><br><span class="line">[root@zhang1 ~]<span class="comment"># iptables -t filter -D INPUT -s 10.0.0.17 -j ACCEPT</span></span><br><span class="line">[root@zhang1 ~]<span class="comment"># iptables --line-numbers -vnL INPUT </span></span><br><span class="line">Chain INPUT (policy ACCEPT 6 packets, 364 bytes)</span><br><span class="line">num   pkts bytes target     prot opt <span class="keyword">in</span>     out     <span class="built_in">source</span>               destination         </span><br><span class="line">1        0     0 DROP       all  --  *      *       10.0.0.17            0.0.0.0/0           </span><br><span class="line">2        4   336 DROP       all  --  *      *       10.0.0.17            0.0.0.0/0</span><br></pre></td></tr></table></figure><p>如果想要一下子清空的话，我们可以使用到 iptables -t 表名 -F 链名。-F选项就是清空指定链中的所有规则，默认清空表中所有链的内容。</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://blog.csdn.net/bjgaocp/article/details/88722806">Iptables</a></li><li><a href="https://blog.csdn.net/u011537073/article/details/82685586">iptables基础知识详解</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> Iptables </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Iptables </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>简述keepalived的工作原理</title>
      <link href="/post/5e93a93c.html"/>
      <url>/post/5e93a93c.html</url>
      
        <content type="html"><![CDATA[<h1 id="keepalived的概述"><a href="#keepalived的概述" class="headerlink" title="keepalived的概述"></a>keepalived的概述</h1><ul><li>keepalived起初是为LVS设计的，专门用来监控集群系统中各个服务节点的状态，他根据TCP&#x2F;IP参考模型的第三、第四层、第五层交换机制检测每个服务节点的状态，如果某个服务器节点出现异常，或者工作出现故障，Keepalived将检测到，并将出现的故障的服务器节点从集群系统中剔除，这些工作全部是自动完成的，不需要人工干涉，需要人工完成的只是修复出现故障的服务节点。</li><li>后来Keepalived又加入了VRRP的功能，VRRP（VritrualRouterRedundancyProtocol,虚拟路由冗余协议)出现的目的是解决静态路由出现的单点故障问题，通过VRRP可以实现网络不间断稳定运行，因此Keepalvied一方面具有服务器状态检测和故障隔离功能，另外一方面也有HAcluster功能。</li><li>健康检查和失败切换是keepalived的两大核心功能。所谓的健康检查，就是采用tcp三次握手，icmp请求，http请求，udp echo请求等方式对负载均衡器后面的实际的服务器(通常是承载真实业务的服务器)进行保活；而失败切换主要是应用于配置了主备模式的负载均衡器，利用VRRP维持主备负载均衡器的心跳，当主负载均衡器出现问题时，由备负载均衡器承载对应的业务，从而在最大限度上减少流量损失，并提供服务的稳定性。</li></ul><p><a href="https://keepalived.org/">官网</a></p><p>功能：</p><ul><li>基于vrrp协议来完成实现地址的漂移；</li><li>在VIP地址所在的节点生成IPVS的规则（需要在配置文件中预先定义好）；</li><li>可以为IPVS集群中的每个RS服务器做健康性检查；（keepalived可以搭配LVS、haproxy等服务成为黄金搭档）</li><li>还可以基于脚本调用来完成脚本中定义中的功能，进而影响集群的事务，这个功能支持nginx、haproxy等服务。</li></ul><h1 id="keepalived工作原理及技术架构"><a href="#keepalived工作原理及技术架构" class="headerlink" title="keepalived工作原理及技术架构"></a>keepalived工作原理及技术架构</h1><h2 id="Keepalived体系结构"><a href="#Keepalived体系结构" class="headerlink" title="Keepalived体系结构"></a>Keepalived体系结构</h2><p>Keepalived 起初是为LVS设计的，由与Keeplalived可以实现对集群节点的状态检测，而IPVS可以实现负载均衡功能，因此,Keepalived借助于第三方模块IPVS就可以很方便地搭建一套负载均衡系统。在Keepalived当中IPVS模块是可配置的，如果需要负载均衡功能，可以在编译Keepalived时开打负载均衡功能，也可以通过编译参数关闭。</p><p><img src="/images/keepalived_system.png"></p><p><strong>官方文档：</strong></p><ul><li><a href="https://keepalived.org/doc/">https://keepalived.org/doc/</a></li><li><a href="https://keepalived.org/manpage.html">https://keepalived.org/manpage.html</a></li></ul><p>用户空间核心组件：</p><p>vrrp stack：VIP消息通告</p><p>checkers：监测real server</p><p>system call：实现 vrrp 协议状态转换时调用脚本的功能</p><p>SMTP：邮件组件 </p><p>IPVS wrapper：生成IPVS规则</p><p>Netlink Reflector：网络接口</p><p>WatchDog：监控进程</p><ul><li>控制组件：提供keepalived.conf 的解析器，完成Keepalived配置 </li><li>IO复用器：针对网络目的而优化的自己的线程抽象 </li><li>内存管理组件：为某些通用的内存管理功能（例如分配，重新分配，发布等）提供访问权限</li></ul><h2 id="VRRP协议"><a href="#VRRP协议" class="headerlink" title="VRRP协议"></a>VRRP协议</h2><ol><li>在网络中，主机之间的通信都是通过配置静态路由或者(默认网关)来完成的，而主机之间的路由器一旦发生故障，服务就会中断，因此这种通信模式当中，路由器就成了一个单点瓶颈，为了解决这个问题，就引入了VRRP协议。</li><li>VRRP协议是一种容错的主备模式的协议，保证当主机的下一跳路由出现故障时，由另一台路由器来代替出现故障的路由器进行工作，通过VRRP可以在网络发生故障时透明的进行设备切换而不影响主机之间的数据通信。</li><li>VRRP是通过一种竞选协议机制来将路由任务交给某台VRRP路由器的。</li><li>工作时主节点发包，备节点接包，当备节点接收不到主节点发的数据包的时候，就启动接管程序接管主节点的资源。备节点可以有多个，通过优先级竞选，但一般Keepalived系统运维工作中都是一对。</li><li>VRRP路由器在运行中有三种状态：Initialize状态、 Master状态、Backup状态，一般主路由器处于Master状态，备份路由器处于Backup状态。</li><li>VRRP选举机制<ol><li>VRRP组中IP拥有者。如果虚拟IP地址与VRRP组中的某台VRRP路由器IP地址相同，则此路由器为IP地址拥有者，这台路由器将被定位主路由器。</li><li>比较优先级。如果没有IP地址拥有者，则比较路由器的优先级，优先级的范围是0~255，优先级大的作为主路由器</li><li>比较IP地址。在没有Ip地址拥有者和优先级相同的情况下，IP地址大的作为主路由器。</li></ol></li></ol><h2 id="三种状态监测方式"><a href="#三种状态监测方式" class="headerlink" title="三种状态监测方式"></a>三种状态监测方式</h2><ul><li>基于四层的传输端口做状态监测，此检测为默认方式。</li><li>基于指定的URI来做状态监测，不过需要访问整个页面资源，整个比较占带宽。</li><li>基于指定的URI的request请求头部的内容做状态监测，占用的带宽较少,比较建议使用此方式来做监测</li></ul><h2 id="keepalived的工作原理"><a href="#keepalived的工作原理" class="headerlink" title="keepalived的工作原理"></a>keepalived的工作原理</h2><ol><li>Keepalived高可用集群之间是通过VRRP进行通信的，VRRP是通过竞选机制来确定主备的，主的优先级高于备，因此，工作时主会优先获得所有的资源，备节点处于等待状态，当主挂了的时候，备节点就会接管主节点的资源，然后顶替主节点对外提供服务。</li><li>在Keepalived服务之间，只有作为主的服务器会一直发送VRRP广播包，告诉备它还活着，此时备不会抢占主，当主不可用时，即备监听不到主发送的广播包时，就会启动相关服务接管资源，保证业务的连续性。接管速度最快可以小于1秒。</li></ol><h1 id="补充的内容"><a href="#补充的内容" class="headerlink" title="补充的内容"></a>补充的内容</h1><p><strong>出现脑裂的原因：</strong></p><ul><li>高可用服务器对之间心跳线链路发生故障，导致无法正常通信。</li><li>因心跳线坏了（包括断了，老化）。</li><li>因网卡及相关驱动坏了，ip配置及冲突问题（网卡直连）</li><li>因心跳线间连接的设备故障（网卡及交换机）</li><li>因仲裁的机器出问题（采用仲裁的方案）</li><li>高可用服务器上开启了 iptables防火墙阻挡了心跳消息传输。</li><li>高可用服务器上心跳网卡地址等信息配置不正确，导致发送心跳失败</li><li>其他服务配置不当等原因，如心跳方式不同，心跳广插冲突、软件Bug等。</li></ul><p><strong>如何解决脑裂：</strong></p><ul><li>同时使用串行电缆和以太网电缆连接，同时用两条心跳线路，这样一条线路坏了，另一个还是好的，依然能传送心跳消息。</li><li>当检测到裂脑时强行关闭一个心跳节点（这个功能需特殊设备支持，如Stonith、feyce）。相当于备节点接收不到心跳消患，通过单独的线路发送关机命令关闭主节点的电源。</li><li>做好对裂脑的监控报警（如邮件及手机短信等或值班）.在问题发生时人为第一时间介入仲裁，降低损失。</li><li>管理员可以通过手机回复对应数字或简单的字符串操作返回给服务器.让服务器根据指令自动处理相应故障这样解决故障的时间更短。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Keepalived </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Keepalived </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx负载均衡</title>
      <link href="/post/30b123ab.html"/>
      <url>/post/30b123ab.html</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx的负载均衡"><a href="#Nginx的负载均衡" class="headerlink" title="Nginx的负载均衡"></a>Nginx的负载均衡</h1><h2 id="nginx负载均衡中常见的算法及原理"><a href="#nginx负载均衡中常见的算法及原理" class="headerlink" title="nginx负载均衡中常见的算法及原理"></a>nginx负载均衡中常见的算法及原理</h2><p>Nginx 可以基于ngx_http_upstream_module模块</p><p>提供服务器分组转发、权重分配、状态监测、调度算法等高级功能。</p><h3 id="http-upstream配置参数"><a href="#http-upstream配置参数" class="headerlink" title="http upstream配置参数"></a>http upstream配置参数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#自定义一组服务器，配置在http块内</span></span><br><span class="line">upstream name &#123; </span><br><span class="line"> server .....</span><br><span class="line"> ......</span><br><span class="line">&#125;</span><br><span class="line">示例：</span><br><span class="line">upstream backend &#123;</span><br><span class="line">    server backend1.example.com       weight=5;</span><br><span class="line">    server backend2.example.com:8080;</span><br><span class="line">    server unix:/tmp/backend3;</span><br><span class="line"></span><br><span class="line">    server backup1.example.com:8080   backup;</span><br><span class="line">    server backup2.example.com:8080   backup;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass http://backend;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server address [parameters];</span><br><span class="line"><span class="comment">#配置一个后端web服务器，配置在upstream内，至少要有一个server服务器配置。</span></span><br><span class="line">定义服务器的address和其他parameters。该地址可以指定为域名或IP地址，可以带端口。如果未指定端口，则默认使用80端口。</span><br><span class="line"></span><br><span class="line"><span class="comment">#server支持的parameters如下：</span></span><br><span class="line">weight=number <span class="comment">#设置权重，默认为1,实现类似于LVS中的WRR,WLC等</span></span><br><span class="line">max_conns=number  <span class="comment">#给当前后端server设置最大活动链接数，默认为0表示没有限制</span></span><br><span class="line">max_fails=number  <span class="comment">#后端服务器的下线条件,当客户端访问时,对本次调度选中的后端服务器连续进行检测多少次,如果都失败就标记为不可用,默认为1次,当客户端访问时,才会利用TCP触发对探测后端服务器健康性检查,而非周期性的探测</span></span><br><span class="line">fail_timeout=time <span class="comment">#后端服务器的上线条件,对已经检测到处于不可用的后端服务器,每隔此时间间隔再次进行检测是否恢复可用，如果发现可用,则将后端服务器参与调度,默认为10秒</span></span><br><span class="line">backup  <span class="comment">#设置为备份服务器，当所有后端服务器不可用时,才会启用此备用服务器</span></span><br><span class="line">down    <span class="comment">#标记为down状态,可以平滑下线后端服务器</span></span><br><span class="line">resolve <span class="comment">#当server定义的是主机名的时候，当A记录发生变化会自动应用新IP而不用重启Nginx</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">hash</span> KEY [consistent];</span><br><span class="line"><span class="comment">#基于指定请求报文中首部字段或者URI等key做hash计算，使用consistent参数，将使用ketama一致性hash算法，适用于后端是Cache服务器（如varnish）时使用，consistent定义使用一致性hash运算，一致性hash基于取模运算</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">hash</span> <span class="variable">$request_uri</span> consistent; <span class="comment">#基于用户请求的uri做hash</span></span><br><span class="line"><span class="built_in">hash</span> <span class="variable">$cookie_sessionid</span>  <span class="comment">#基于cookie中的sessionid这个key进行hash调度,实现会话绑定</span></span><br><span class="line"></span><br><span class="line">ip_hash;</span><br><span class="line"><span class="comment">#源地址hash调度方法，基于的客户端的remote_addr(源地址IPv4的前24位或整个IPv6地址)做hash计算，以实现会话保持</span></span><br><span class="line"></span><br><span class="line">least_conn;</span><br><span class="line"><span class="comment">#最少连接调度算法，优先将客户端请求调度到当前连接最少的后端服务器,相当于LVS中的WLC</span></span><br></pre></td></tr></table></figure><h3 id="Nginx-负载均衡中常见的算法"><a href="#Nginx-负载均衡中常见的算法" class="headerlink" title="Nginx 负载均衡中常见的算法"></a>Nginx 负载均衡中常见的算法</h3><p>这里的示例环境是：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">client：10.0.0.8</span><br><span class="line">Nginx：10.0.0.100</span><br><span class="line">nginx1：10.0.0.7</span><br><span class="line">nginx2：10.0.0.17</span><br></pre></td></tr></table></figure><h4 id="轮询-round-robin"><a href="#轮询-round-robin" class="headerlink" title="轮询(round robin)"></a>轮询(round robin)</h4><p>轮询算法是nginx的默认调度算法，是按照客户端的请求顺序来逐一的分配到不同的后端节点服务器上，这个与lvs的轮询是差不多的；假设后端的某个节点服务器宕机是，宕机的服务器会被自动从节点服务器池中删除，为了使客户端的用户访问不受影响，新的请求会分配给正常的服务器。</p><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line">root@Nginx:~<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment">#在http块中加上下面语句</span></span><br><span class="line">upstream websrvs &#123;</span><br><span class="line">    server 10.0.0.7:80;</span><br><span class="line">    server 10.0.0.17:80;</span><br><span class="line">&#125;</span><br><span class="line">root@Nginx:~<span class="comment"># vim /apps/nginx/conf.d/pc.conf </span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.atuhf.com;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /data/nginx/html/pc;</span><br><span class="line">        index index.html index.htm;</span><br><span class="line">        proxy_pass http://websrvs;                                                                   </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#检查语法并重新加载配置文件</span></span><br><span class="line">root@Nginx:~<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -s reload</span></span><br><span class="line"><span class="comment">#客户端上测试验证数据</span></span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line"><span class="comment">#lvs中没有健康检查，而nginx自带健康检查，假设后端一个服务器挂了，现在测试访问看一下</span></span><br><span class="line">[root@nginx1 ~]<span class="comment"># hostname -I</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@nginx1 ~]<span class="comment"># systemctl stop nginx</span></span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br></pre></td></tr></table></figure><h4 id="加权轮询-weight-round-robin"><a href="#加权轮询-weight-round-robin" class="headerlink" title="加权轮询(weight round robin)"></a>加权轮询(weight round robin)</h4><p>这个是在轮询算法的基础上加了权重，这个也叫权重轮询算法；权重越高，被访问的几率就越大，这个是根据服务器的配置和性能来指定权重值的大小，要达到合理有效的地利用主机的资源。</p><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">root@Nginx:~<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment">#在http块中加上下面语句</span></span><br><span class="line">upstream websrvs &#123;</span><br><span class="line">    server 10.0.0.7:80 weight=2;</span><br><span class="line">    server 10.0.0.17:80;</span><br><span class="line">&#125;</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -s reload</span></span><br><span class="line"><span class="comment">#在客户端上测试验证</span></span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br></pre></td></tr></table></figure><h4 id="源地址hash-ip-hash"><a href="#源地址hash-ip-hash" class="headerlink" title="源地址hash(ip_hash)"></a>源地址hash(ip_hash)</h4><p>源地址hash调度方法，基于的客户端的remote_addr(源地址IPv4的前24位或整个IPv6地址)做hash计算，以实现会话保持；这个方法可以让同一用户的请求始终传递给同一服务器。除非该服务器出问题了，在服务器出问题后，客户端会重新将新的请求发往另外一台服务器。</p><p><strong>注意：当负载均衡的算法为ip_hash时，后端服务器在负载均衡调度中的状态不能有weight和backup。</strong></p><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">root@Nginx:~<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment">#在http块中加上下面语句</span></span><br><span class="line">upstream websrvs &#123;</span><br><span class="line">    ip_hash;</span><br><span class="line">    server 10.0.0.7:80;</span><br><span class="line">    server 10.0.0.17:80;</span><br><span class="line">&#125;</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -s reload</span></span><br><span class="line"><span class="comment">#在客户端上测试数据</span></span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line"><span class="comment">#修改一下server 10.0.0.17:80 down;在测试访问查看</span></span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br></pre></td></tr></table></figure><h4 id="目的Url-hash-url-hash"><a href="#目的Url-hash-url-hash" class="headerlink" title="目的Url hash(url_hash)"></a>目的Url hash(url_hash)</h4><p>url_hash这个算法是根据请求的url的hash值来调度到后端的服务器，当后端服务器为缓存时，效率会较高。</p><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@Nginx:~<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment">#在http块中加上下面语句</span></span><br><span class="line">upstream websrvs &#123;</span><br><span class="line">    <span class="built_in">hash</span> <span class="variable">$remote_addr</span>;</span><br><span class="line">    server 10.0.0.7:80;</span><br><span class="line">    server 10.0.0.17:80;</span><br><span class="line">&#125;</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -s reload</span></span><br><span class="line"><span class="comment">#在客户端上测试数据</span></span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">当把server 10.0.0.7:80 down;down后就会出现下面的结果。</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="最少连接数-least-conn"><a href="#最少连接数-least-conn" class="headerlink" title="最少连接数(least_conn)"></a>最少连接数(least_conn)</h4><p>最少连接调度算法，优先将客户端请求调度到当前连接最少的后端服务器,相当于LVS中的WLC(加权最少连接算法)；同时要考虑服务器的权重值，如果后端服务器的连接数都相同时，则使用WRR加权轮询调度算法。</p><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">root@Nginx:~<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment">#在http块中加上下面语句</span></span><br><span class="line">upstream websrvs &#123;</span><br><span class="line">    least_conn;</span><br><span class="line">    server 10.0.0.7:80;</span><br><span class="line">    server 10.0.0.17:80;</span><br><span class="line">&#125;</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">root@Nginx:~<span class="comment"># nginx -s reload</span></span><br><span class="line"><span class="comment">#在客户端上测试数据</span></span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.17</span><br><span class="line">从上面数据来看，后端服务器的连接数都相同时，则使用WRR加权轮询调度算法，默认权重是1</span><br></pre></td></tr></table></figure><h3 id="Nginx核心算法的工作原理"><a href="#Nginx核心算法的工作原理" class="headerlink" title="Nginx核心算法的工作原理"></a>Nginx核心算法的工作原理</h3><h4 id="一致性Hash算法工作原理"><a href="#一致性Hash算法工作原理" class="headerlink" title="一致性Hash算法工作原理"></a>一致性Hash算法工作原理</h4><p><img src="/images/consistency_hash.png"></p><p>一致性Hash算法是常用关键算法之一，在分布式计算系统、分布式存储系统、数据分析等众多领域中广泛应用。 hash算法的关键在于它能够根据不同的属性数据，生成一串不相同的hash值，并且能够将这个hash值转换为 0 ～ （2的32次方-1） 范围整数，详细的查看上图中的圆环图。 对一台服务器的某个或者某一些属性进行hash计算（通常是这个服务器的IP地址和开放端口），并且根据计算分布在这个圆环上的某一个点。也就是图中圆环上的蓝色点。 对一个处理请求同样也可以根据这个请求的某一个或者某些属性进行hash计算（可以是这个请求的IP、端口、cookie值、URL值或者请求时间等），并且根据计算记过分布在这个圆环上的某一个点上。也就是上图圆环上的黄色点。 我们约定落在某一个蓝点A左侧和蓝点B右侧的黄色点所代表的请求，都有蓝点A所代表的服务器进行处理，这样就完成解决了“谁来处理”的问题。在蓝色点稳定存在的前提下，来自于同一个Hash约定的请求所落在的位置都是一样的，这就保证了服务处理客户请求相对的固定。​ 当某一个蓝色点由于某种原因下线，其所影响到的黄色点也是有限的。即下一次客户端的请求将由其他的蓝色点所代表的服务器进行处理。</p><h4 id="轮询与加权轮询"><a href="#轮询与加权轮询" class="headerlink" title="轮询与加权轮询"></a>轮询与加权轮询</h4><p><img src="/images/polling.png"></p><p>当有任务需要传递到下层节点进行处理时，任务来源点会按照固定的顺序，将任务依次的分配下去如果下层可用的节点数量为X，那么第N个任务的分配规则为：<strong>目标节点&#x3D;(NmodX)+1</strong>。</p><p>轮询处理在很多架构思想中都有体现：DNS解析多IP时、LVS向下转发消息时、Nginx向下转发消息时、Zookeeper向计算节点分配任务时。了解基本的轮询过程有助于我们在进行软件架构设计时进行思想借鉴。但是上面的轮询方式是有缺陷的，由于各种客观原因我们可能无法保证任务处理节点的处理能力都是一样的（CPU、IO、内存频率等不同）。所以A节点业务能同时处理100个任务，但是B节点可能同时只能处理50个任务。在这种情况下我们需要依据下层节点某个或者多个属性设置权值。这个属性可能是网络带宽、CPU繁忙程度或者就是各一个固定的权值。</p><p>那么加权轮询的分配依据是什么呢？有很多分配依据，例如：概率算法（此算法中包括蒙特卡罗算法，拉斯维加斯算法和舍伍德算法，在网络上有很多介绍资料）、最大公约数法。这里我们对最大公约数算法进行介绍，因为该方法简单实用：</p><p><img src="/images/weighted_polling.png"></p><p>首先按照某种规则计算得到每个处理节点的权值，上文已经说到计算规则可能是这个服务节点的CPU利用率、网络占用情况或者在配置文件中的固定权重。</p><p>求这些权值的最大公约数，在上图中三个节点的权值分别是100、80、60.那么求得的最大公约数就是20（如果您忘记了最大公约数的定义，请自行复习）。那么这三个节点的被除结果分别是5、4、3，求和值为12。得到以上的计算结果，就可以开始进行请求分配了，公式同样为：(NmodX)+1&#x3D;Y。其中N表示当前的第N次任务；X表示整除后的求和结果；Y为处理节点。</p><p>备注：加权轮询是轮询方案的补充，通过将处理节点的属性转换成权值可以有效的描述处理节点的处理能力，实现更科学的处理任务分配。加权轮询的关键在于加权算法，最大公约数算法简单实用，定位效率高。</p>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nginx实现多级反向代理客户端IP透传</title>
      <link href="/post/193cf16.html"/>
      <url>/post/193cf16.html</url>
      
        <content type="html"><![CDATA[<h1 id="Nginx反向代理"><a href="#Nginx反向代理" class="headerlink" title="Nginx反向代理"></a>Nginx反向代理</h1><h2 id="反向代理配置参数"><a href="#反向代理配置参数" class="headerlink" title="反向代理配置参数"></a>反向代理配置参数</h2><p><a href="https://nginx.org/en/docs/http/ngx_http_proxy_module.html"><strong>官方文档</strong></a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">proxy_pass;</span><br><span class="line"><span class="comment">#用来设置将客户端请求转发给的后端服务器的主机，可以是主机名(将转发至后端服务做为主机头首部)、IP地址：端口的方式</span></span><br><span class="line"><span class="comment">#也可以代理到预先设置的主机群组，需要模块ngx_http_upstream_module支持</span></span><br><span class="line"></span><br><span class="line">proxy_hide_header field;</span><br><span class="line"><span class="comment">#用于nginx作为反向代理的时候，在返回给客户端http响应时，隐藏后端服务器相应头部的信息，可以设置在http，server或location块</span></span><br><span class="line">proxy_hide_header ETag;</span><br><span class="line"><span class="comment">#隐藏后端服务器ETag首部字段</span></span><br><span class="line"></span><br><span class="line">proxy_pass_request_body on | off; </span><br><span class="line"><span class="comment">#是否向后端服务器发送HTTP实体部分,可以设置在http,server或location块，默认即为开启</span></span><br><span class="line"></span><br><span class="line">proxy_pass_request_headers on | off; </span><br><span class="line"><span class="comment">#是否将客户端的请求头部转发给后端服务器，可以设置在http,server或location块，默认即为开启</span></span><br><span class="line"></span><br><span class="line">proxy_set_header;</span><br><span class="line"><span class="comment">#可更改或添加客户端的请求头部信息内容并转发至后端服务器，比如在后端服务器想要获取客户端的真实IP的时候，就要更改每一个报文的头部</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;</span></span><br><span class="line"><span class="comment">#添加客户端IP和反向代理服务器IP到请求报文头部</span></span><br><span class="line">“X-Forwarded-For”客户端请求标头字段，<span class="variable">$remote_addr</span>附加变量，用逗号分隔。</span><br><span class="line">如果客户端请求标头中不存在“X-Forwarded-For”字段，则该<span class="variable">$proxy_add_x_forwarded_for</span>变量等于该<span class="variable">$remote_addr</span>变量。</span><br><span class="line"></span><br><span class="line">proxy_set_header X-Real-IP <span class="variable">$remote_addr</span>;</span><br><span class="line"><span class="comment">#添加HOST到报文头部，如果客户端为NAT上网那么其值为客户端的共用的公网IP地址，常用于在日之中记录客户端的真实IP地址。</span></span><br><span class="line"><span class="comment">#在后端httpd服务器修改配置，添加日志记录X-Forwarded-For字段</span></span><br><span class="line">LogFormat <span class="string">&quot;%h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot; \&quot;%&#123;X-Forwarded-For&#125;i\&quot;&quot;</span> combined</span><br><span class="line"></span><br><span class="line">proxy_connect_timeout time;</span><br><span class="line"><span class="comment">#配置nginx服务器与后端服务器尝试建立连接的超时时间，默认为60秒，用法如下：</span></span><br><span class="line">proxy_connect_timeout 6s; </span><br><span class="line"><span class="comment">#60s为自定义nginx与后端服务器建立连接的超时时间,超时会返回客户端504响应码</span></span><br><span class="line"></span><br><span class="line">proxy_read_timeout time;</span><br><span class="line"><span class="comment">#配置nginx服务器向后端服务器或服务器组发起read请求后，等待的超时时间，默认60s</span></span><br><span class="line">proxy_send_timeout time; </span><br><span class="line"><span class="comment">#配置nginx项后端服务器或服务器组发起write请求后，等待的超时 时间，默认60s</span></span><br></pre></td></tr></table></figure><h2 id="反向代理缓存功能的配置"><a href="#反向代理缓存功能的配置" class="headerlink" title="反向代理缓存功能的配置"></a>反向代理缓存功能的配置</h2><p>默认缓存功能是没有开启的，需要手动配置一下才可以启用。</p><p>相关的配置如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">proxy_cache zone_name | off; 默认off</span><br><span class="line"><span class="comment">#指明调用的缓存，或关闭缓存机制;Context:http, server, location</span></span><br><span class="line"><span class="comment">#zone_name 表示缓存的名称.需要由proxy_cache_path事先定义</span></span><br><span class="line"></span><br><span class="line">proxy_cache_key string;</span><br><span class="line"><span class="comment">#缓存中用于“键”的内容，默认值：proxy_cache_key $scheme$proxy_host$request_uri;</span></span><br><span class="line"></span><br><span class="line">proxy_cache_valid [code ...] time;</span><br><span class="line"><span class="comment">#定义对特定响应码的响应内容的缓存时长，定义在http&#123;...&#125;中</span></span><br><span class="line">示例：</span><br><span class="line">proxy_cache_valid 200 302 301 10m; </span><br><span class="line"></span><br><span class="line">proxy_cache_path;</span><br><span class="line"><span class="comment">#定义可用于proxy功能的缓存;Context:http </span></span><br><span class="line">proxy_cache_path path [levels=levels] [use_temp_path=on|off] </span><br><span class="line">keys_zone=zone_name:size [inactive=time] [max_size=size] [manager_files=number] </span><br><span class="line">[manager_sleep=time] [manager_threshold=time] [loader_files=number] </span><br><span class="line">[loader_sleep=time] [loader_threshold=time] [purger=on|off] </span><br><span class="line">[purger_files=number] [purger_sleep=time] [purger_threshold=time];</span><br><span class="line"></span><br><span class="line">示例：在http配置定义缓存信息</span><br><span class="line">proxy_cache_path /var/cache/nginx/proxy_cache <span class="comment">#定义缓存保存路径，proxy_cache会自动创</span></span><br><span class="line">建目录</span><br><span class="line">   levels=1:2:2 <span class="comment">#定义缓存目录结构层次，1:2:2可以生成2^4x2^8x2^8=2^20=1048576个目录</span></span><br><span class="line">   keys_zone=proxycache:20m <span class="comment">#指内存中缓存的大小，主要用于存放key和metadata（如：使用次数）,一般1M可存放8000个左右的key</span></span><br><span class="line">   inactive=120s  <span class="comment">#缓存有效时间  </span></span><br><span class="line">   max_size=10g; <span class="comment">#最大磁盘占用空间，磁盘存入文件内容的缓存空间最大值</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#调用缓存功能，需要定义在相应的配置段，如server&#123;...&#125;;或者location等</span></span><br><span class="line">proxy_cache proxycache;</span><br><span class="line">proxy_cache_key <span class="variable">$request_uri</span>; <span class="comment">#对指定的数据进行MD5的运算做为缓存的key</span></span><br><span class="line">proxy_cache_valid 200 302 301 10m; <span class="comment">#指定的状态码返回的数据缓存多长时间</span></span><br><span class="line">proxy_cache_valid any 1m;   <span class="comment">#除指定的状态码返回的数据以外的缓存多长时间,必须设置,否则不会缓存</span></span><br></pre></td></tr></table></figure><p>清理缓存的方法：</p><ul><li>方法1: rm -rf 缓存目录</li><li>方法2: 使用第三方扩展模块ngx_cache_purge</li></ul><h2 id="添加响应报文的头部信息"><a href="#添加响应报文的头部信息" class="headerlink" title="添加响应报文的头部信息"></a>添加响应报文的头部信息</h2><p>nginx基于模块ngx_http_headers_module可以实现对后端服务器响应给客户端的报文中添加指定的响应首部字段</p><p><a href="https://nginx.org/en/docs/http/ngx_http_headers_module.html"><strong>官方文档</strong></a></p><p><strong>语法格式：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Syntax:    add_header name value [always];</span><br><span class="line">Default:    —</span><br><span class="line">Context:    http, server, location, <span class="keyword">if</span> <span class="keyword">in</span> location</span><br></pre></td></tr></table></figure><p><strong>示例：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">location /static &#123;</span><br><span class="line">    proxy_pass http://10.0.0.101:80/;</span><br><span class="line">    proxy_cache proxycache;</span><br><span class="line">    proxy_cache_key <span class="variable">$request_uri</span>;</span><br><span class="line">    proxy_cache_valid 200 302 301 1h;</span><br><span class="line">    proxy_cache_valid any 1m;</span><br><span class="line">    </span><br><span class="line">    proxy_set_header clientip <span class="variable">$remote_addr</span>;</span><br><span class="line">    add_header X-Via  <span class="variable">$server_addr</span>;</span><br><span class="line">    add_header X-Cache <span class="variable">$upstream_cache_status</span>;</span><br><span class="line">    add_header X-Accel <span class="variable">$server_name</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="测试示例：多级代理实现客户端-IP-透传"><a href="#测试示例：多级代理实现客户端-IP-透传" class="headerlink" title="测试示例：多级代理实现客户端 IP 透传"></a>测试示例：多级代理实现客户端 IP 透传</h2><p>实现的架构图：</p><p><img src="/images/reverse_proxy.png"></p><h2 id="环境准备："><a href="#环境准备：" class="headerlink" title="环境准备："></a>环境准备：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">client ：10.0.0.8 测试</span><br><span class="line">nginx1 ：10.0.0.100 X-Forwarded-For：client ip</span><br><span class="line">nginx2 ：10.0.0.102 X-Forwarded-For：client ip</span><br><span class="line">httpd ：10.0.0.7 X-Forwarded-For：client ip，nginx1</span><br></pre></td></tr></table></figure><h2 id="第一个代理服务器配置"><a href="#第一个代理服务器配置" class="headerlink" title="第一个代理服务器配置"></a>第一个代理服务器配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">root@nginx1:~<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment">#开启日志格式,记录x_forwarded_for</span></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    server_tokens off;</span><br><span class="line">    proxy_cache_path /data/nginx/proxycache levels=1:1:1 keys_zone=proxycache:20m inactive=120s max_size=1g;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line">    access_log  logs/access.log  main;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#定义反向代理</span></span><br><span class="line">root@nginx1:~<span class="comment"># vim /apps/nginx/conf.d/pc.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.atuhf.com;</span><br><span class="line">    proxy_cache off;</span><br><span class="line">    proxy_cache_key <span class="variable">$request_uri</span>;</span><br><span class="line">    proxy_cache_valid 200 302 301 10m;</span><br><span class="line">    proxy_cache_valid any 5m;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    proxy_hide_header ETag;</span><br><span class="line">    add_header X-Via <span class="variable">$server_addr</span>;</span><br><span class="line">    add_header X-Cache <span class="variable">$upstream_cache_status</span>;</span><br><span class="line">    add_header X-Accel <span class="variable">$server_name</span>;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /data/nginx/html/pc;</span><br><span class="line">        index index.html index.hml;                                                                  </span><br><span class="line">        proxy_pass http://www.atuhf.org;</span><br><span class="line">        proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">root@nginx1:~<span class="comment"># vim /etc/hosts    #加上本地的host解析</span></span><br><span class="line">10.0.0.102 www.atuhf.com</span><br><span class="line"><span class="comment">#重新加载</span></span><br><span class="line">root@nginx1:~<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">root@nginx1:~<span class="comment"># nginx -s reload</span></span><br></pre></td></tr></table></figure><h2 id="第二个代理服务器配置"><a href="#第二个代理服务器配置" class="headerlink" title="第二个代理服务器配置"></a>第二个代理服务器配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">root@nginx2:~<span class="comment"># vim /apps/nginx/conf/nginx.conf</span></span><br><span class="line"><span class="comment">#开启日志格式,记录x_forwarded_for</span></span><br><span class="line">http &#123;</span><br><span class="line">    include       mime.types;</span><br><span class="line">    default_type  application/octet-stream;</span><br><span class="line">    server_tokens off;</span><br><span class="line">    proxy_cache_path /data/nginx/proxycache levels=1:1:1 keys_zone=proxycache:20m inactive=120s max_size=1g;</span><br><span class="line"></span><br><span class="line">    log_format  main  <span class="string">&#x27;$remote_addr - $remote_user [$time_local] &quot;$request&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;$status $body_bytes_sent &quot;$http_referer&quot; &#x27;</span></span><br><span class="line">                      <span class="string">&#x27;&quot;$http_user_agent&quot; &quot;$http_x_forwarded_for&quot;&#x27;</span>;</span><br><span class="line">    access_log  logs/access.log  main;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#定义反向代理</span></span><br><span class="line">root@nginx2:~<span class="comment"># vim /apps/nginx/conf.d/pc.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.atuhf.com;</span><br><span class="line">    proxy_set_header X-Forwarded-For <span class="variable">$proxy_add_x_forwarded_for</span>;</span><br><span class="line">    location / &#123;</span><br><span class="line">        root /data/nginx/html</span><br><span class="line">        proxy_pass http://10.0.0.7;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">root@nginx2:~<span class="comment"># echo &#x27;10.0.0.102&#x27; &gt; /data/nginx/html/index.html</span></span><br><span class="line"><span class="comment">#检查nginx配置文件语法并重新加载配置文件</span></span><br><span class="line">root@nginx2:~<span class="comment"># nginx -t</span></span><br><span class="line">nginx: the configuration file /apps/nginx/conf/nginx.conf syntax is ok</span><br><span class="line">nginx: configuration file /apps/nginx/conf/nginx.conf <span class="built_in">test</span> is successful</span><br><span class="line">root@nginx2:~<span class="comment"># nginx -s reload</span></span><br></pre></td></tr></table></figure><h2 id="现在测试一下访问一下www-atuhf-com并在各个代理服务器上查看相关日志"><a href="#现在测试一下访问一下www-atuhf-com并在各个代理服务器上查看相关日志" class="headerlink" title="现在测试一下访问一下www.atuhf.com并在各个代理服务器上查看相关日志"></a>现在测试一下访问一下<a href="http://www.atuhf.com并在各个代理服务器上查看相关日志/">www.atuhf.com并在各个代理服务器上查看相关日志</a></h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在第一个代理服务器上面查看日志</span></span><br><span class="line">root@nginx1:~<span class="comment"># tail -f /apps/nginx/logs/access.log</span></span><br><span class="line">10.0.0.8 - - [23/Apr/2022:22:13:09 +0800] <span class="string">&quot;GET /index.html HTTP/1.1&quot;</span> 200 612 <span class="string">&quot;-&quot;</span> <span class="string">&quot;curl/7.61.1&quot;</span> <span class="string">&quot;-&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在第二个代理服务器上面查看日志</span></span><br><span class="line">root@nginx2:~<span class="comment"># tail -f /apps/nginx/logs/access.log</span></span><br><span class="line">10.0.0.100 - - [23/Apr/2022:22:13:09 +0800] <span class="string">&quot;GET /index.html HTTP/1.0&quot;</span> 200 612 <span class="string">&quot;-&quot;</span> <span class="string">&quot;curl/7.61.1&quot;</span> <span class="string">&quot;10.0.0.8&quot;</span></span><br></pre></td></tr></table></figure><h2 id="现在配置一下httpd后端的服务器"><a href="#现在配置一下httpd后端的服务器" class="headerlink" title="现在配置一下httpd后端的服务器"></a>现在配置一下httpd后端的服务器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#yum安装Apache包</span></span><br><span class="line">[root@httpd ~]<span class="comment"># yum -y install httpd</span></span><br><span class="line"><span class="comment">#配置服务器的日志格式</span></span><br><span class="line">[root@httpd ~]<span class="comment"># vim /etc/httpd/conf/httpd.conf</span></span><br><span class="line">LogFormat <span class="string">&quot;\&quot;%&#123;x-Forwarded-For&#125;i\&quot; %h %l %u %t \&quot;%r\&quot; %&gt;s %b \&quot;%&#123;Referer&#125;i\&quot; \&quot;%&#123;User-Agent&#125;i\&quot;&quot;</span> testlog</span><br><span class="line">    CustomLog <span class="string">&quot;logs/access_log&quot;</span> testlog</span><br><span class="line">[root@httpd ~]<span class="comment"># httpd -t</span></span><br><span class="line">AH00558: httpd: Could not reliably determine the server<span class="string">&#x27;s fully qualified domain name, using fe80::20c:29ff:fe80:5484. Set the &#x27;</span>ServerName<span class="string">&#x27; directive globally to suppress this message</span></span><br><span class="line"><span class="string">Syntax OK</span></span><br><span class="line"><span class="string">[root@httpd ~]# systemctl start httpd</span></span><br><span class="line"><span class="string">#设置访问页面</span></span><br><span class="line"><span class="string">[root@httpd ~]# echo &#x27;</span>10.0.0.7<span class="string">&#x27; &gt; /var/www/html/index.html</span></span><br></pre></td></tr></table></figure><h2 id="在客户端测试访问并查看后端服务器的日志"><a href="#在客户端测试访问并查看后端服务器的日志" class="headerlink" title="在客户端测试访问并查看后端服务器的日志"></a>在客户端测试访问并查看后端服务器的日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@client ~]<span class="comment">#curl http://www.atuhf.com</span></span><br><span class="line">10.0.0.7</span><br><span class="line">[root@httpd ~]<span class="comment"># tail -f /var/log/httpd/access_log </span></span><br><span class="line"><span class="string">&quot;10.0.0.8, 10.0.0.100&quot;</span> 10.0.0.102 - - [23/Apr/2022:22:35:46 +0800] <span class="string">&quot;GET / HTTP/1.0&quot;</span> 200 9 <span class="string">&quot;-&quot;</span> <span class="string">&quot;curl/7.61.1&quot;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Nginx </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL性能调优</title>
      <link href="/post/d9b0169.html"/>
      <url>/post/d9b0169.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL性能调优"><a href="#MySQL性能调优" class="headerlink" title="MySQL性能调优"></a>MySQL性能调优</h1><h2 id="服务器硬件的优化"><a href="#服务器硬件的优化" class="headerlink" title="服务器硬件的优化"></a>服务器硬件的优化</h2><p>可以提升硬件设备，例如选择尽量高评率的内存（但频率是不能高于主板的支持）、提升网络带宽、使用SSD高速磁盘、提升CPU的性能等等。</p><p>CPU可以选择：</p><ul><li>对于数据库并发比较高的场景，这样的话CPU的数量就要比频率更重要了。</li><li>对于CPU密集型场景和频繁执行复杂的SQL的场景，这样的话CPU的频率越高越好。</li></ul><h2 id="MySQL数据库配置优化"><a href="#MySQL数据库配置优化" class="headerlink" title="MySQL数据库配置优化"></a>MySQL数据库配置优化</h2><ul><li>表示缓冲池字节大小；推荐值为物理内存的50%~80%。 innodb_buffer_pool_size</li><li>用来控制redo log刷新到磁盘的策略。 innodb_flush_log_at_trx_commit&#x3D;1</li><li>每提交1次事务同步写到磁盘中，可以设置为n。 sync_binlog&#x3D;1</li><li>脏页占innodb_buffer_pool_size的比例时，触发刷脏页到磁盘。 推荐值为25%~50%。 innodb_max_dirty_pages_pct&#x3D;30</li><li>后台进程最大IO性能指标。 默认200，如果SSD，调整为5000~20000 innodb_io_capacity&#x3D;200</li><li>指定innodb共享表空间文件的大小。 innodb_data_file_path</li><li>慢查询日志的阈值设置，单位秒。 long_qurey_time&#x3D;0.3</li><li>mysql复制的形式，row为MySQL8.0的默认形式。 binlog_format&#x3D;row</li><li>调高该参数则应降低interactive_timeout、wait_timeout的值。 max_connections&#x3D;200</li><li>过大，实例恢复时间长；过小，造成日志切换频繁。 innodb_log_file_size</li><li>全量日志建议关闭。 默认关闭。 general_log&#x3D;0</li></ul><h2 id="系统针对MySQL的参数优化"><a href="#系统针对MySQL的参数优化" class="headerlink" title="系统针对MySQL的参数优化"></a>系统针对MySQL的参数优化</h2><h3 id="内核相关的参数（-etc-sysctl-conf）"><a href="#内核相关的参数（-etc-sysctl-conf）" class="headerlink" title="内核相关的参数（&#x2F;etc&#x2F;sysctl.conf）"></a>内核相关的参数（&#x2F;etc&#x2F;sysctl.conf）</h3><p>以下参数可以直接放到sysctl.conf文件的最后就行。</p><ol><li>增加监听队列上限：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net.core.somaxconn = 65535</span><br><span class="line">net.core.netdev_max_backlog = 262144</span><br><span class="line">net.ipv4.tcp_max_syn_backlog = 262144</span><br></pre></td></tr></table></figure><ol start="2"><li>加快TCP连接的回收：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_fin_timeout = 5</span><br><span class="line">net.ipv4.tcp_tw_reuse = 1</span><br><span class="line">net.ipv4.tcp_tw_recycle = 1</span><br></pre></td></tr></table></figure><ol start="3"><li>TCP连接接收和发送缓冲区大小的默认值和最大值:</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">net.core.wmem_default = 8388608c</span><br><span class="line">net.core.wmem_max = 16777216</span><br><span class="line">net.core.rmem_default = 8388608</span><br><span class="line">net.core.rmem_max = 16777216</span><br></pre></td></tr></table></figure><ol start="4"><li>减少失效连接所占用的TCP资源的数量，加快资源回收的效率：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">net.ipv4.tcp_keepalive_time = 300</span><br><span class="line">net.ipv4.tcp_keepalive_intvl = 30</span><br><span class="line">net.ipv4.tcp_keepalive_probes = 3</span><br></pre></td></tr></table></figure><ol start="5"><li>单个共享内存段的最大值：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kernel.shmmax = 68719476735</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1、这个参数应该设置的足够大，以便能在一个共享内存段下容纳整个的Innodb缓冲池的大小。</span><br><span class="line">2、这个值的大小对于64位linux系统，可取的最大值为(物理内存值-1)byte，建议值为大于物理内存的一半，一般取值大于Innodb缓冲池的大小即可。</span><br></pre></td></tr></table></figure><ol start="6"><li>控制换出运行时内存的相对权重：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vm.swappiness = 0</span><br></pre></td></tr></table></figure><p>这个参数当内存不足的时候会对性能产生比较明显的影响。（设置为0，是表示Linux内核虚拟内存完全被占用，才会要使用交换区。）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Linux系统内存交换区：</span><br><span class="line">在Linux系统安装时都会有一个特殊的磁盘分区，称之为系统交换分区。</span><br><span class="line">使用 free -m 命令可以看到swap就是内存交换区。</span><br><span class="line">作用：当操作系统没有足够的内存时，就会将部分虚拟内存写到磁盘的交换区中，这样就会发生内存交换</span><br></pre></td></tr></table></figure><p>如果Linux系统上完全禁止交换分区的话，带来的风险：</p><ol><li>降低操作系统的性能</li><li>容易造成内存的溢出，崩溃，或有些程序被操作系统kill掉了</li></ol><h3 id="增加资源限制（-etc-security-limits-conf）"><a href="#增加资源限制（-etc-security-limits-conf）" class="headerlink" title="增加资源限制（&#x2F;etc&#x2F;security&#x2F;limits.conf）"></a>增加资源限制（&#x2F;etc&#x2F;security&#x2F;limits.conf）</h3><p>在limits.conf文件的末尾加上下面参数，打开文件数的限制。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">*     soft   nofile   1000000</span><br><span class="line">*     hard   nofile   1000000</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*：表示对所有用户有效</span><br><span class="line">soft：表示当前系统生效的设置（soft不能大于hard ）</span><br><span class="line">hard：表明系统中所能设定的最大值</span><br><span class="line">nofile：表示所限制的资源是打开文件的最大数目</span><br><span class="line">1000000：限制的数量</span><br></pre></td></tr></table></figure><p><strong><span style="color: red;">注意：这个文件的修改是需要重启系统才会生效的。</span></strong></p><h2 id="MySQL的参数配置"><a href="#MySQL的参数配置" class="headerlink" title="MySQL的参数配置"></a>MySQL的参数配置</h2><p>mysql参数介绍（客户端中执行），尽量只修改session级别的参数。</p><p>全局参数（新连接的session才会生效，原有已经连接的session不生效）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set global 参数名=参数值;</span><br><span class="line">set @@global.参数名 :=参数值;</span><br></pre></td></tr></table></figure><p>会话参数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set [session] 参数名=参数值;</span><br><span class="line">set @@session.参数名 :=参数值;</span><br></pre></td></tr></table></figure><h3 id="内存配置相关参数"><a href="#内存配置相关参数" class="headerlink" title="内存配置相关参数"></a>内存配置相关参数</h3><ul><li>确定可以使用的内存上限</li><li>确定mysql每个连接使用的内存</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sort_buffer_size：需要注意，每个连接分配指定大小的内存；</span><br><span class="line"> </span><br><span class="line">join_buffer_size；</span><br><span class="line"> </span><br><span class="line">read_buffer_size；</span><br><span class="line"> </span><br><span class="line">read_rnd_buffer_size。</span><br><span class="line"> </span><br><span class="line">上述都为每个进程分别进行设置，所以要注意配置大小。</span><br></pre></td></tr></table></figure><ul><li>确定需要为操作系统保留多少内存</li><li>如何为缓存池分配内存</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Innodb_buffer_pool_size：总内存 - (每个线程所需内存 * 连接数) - 系统保留内存</span><br><span class="line"> </span><br><span class="line">key_buffer_size：主要用于myisam引擎</span><br></pre></td></tr></table></figure><h3 id="IO相关配置参数"><a href="#IO相关配置参数" class="headerlink" title="IO相关配置参数"></a>IO相关配置参数</h3><p>Innodb I&#x2F;O相关配置</p><ul><li>Innodb_log_file_size：单个日志文件大小</li><li>Innodb_log_files_in_group：日志文件的个数</li></ul><p>事务日志总大小：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Innodb_log_files_in_group * Innodb_log_file_size</span><br></pre></td></tr></table></figure><ul><li>Innodb_log_buffer_size：日志缓冲区大小</li><li>Innodb_flush_log_at_trx_commit：日志刷新的频率</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">0：每秒进行一次log写入cache，并flush log到磁盘。如果mysql关闭或重启会导致至少1秒日志的丢失。</span><br><span class="line"> </span><br><span class="line">1：『默认』，在每次事务提交执行log写入cache，并flush log到磁盘。保证不会导致事务日志的丢失。</span><br><span class="line"> </span><br><span class="line">2：【建议】，每次事务提交，执行log数据写入到cache。每秒执行一次flush log到磁盘。</span><br></pre></td></tr></table></figure><ul><li>Innodb_flush_method&#x3D;O_DIRECT：Innodb刷新的方式。</li><li>Innodb_file_per_table&#x3D;1：表空间。强烈建议启用。</li><li>Innodb_doublewrite&#x3D;1：</li></ul><p>Myisam I&#x2F;O相关配置</p><ul><li>delay_key_write</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">OFF：每次写操作后刷新新建缓冲区的脏块到磁盘</span><br><span class="line">ON：只对建表是指定了delay_key_write选项的表使用延迟刷新。</span><br><span class="line">ALL：对所有MYISAM表使用延迟键写入。会导致表损坏，使用相关命令进行修复。</span><br></pre></td></tr></table></figure><h3 id="安全相关配置参数"><a href="#安全相关配置参数" class="headerlink" title="安全相关配置参数"></a>安全相关配置参数</h3><ul><li>expire_logs_days指定自动清理binlog的天数</li><li>max_allowed_packet控制mysql可以接收的包的大小</li><li>skip_name_resolve禁用DNS查找</li><li>sysdate_is_now确保sysdate和now返回的日期是一样的。（同一条sql同时使用sysdate返回的结果有可能是不同的，因而建议启用）</li><li>read_only禁止非super用户写权限：在做主从复制时，建议备库启用这个配置项。</li><li>skip_slave_start警用slave自动恢复，（从服务器中进行配置）</li><li>sql_mode设置mysql所使用的sql模式。（建议不要在生产换环境中调整这个值，有可能会导致系统不可用）</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">strict_trans_tables</span><br><span class="line"> </span><br><span class="line">no_engine_subtitution</span><br><span class="line"> </span><br><span class="line">no_zero_date</span><br><span class="line"> </span><br><span class="line">no_zero_in_date</span><br><span class="line"> </span><br><span class="line">only_full_group_by：select字句需要全部列出group by字段，否则报错。</span><br></pre></td></tr></table></figure><h3 id="其他常用的配置参数"><a href="#其他常用的配置参数" class="headerlink" title="其他常用的配置参数"></a>其他常用的配置参数</h3><ul><li>sync_binlog控制mysql如何向磁盘中刷新binlog</li><li>tmp_table_size和max_heap_table_size控制内存临时表的大小。两个值应保持一致</li><li>max_connections允许最大连接数，一般设置为2000都可以。</li></ul><h3 id="数据库设计对性能的影响（所有优化的重点，其它的所有优化加起来都未必有数据库设计优化对性能的影响大"><a href="#数据库设计对性能的影响（所有优化的重点，其它的所有优化加起来都未必有数据库设计优化对性能的影响大" class="headerlink" title="数据库设计对性能的影响（所有优化的重点，其它的所有优化加起来都未必有数据库设计优化对性能的影响大"></a>数据库设计对性能的影响（所有优化的重点，其它的所有优化加起来都未必有数据库设计优化对性能的影响大</h3><ul><li>过分的反范式话为表建立太多的列</li><li>过多的范式话造成太多表的关联（最多只允许61个表关联）</li><li>在OLTP中使用不恰当的分区表</li><li>使用外键保证数据的完整性（性能很低，建议不要使用外键约束）</li></ul><h2 id="MySQL表结构与SQL语句优化"><a href="#MySQL表结构与SQL语句优化" class="headerlink" title="MySQL表结构与SQL语句优化"></a>MySQL表结构与SQL语句优化</h2><h3 id="索引优化规则"><a href="#索引优化规则" class="headerlink" title="索引优化规则"></a>索引优化规则</h3><ol><li>使用最左侧前缀规则</li></ol><p>如果使用联合索引，要遵守最左前缀规则。即要求使用联合索引进行查询，从索引的最左前列开始，不跳过索引中的列并且不能使用范围查询(&gt;、&lt;、between、like)。<br><img src="/images/isuseindex.png"></p><ol start="2"><li>模糊查询不能利用索引(like ‘%XX’或者like ‘%XX%’)</li></ol><p>假如索引列code的值为’AAA’,’AAB’,’BAA’,’BAB’，如果where code like ‘%AB’条件，由于条件前面是模糊的，所以不能利用索引的顺序，必须逐个查找，看是否满足条件。这样会导致全索引扫描或者全表扫描。</p><p>如果是where code like ‘A%’，就可以查找code中A开头的数据，当碰到B开头的数据时，就可以停止查找了，因为后面的数据一定不满足要求，这样可以提高查询效率。</p><ol start="3"><li>不要过多创建索引</li></ol><p>过多的索引会占用更多的空间，而且每次增、删、改操作都会重建索引。</p><p>在一般的互联网场景中，查询语句的执行次数远远大于增删改语句的执行次数，所以重建索引的开销可以忽略不计。但在大数据量导入时，可以考虑先删除索引，批量插入数据，然后添加索引。</p><blockquote><p>尽量扩展索引，比如现有索引(a)，现在又要对(a,b)进行索引，那么只需要修改索引(a)即可，避免不必要的索引冗余。</p></blockquote><ol start="4"><li>索引长度尽量短</li></ol><p>短索引可以节省索引空间，使查找的速度得到提升，同时内存中也可以装载更多的索引键值。</p><blockquote><p>太长的列，可以选择建立前缀索引。</p></blockquote><ol start="5"><li>索引更新不能太过频繁</li></ol><p>更新很频繁的数据不适宜建立索引，因为去维护索引也是要成本的。</p><ol start="6"><li>索引列是不参与计算</li></ol><p>不要在索引列上做任何的操作，包括计算、函数、自动或者手动类型的切换，这样的操作都是会导致索引失效的。</p><p>比如，where from_unixtime(create_time) &#x3D; ’2014-05-29’就不能使用到索引，原因很简单，b+树中存的都是数据表中的字段值，但进行检索时，需要把所有元素都应用函数才能比较，显然成本太大。所以语句应该写成where create_time &#x3D; unix_timestamp(’2014-05-29’)。</p><h3 id="查询时的优化"><a href="#查询时的优化" class="headerlink" title="查询时的优化"></a>查询时的优化</h3><ol><li>用小表去关联大表</li></ol><p><img src="/images/%E5%A4%9A%E8%A1%A8%E5%85%B3%E8%81%94.png"></p><p>第一张表是全表索引(要以此关联其他表)，其余表的查询类型type为range(索引区间获得)，也就是6 * 1 * 1，共遍历查询6次即可;</p><p>建议使用left join时，以小表关联大表，因为使用join的话，第一张表是必须全扫描的，以少关联多就可以减少这个扫描次数.</p><ol start="2"><li>避免全表扫描</li></ol><p>mysql在使用不等于(!&#x3D;或者&lt;&gt;)的时候无法使用导致全表扫描。在查询的时候，如果对索引使用不等于的操作将会导致索引失效，进行全表扫描</p><ol start="3"><li>避免mysql放弃索引查询</li></ol><p>如果mysql估计使用全表扫描要比使用索引快，则不使用索引。（最典型的场景就是数据量少的时候）</p><ol start="4"><li>使用覆盖索引，少使用select *</li></ol><p>需要用到什么数据就查询什么数据，这样可以减少网络的传输和mysql的全表扫描。</p><p>尽量使用覆盖索引，比如索引为name，age，address的组合索引，那么尽量覆盖这三个字段之中的值，mysql将会直接在索引上取值（using index），并且返回值不包含不是索引的字段。</p><p><img src="/images/%E8%A6%86%E7%9B%96%E7%B4%A2%E5%BC%95.png"></p><p>如果查询select的列过多，覆盖索引的效率会大大下降，这时可以考虑放弃覆盖索引查询。</p><ol start="5"><li>order by的索引生效</li></ol><p>order by排序应该遵循最佳左前缀查询，如果是使用多个索引字段进行排序，那么排序的规则必须相同（同是升序或者降序），否则索引同样会失效。</p><ol start="6"><li>不正确的使用导致索引失效</li></ol><p>如果查询中有某个列的范围查询，则其右边所有列都无法使用索引。</p><ol start="7"><li>for update锁表</li></ol><p>A, B两个事务分别使用select … where … for update进行查询时：</p><ol><li>A事务执行查询操作的时候，如果这个查询结果为空，无论where条件是否是索引字段，B事务执行查询操作时，不会被阻塞。</li><li>A事务执行查询操作的时候，当where条件是索引字段，则B事务执行同样的查询时会被行加锁阻塞；当where条件不是索引字段，则B事务执行有结果集的查询，都会被阻塞。</li></ol><h3 id="其他优化"><a href="#其他优化" class="headerlink" title="其他优化"></a>其他优化</h3><p>开启慢查询</p><p>开启慢查询日志，可以让MySQL记录下查询超过指定时间的语句，通过定位分析性能的瓶颈，更好的优化数据库系统的性能。</p><h2 id="优化建议"><a href="#优化建议" class="headerlink" title="优化建议"></a>优化建议</h2><p>性能优化顺序</p><ul><li>数据库结构和sql语句优化</li><li>数据库引擎的选择和参数配置（不要混合使用存储引擎）</li><li>系统选择及优化</li><li>硬件升级</li></ul>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql日志管理</title>
      <link href="/post/d559de0f.html"/>
      <url>/post/d559de0f.html</url>
      
        <content type="html"><![CDATA[<h1 id="日志管理"><a href="#日志管理" class="headerlink" title="日志管理"></a>日志管理</h1><p>MySQL 支持丰富的日志类型，如下： </p><ul><li>事务日志：transaction log</li></ul><p>事务日志的写入类型为”追加”，因此其操作为”顺序IO”；通常也被称为：预写式日志 write ahead logging </p><p>事务日志文件： ib_logfile0， ib_logfile1 </p><ul><li>错误日志 error log </li><li>通用日志 general log </li><li>慢查询日志 slow query log </li><li>二进制日志 binary log </li><li>中继日志 reley log，在主从复制架构中，从服务器用于保存从主服务器的二进制日志中读取的事件</li></ul><h2 id="事务日志"><a href="#事务日志" class="headerlink" title="事务日志"></a>事务日志</h2><p>事务日志：transaction log </p><ul><li>redo log：实现 WAL（Write Ahead Log）,数据更新前先记录redo log </li><li>undo log：保存与执行的操作相反的操作,用于实现rollback</li></ul><p>事务型存储引擎自行管理和使用，建议和数据文件分开存放</p><p>有关与InnoDB事务日志相关的配置：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;innodb_log%&#x27;</span>;</span><br><span class="line">innodb_log_file_size   <span class="number">50331648</span> #每个日志文件大小</span><br><span class="line">innodb_log_files_in_group <span class="number">2</span>     #日志组成员个数</span><br><span class="line">innodb_log_group_home_dir .<span class="operator">/</span> #事务文件路径</span><br></pre></td></tr></table></figure><p>事务日志性能优化配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">innodb_flush_log_at_trx_commit=0|1|2</span><br><span class="line"></span><br><span class="line">1 此为默认值，日志缓冲区将写入日志文件，并在每次事务后执行刷新到磁盘。 这是完全遵守ACID特性</span><br><span class="line">0 提交时没有写磁盘的操作; 而是每秒执行一次将日志缓冲区的提交的事务写入刷新到磁盘。 这样可提供更好的性能，但服务器崩溃可能丢失最后一秒的事务</span><br><span class="line">2 每次提交后都会写入OS的缓冲区，但每秒才会进行一次刷新到磁盘文件中。 性能比0略差一些，但操作系统或停电可能导致最后一秒的交易丢失</span><br></pre></td></tr></table></figure><p>在高并发业务行业的最佳实践就是使用第三种（&#x3D;2）：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.配置为2和配置为0，性能差异并不大，因为将数据从Log Buffer拷贝到OS cache，虽然跨越用户态与内核态，但毕竟只是内存的数据拷贝，速度很快</span><br><span class="line">2.配置为2和配置为0，安全性差异巨大，操作系统崩溃的概率相比MySQL应用程序崩溃的概率，小很多，设置为2，只要操作系统不奔溃，也绝对不会丢数据</span><br></pre></td></tr></table></figure><p>简要说明：</p><ul><li>设置为1，同时sync_binlog &#x3D; 1表示最高级别的容错</li><li>innodb_use_global_flush_log_at_trx_commit&#x3D;0 时，将不能用SET语句重置此变量（ MariaDB 10.2.6 后废弃）</li></ul><h2 id="错误日志"><a href="#错误日志" class="headerlink" title="错误日志"></a>错误日志</h2><ul><li>mysqld启动和关闭过程中输出的事件信息 </li><li>mysqld运行中产生的错误信息 </li><li>event scheduler运行一个event时产生的日志信息 </li><li>在主从复制架构中的从服务器上启动从服务器线程时产生的信息</li></ul><p>查看错误的路径</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_error&#x27;</span>;</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_error&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span>                    <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_error     <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>log<span class="operator">/</span>mysql<span class="operator">/</span>error.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+--------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line">MariaDB [hellodb]<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_error&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span>                        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+------------------------------+</span></span><br><span class="line"><span class="operator">|</span> log_error     <span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>log<span class="operator">/</span>mariadb<span class="operator">/</span>mariadb.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+------------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>记录哪些警告信息之错误日志文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">log_warnings=0|1|2|3...         <span class="comment">#MySQL5.7之前</span></span><br><span class="line">log_error_verbosity=0|1|2|3...   <span class="comment">#MySQL8.0</span></span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 10.3.28-MariaDB</span></span><br><span class="line">MariaDB [hellodb]<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_warnings&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_warnings  <span class="operator">|</span> <span class="number">2</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.000</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- mysql-5.7.37</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_error_verbosity&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name       <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_error_verbosity <span class="operator">|</span> <span class="number">3</span>     <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><h2 id="通用日志"><a href="#通用日志" class="headerlink" title="通用日志"></a>通用日志</h2><p>通用日志用于记录对数据库的通用操作，也是包括错误的SQL语句；通常可以保存在 file(默认值) 和 table(mysql.general_log)</p><p>通用日志相关的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">general_log=ON|OFF</span><br><span class="line">general_log_file=HOSTNAME.<span class="built_in">log</span></span><br><span class="line">log_output=TABLE|FILE|NONE</span><br></pre></td></tr></table></figure><p>示例：启用通用日志记录到文件中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 默认是没有开通通用日志</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@general_log</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@general_log</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span>             <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 启用</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> general_log<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.04</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@general_log</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@general_log</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="operator">|</span>             <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.02</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 默认通用日志存放在文件中</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_output&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_output    <span class="operator">|</span> FILE  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 通用日志存放的文件路径</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> @<span class="variable">@general_log_file</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> @<span class="variable">@general_log_file</span>        <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">/</span>var<span class="operator">/</span>lib<span class="operator">/</span>mysql<span class="operator">/</span>ubuntu.log <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------------------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br></pre></td></tr></table></figure><p>示例：将通用日志记录到表中</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 修改通用日志，记录通用日志至mysql.general_log表中</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">set</span> <span class="keyword">global</span> log_output<span class="operator">=</span>&quot;table&quot;;</span><br><span class="line">Query OK, <span class="number">0</span> <span class="keyword">rows</span> affected (<span class="number">0.01</span> sec)</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">global</span> variables <span class="keyword">like</span> <span class="string">&#x27;log_output&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> log_output    <span class="operator">|</span> <span class="keyword">TABLE</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.00</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- general_log表是CSV格式的存储引擎</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> <span class="keyword">table</span> status <span class="keyword">like</span> <span class="string">&#x27;general_log&#x27;</span>\G</span><br></pre></td></tr></table></figure><p>示例：查找执行次数最多的前三条语句</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">MariaDB [mysql]&gt; <span class="keyword">select</span> argument,count(argument) num from mysql.general_log group by argument order by num desc <span class="built_in">limit</span> 3;</span><br><span class="line">+---------------------------+-----------------+</span><br><span class="line">| argument                  |             num |</span><br><span class="line">+---------------------------+-----------------+</span><br><span class="line">| <span class="keyword">select</span> * from teachers    |               6 | </span><br><span class="line">| <span class="keyword">select</span> * from general_log |               4 | </span><br><span class="line">| <span class="keyword">select</span> * from students    |               3 |</span><br><span class="line">+---------------------------+-----------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.002 sec)</span><br></pre></td></tr></table></figure><p>示例：对访问的语句进行排序</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]<span class="comment"># mysql -e &#x27;select argument from mysql.general_log&#x27; | awk &#x27;&#123;sql[$0]++&#125;END&#123;for(i in sql)&#123;print sql[i],i&#125;&#125;&#x27;|sort -nr</span></span><br><span class="line">[root@centos8 ~]<span class="comment"># mysql -e &#x27;select argument from mysql.general_log&#x27; |sort |uniq -c |sort -nr</span></span><br></pre></td></tr></table></figure><h2 id="慢日志"><a href="#慢日志" class="headerlink" title="慢日志"></a>慢日志</h2><p>慢日志就是主要记录执行查询时长超出指定时长的操作。</p><p>慢查询的相关变量：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">slow_query_log<span class="operator">=</span><span class="keyword">ON</span><span class="operator">|</span>OFF <span class="comment">-- 开启或关闭慢查询，支持全局和会话，只有全局设置才会生成慢查询文件</span></span><br><span class="line">long_query_time<span class="operator">=</span>N <span class="comment">-- 慢查询的阀值，单位秒,默认为10s</span></span><br><span class="line">slow_query_log_file<span class="operator">=</span>HOSTNAME<span class="operator">-</span>slow.log  <span class="comment">-- 慢查询日志文件</span></span><br><span class="line">log_slow_filter <span class="operator">=</span> admin,filesort,filesort_on_disk,full_join,full_scan,query_cache,query_cache_miss,tmp_table,tmp_table_on_disk </span><br><span class="line"><span class="comment">-- 上述查询类型且查询时长超过long_query_time，则记录日志</span></span><br><span class="line">log_queries_not_using_indexes<span class="operator">=</span><span class="keyword">ON</span>  <span class="comment">-- 不使用索引或使用全索引扫描，不论是否达到慢查询阀值的语句是否记录日志，默认OFF，即不记录</span></span><br><span class="line">log_slow_rate_limit <span class="operator">=</span> <span class="number">1</span> <span class="comment">-- 多少次查询才记录，mariadb特有</span></span><br><span class="line">log_slow_verbosity<span class="operator">=</span> Query_plan,explain <span class="comment">-- 记录内容</span></span><br><span class="line">log_slow_queries <span class="operator">=</span> OFF    <span class="comment">-- 同slow_query_log，MariaDB 10.0/MySQL 5.6.1 版后已删除</span></span><br></pre></td></tr></table></figure><p>慢查询分析工具（mysqldumpslow）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">root@ubuntu:~<span class="comment"># mysqldumpslow --help</span></span><br><span class="line">Usage: mysqldumpslow [ OPTS... ] [ LOGS... ]</span><br><span class="line"></span><br><span class="line">Parse and summarize the MySQL slow query <span class="built_in">log</span>. Options are</span><br><span class="line"></span><br><span class="line">  --verbose    verbose</span><br><span class="line">  --debug      debug</span><br><span class="line">  --<span class="built_in">help</span>       write this text to standard output</span><br><span class="line"></span><br><span class="line">  -v           verbose</span><br><span class="line">  -d           debug</span><br><span class="line">  -s ORDER     what to <span class="built_in">sort</span> by (al, at, ar, c, l, r, t), <span class="string">&#x27;at&#x27;</span> is default    //10.3.28-MariaDB会多俩个命令aa: average rows affected，ae: aggregated rows examined </span><br><span class="line">                al: average lock time</span><br><span class="line">                ar: average rows sent</span><br><span class="line">                at: average query time</span><br><span class="line">                 c: count</span><br><span class="line">                 l: lock time</span><br><span class="line">                 r: rows sent</span><br><span class="line">                 t: query time  </span><br><span class="line">  -r           reverse the <span class="built_in">sort</span> order (largest last instead of first)</span><br><span class="line">  -t NUM       just show the top n queries</span><br><span class="line">  -a           don<span class="string">&#x27;t abstract all numbers to N and strings to &#x27;</span>S<span class="string">&#x27;</span></span><br><span class="line"><span class="string">  -n NUM       abstract numbers with at least n digits within names</span></span><br><span class="line"><span class="string">  -g PATTERN   grep: only consider stmts that include this string</span></span><br><span class="line"><span class="string">  -h HOSTNAME  hostname of db server for *-slow.log filename (can be wildcard),</span></span><br><span class="line"><span class="string">               default is &#x27;</span>*<span class="string">&#x27;, i.e. match all</span></span><br><span class="line"><span class="string">  -i NAME      name of server instance (if using mysql.server startup script)</span></span><br><span class="line"><span class="string">  -l           don&#x27;</span>t subtract lock time from total time</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@centos8 ~]<span class="comment"># mysqldumpslow -s c -t 2 /var/lib/mysql/centos8-slow.log</span></span><br><span class="line">Reading mysql slow query <span class="built_in">log</span> from /var/lib/mysql/centos8-slow.log</span><br><span class="line">Count: 1  Time=0.00s (0s)  Lock=0.00s (0s)  Rows_sent=2.0 (2), </span><br><span class="line">Rows_examined=25.0 (25), Rows_affected=0.0 (0), root[root]@localhost</span><br><span class="line"> <span class="keyword">select</span> * from students <span class="built_in">where</span> age=N</span><br><span class="line">Count: 1  Time=4.00s (4s)  Lock=0.00s (0s)  Rows_sent=4.0 (4), Rows_examined=4.0 </span><br><span class="line">(4), Rows_affected=0.0 (0), root[root]@localhost</span><br><span class="line"> <span class="keyword">select</span> <span class="built_in">sleep</span>(N) from teachers</span><br></pre></td></tr></table></figure><h2 id="二进制日志（binlog）"><a href="#二进制日志（binlog）" class="headerlink" title="二进制日志（binlog）"></a>二进制日志（binlog）</h2><ul><li>记录导致数据改变或潜在导致数据改变的SQL语句 </li><li>记录已提交的日志 </li><li>不依赖于存储引擎类型</li></ul><p>功能：通过”重放”日志文件中的事件来生成数据副本 </p><p>注意：建议二进制日志和数据文件分开存放 </p><p>二进制日志记录的三种格式：</p><ul><li>基于”语句”记录：statement，记录语句，默认模式（ MariaDB 10.2.3 版本以下 ），日志量较少 </li><li>基于”行”记录：row，记录数据，日志量较大，更加安全，建议使用的格式,MySQL8.0默认格式 </li><li>混合模式：mixed, 让系统自行判定该基于哪种方式进行，默认模式（ MariaDB 10.2.4及版本以上）</li></ul><p>配置的格式：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 数据库版本：MySQL-5.7</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">show</span> variables <span class="keyword">like</span> <span class="string">&#x27;binlog_format&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> binlog_format <span class="operator">|</span> <span class="type">ROW</span>   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.04</span> sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 数据库版本：mariadb-10.3.28</span></span><br><span class="line">MariaDB [hellodb]<span class="operator">&gt;</span> <span class="keyword">show</span>  variables <span class="keyword">like</span> <span class="string">&#x27;binlog_format&#x27;</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> Variable_name <span class="operator">|</span> <span class="keyword">Value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="operator">|</span> binlog_format <span class="operator">|</span> MIXED <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">---------------+-------+</span></span><br><span class="line"><span class="number">1</span> <span class="type">row</span> <span class="keyword">in</span> <span class="keyword">set</span> (<span class="number">0.001</span> sec)</span><br></pre></td></tr></table></figure><p>二进制日志文件的构成：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">有两类文件</span><br><span class="line">1.日志文件：mysql|mariadb-bin.文件名后缀，二进制格式,如： on.000001,mariadb-bin.000002</span><br><span class="line">2.索引文件：mysql|mariadb-bin.index，文本格式,记录当前已有的二进制日志文件列表</span><br></pre></td></tr></table></figure><p>二进制日志文件相关的服务器变量：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">sql_log_bin<span class="operator">=</span><span class="keyword">ON</span><span class="operator">|</span>OFF：<span class="comment">-- 是否记录二进制日志，默认ON，支持动态修改，系统变量，而非服务器选项</span></span><br><span class="line">log_bin<span class="operator">=</span><span class="operator">/</span>PATH<span class="operator">/</span>BIN_LOG_FILE：<span class="comment">-- 指定文件位置；默认OFF，表示不启用二进制日志功能，上述两项都开启才可以</span></span><br><span class="line">binlog_format<span class="operator">=</span>STATEMENT<span class="operator">|</span><span class="type">ROW</span><span class="operator">|</span>MIXED：<span class="comment">-- 二进制日志记录的格式，mariadb5.5默认STATEMENT</span></span><br><span class="line">max_binlog_size<span class="operator">=</span><span class="number">1073741824</span>：<span class="comment">-- 单个二进制日志文件的最大体积，到达最大值会自动滚动，默认为1G</span></span><br><span class="line"><span class="comment">-- 说明：文件达到上限时的大小未必为指定的精确值</span></span><br><span class="line">binlog_cache_size<span class="operator">=</span><span class="number">4</span>m <span class="comment">-- 此变量确定在每次事务中保存二进制日志更改记录的缓存的大小（每次连接）</span></span><br><span class="line">max_binlog_cache_size<span class="operator">=</span><span class="number">512</span>m <span class="comment">-- 限制用于缓存多事务查询的字节大小。</span></span><br><span class="line">sync_binlog<span class="operator">=</span><span class="number">1</span><span class="operator">|</span><span class="number">0</span>：<span class="comment">-- 设定是否启动二进制日志即时同步磁盘功能，默认0，由操作系统负责同步日志到磁盘</span></span><br><span class="line">expire_logs_days<span class="operator">=</span>N：<span class="comment">-- 二进制日志可以自动删除的天数。 默认为0，即不自动删除</span></span><br></pre></td></tr></table></figure><p>二进制日志相关的指令：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查看二进制日志文件列表及大小</span></span><br><span class="line"><span class="keyword">SHOW</span> &#123;<span class="type">BINARY</span> <span class="operator">|</span> MASTER&#125; LOGS</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 查看使用中的二进制日志文件</span></span><br><span class="line"><span class="keyword">SHOW</span> MASTER STATUS</span><br><span class="line"></span><br><span class="line"><span class="comment">-- 在线查看二进制文件中的指定内容</span></span><br><span class="line"><span class="keyword">SHOW</span> BINLOG EVENTS [<span class="keyword">IN</span> <span class="string">&#x27;log_name&#x27;</span>] [<span class="keyword">FROM</span> pos] [LIMIT [<span class="keyword">offset</span>,] row_count]</span><br></pre></td></tr></table></figure><p>mysqlbinlog是二进制日志的客户端命令工具，支持离线查看二进制日志。</p><p>命令格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog [OPTIONS] log_file…</span><br><span class="line"> --start-position=<span class="comment"># # 指定开始位置</span></span><br><span class="line"> --stop-position=<span class="comment">#</span></span><br><span class="line"> --start-datetime=  <span class="comment"># 时间格式：YYYY-MM-DD hh:mm:ss</span></span><br><span class="line"> --stop-datetime= </span><br><span class="line"> --base64-output[=name]</span><br><span class="line">        -v -vvv</span><br></pre></td></tr></table></figure><p>示例：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysqlbinlog --start-position=678 --stop-position=752 /var/lib/mysql/mariadb-bin.000003 -v</span><br><span class="line">mysqlbinlog --start-datetime=<span class="string">&quot;2022-02-23 15:05:10&quot;</span>   --stop-datetime=<span class="string">&quot;2022-02-23 15:05:22&quot;</span> mariadb-bin.000003 -vvv</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql备份工具（mysqldump）</title>
      <link href="/post/6e95f9ce.html"/>
      <url>/post/6e95f9ce.html</url>
      
        <content type="html"><![CDATA[<h1 id="mysqldump备份工具"><a href="#mysqldump备份工具" class="headerlink" title="mysqldump备份工具"></a>mysqldump备份工具</h1><h2 id="mysqldump的简要说明"><a href="#mysqldump的简要说明" class="headerlink" title="mysqldump的简要说明"></a>mysqldump的简要说明</h2><p>mysqldump是MySQL数据库中用于备份的一个命令行工具。它可以将MySQL数据库转储成为SQL文件，以便在其他地方恢复。mysqldump的主要作用是备份和恢复数据，它可以备份一个或多个数据库，也可以备份整个MySQL服务器的数据。</p><p>基本的使用格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mysqldump [OPTIONS] database [tables]   <span class="comment">#支持指定数据库和指定多表的备份，但数据库本身定义不备份</span></span><br><span class="line">mysqldump [OPTIONS] -B DB1 [DB2 DB3...] <span class="comment">#支持指定数据库备份，包含数据库本身定义也会备份</span></span><br><span class="line">mysqldump [OPTIONS] -A [OPTIONS]        <span class="comment">#备份所有数据库，包含数据库本身定义也会备份</span></span><br></pre></td></tr></table></figure><p>更加详细的资料可以参考官方文档：<a href="https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html">https://dev.mysql.com/doc/refman/5.7/en/mysqldump.html</a></p><p>mysqldump的常见通用选项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">-A, --all-databases <span class="comment">#备份所有数据库，含create database</span></span><br><span class="line">-B, --databases db_name…  <span class="comment">#指定备份的数据库，包括create database语句</span></span><br><span class="line">-E, --events：<span class="comment">#备份相关的所有event scheduler</span></span><br><span class="line">-R, --routines：<span class="comment">#备份所有存储过程和自定义函数</span></span><br><span class="line">--triggers：<span class="comment">#备份表相关触发器，默认启用,用--skip-triggers，不备份触发器</span></span><br><span class="line">--default-character-set=utf8 <span class="comment">#指定字符集</span></span><br><span class="line">--master-data[=<span class="comment">#]： #此选项须启用二进制日志</span></span><br><span class="line"><span class="comment">#1：所备份的数据之前加一条记录为CHANGE MASTER TO语句，非注释，不指定#，默认为1，适合于主从复制多机使用</span></span><br><span class="line"><span class="comment">#2：记录为被注释的#CHANGE MASTER TO语句，适合于单机使用,适用于备份还原</span></span><br><span class="line"><span class="comment">#此选项会自动关闭--lock-tables功能，自动打开-x | --lock-all-tables功能（除非开启--single-transaction） </span></span><br><span class="line">-F, --flush-logs <span class="comment">#备份前滚动日志，锁定表完成后，执行flush logs命令,生成新的二进制日志文件，配合-A 或 -B 选项时，会导致刷新多次数据库。建议在同一时刻执行转储和日志刷新，可通过和--single-transaction或-x，--master-data 一起使用实现，此时只刷新一次二进制日志</span></span><br><span class="line">--compact        <span class="comment">#去掉注释，适合调试，节约备份占用的空间,生产不使用</span></span><br><span class="line">-d, --no-data    <span class="comment">#只备份表结构,不备份数据,即只备份create table </span></span><br><span class="line">-t, --no-create-info <span class="comment">#只备份数据,不备份表结构,即不备份create table </span></span><br><span class="line">-n,--no-create-db <span class="comment">#不备份create database，可被-A或-B覆盖</span></span><br><span class="line">--flush-privileges <span class="comment">#备份mysql或相关时需要使用</span></span><br><span class="line">-f, --force       <span class="comment">#忽略SQL错误，继续执行</span></span><br><span class="line">--hex-blob        <span class="comment">#使用十六进制符号转储二进制列，当有包括BINARY， VARBINARY，BLOB，BIT的数据类型的列时使用，避免乱码</span></span><br><span class="line">-q, --quick     <span class="comment">#不缓存查询，直接输出，加快备份速度</span></span><br></pre></td></tr></table></figure><p>mysqldump的MyISAM存储引擎相关的备份选项：</p><p>MyISAM不支持事务，只能支持温备；不支持热备，所以必须先锁定要备份的库，而后启动备份操作</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-x,--lock-all-tables <span class="comment"># 加全局读锁，锁定所有库的所有表，同时加--single-transaction或--lock-tables选项会关闭此选项功能，注意：数据量大时，可能会导致长时间无法并发访问数据库</span></span><br><span class="line">-l,--lock-tables <span class="comment"># 对于需要备份的每个数据库，在启动备份之前分别锁定其所有表，默认为on,--skip-lock-tables选项可禁用,对备份MyISAM的多个库,可能会造成数据不一致</span></span><br><span class="line"><span class="comment"># 注：以上选项对InnoDB存储的表一样生效，实现温备，但不推荐使用</span></span><br></pre></td></tr></table></figure><p>mysqldump的InnoDB存储引擎相关的备份选项： </p><p>InnoDB 存储引擎支持事务,可以利用事务的相应的隔离级别,实现热备，也可以实现温备但不建议用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">--single-transaction</span><br><span class="line"><span class="comment"># 此选项Innodb中推荐使用，不适用MyISAM，此选项会开始备份前，先执行START TRANSACTION指令开启事务</span></span><br><span class="line"><span class="comment"># 此选项通过在单个事务中转储所有表来创建一致的快照。 仅适用于存储在支持多版本控制的存储引擎中的表（目前只有InnoDB可以）; 转储不保证与其他存储引擎保持一致。 在进行单事务转储时，要确保有效的转储文件（正确的表内容和二进制日志位置），没有其他连接应该使用</span></span><br><span class="line"></span><br><span class="line">以下语句：ALTER TABLE，DROP TABLE，RENAME TABLE，TRUNCATE TABLE,此选项和--lock-tables（此选项隐含提交挂起的事务）选项是相互排斥,备份大型表时，建议将--single-transaction选项和--quick结合一起使用</span><br></pre></td></tr></table></figure><h2 id="生产环境实战备份策略（只是建议）"><a href="#生产环境实战备份策略（只是建议）" class="headerlink" title="生产环境实战备份策略（只是建议）"></a>生产环境实战备份策略（只是建议）</h2><ul><li>InnoDB建议备份策略</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这里的用户我用的root，你们在生产可以换成有备份权限的用户就好了</span></span><br><span class="line">mysqldump -uroot -p -A -F -E -R --triggers --single-transaction --master-data=1 --flush-privileges --default-character-set=utf8 --hex-blob&gt;<span class="variable">$&#123;BACKUP&#125;</span>/fullbak_<span class="variable">$&#123;BACKUP_TIME&#125;</span>.sql</span><br></pre></td></tr></table></figure><ul><li>MyISAM建议备份策略</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysqldump -uroot -p -A -F -E -R -x --master-data=1 --flush-privileges  --triggers  --default-character-set=utf8  --hex-blob&gt;<span class="variable">$&#123;BACKUP&#125;</span>/fullbak_<span class="variable">$&#123;BACKUP_TIME&#125;</span>.sql</span><br></pre></td></tr></table></figure><h2 id="利用mysqldump备份的脚本"><a href="#利用mysqldump备份的脚本" class="headerlink" title="利用mysqldump备份的脚本"></a>利用mysqldump备份的脚本</h2><ul><li>备份指定数据库脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ vim mysql_backup.sh</span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line">TIME=`<span class="built_in">date</span> +%F_%H_%M_%S`</span><br><span class="line">DIR=/data/backup</span><br><span class="line">DB=xxx <span class="comment"># 这里填写你要备份的数据库名</span></span><br><span class="line">PASSWORD=xxxx <span class="comment"># 这里填写你备份数据库的用户密码</span></span><br><span class="line"></span><br><span class="line">[ -d <span class="variable">$DIR</span> ] || <span class="built_in">mkdir</span> <span class="variable">$DIR</span></span><br><span class="line">mysqldump -uroot -p <span class="string">&quot;<span class="variable">$PASSWORD</span>&quot;</span> -F -E -R --triggers --single-transaction --master-data=2 --default-character-set=utf8 -q -B <span class="variable">$DB</span> | gzip &gt; <span class="variable">$&#123;DIR&#125;</span>/<span class="variable">$&#123;DB&#125;</span>_<span class="variable">$&#123;TIME&#125;</span>.sql.gz</span><br></pre></td></tr></table></figure><ul><li>备份除去系统库的数据库脚本</li></ul><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ vim backup_db.sh </span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">TIME=`<span class="built_in">date</span> +%F_%H-%M-%S`</span><br><span class="line">DIR=/data/backup</span><br><span class="line">PASSWORD=xxxx</span><br><span class="line"></span><br><span class="line">[ -d <span class="string">&quot;<span class="variable">$DIR</span>&quot;</span> ] || <span class="built_in">mkdir</span> <span class="variable">$DIR</span></span><br><span class="line"><span class="keyword">for</span> DB <span class="keyword">in</span> `mysql -uroot -p <span class="string">&quot;<span class="variable">$PASSWORD</span>&quot;</span> -e <span class="string">&#x27;show databases&#x27;</span> | grep -Ev <span class="string">&quot;^Database|.*schema$&quot;</span>`;<span class="keyword">do</span></span><br><span class="line">    mysqldump -F --single-transaction --master-data=2 --default-character-set=utf8 -q -B <span class="variable">$DB</span> | gzip &gt;  <span class="variable">$&#123;DIR&#125;</span>/<span class="variable">$&#123;DB&#125;</span>_<span class="variable">$&#123;TIME&#125;</span>.sql.gz</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="实现恢复误删除的表"><a href="#实现恢复误删除的表" class="headerlink" title="实现恢复误删除的表"></a>实现恢复误删除的表</h2><p>下面情况是在自己的测试环境中实现的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#完全备份</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mysqldump -uroot -pwm521314 -A -F --single-transaction --master-data=2 | gzip &gt; /data/backup/all-`date +%F`.sql.gz</span></span><br><span class="line">root@ubuntu:~<span class="comment"># ll /data/backup/</span></span><br><span class="line">total 200</span><br><span class="line">-rw-r--r-- 1 root root 193953 Feb 19 10:38 all-2022-02-19.sql.gz</span><br><span class="line"></span><br><span class="line"><span class="comment">#完全备份后数据更新</span></span><br><span class="line">mysql&gt; use hellodb</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">mysql&gt; insert students (name,age,gender) values(<span class="string">&#x27;xiaohong&#x27;</span>,20,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert students (name,age,gender) values(<span class="string">&#x27;xiaoyuan&#x27;</span>,25,<span class="string">&#x27;M&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#误删一个重要的表</span></span><br><span class="line">mysql&gt; drop table students;</span><br><span class="line">Query OK, 0 rows affected (0.02 sec)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#后续其他表在继续更新</span></span><br><span class="line">mysql&gt; insert teachers (name,age,gender) values(<span class="string">&#x27;zhang&#x27;</span>,22,<span class="string">&#x27;M&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert teachers (name,age,gender) values(<span class="string">&#x27;wang&#x27;</span>,20,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from teachers;</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">| TID | Name          | Age | Gender |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">|   1 | Song Jiang    |  45 | M      |</span><br><span class="line">|   2 | Zhang Sanfeng |  94 | M      |</span><br><span class="line">|   3 | Miejue Shitai |  77 | F      |</span><br><span class="line">|   4 | Lin Chaoying  |  93 | F      |</span><br><span class="line">|   5 | zhang         |  22 | M      |</span><br><span class="line">|   6 | wang          |  20 | F      |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#后面发现表被删除，进行还原，先停止数据库访问</span></span><br><span class="line">root@ubuntu:~<span class="comment"># systemctl stop mysql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#从完全备份中，找到二进制位置</span></span><br><span class="line">root@ubuntu:~<span class="comment"># grep &#x27;\-\- CHANGE MASTER TO&#x27; /data/backup/all-2022-02-19.sql </span></span><br><span class="line">-- CHANGE MASTER TO MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000004&#x27;</span>, MASTER_LOG_POS=154;</span><br><span class="line"></span><br><span class="line"><span class="comment">#备份从完全备份后的二进制日志</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mysqlbinlog --start-position=154 /var/log/mysql/mysql-bin.000003 &gt; /data/backup/inc.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#找到误删除的语句，从备份中删除此语句</span></span><br><span class="line">root@ubuntu:~<span class="comment"># vim /data/backup/inc.sql</span></span><br><span class="line"><span class="comment">#DROP TABLE `student_info` /* generated by server */</span></span><br><span class="line"><span class="comment">#如果文件过大，可以使用sed实现</span></span><br><span class="line">root@ubuntu:~<span class="comment"># sed -i.bak &#x27;/^DROP TABLE/d&#x27; /data/backup/inc.sql</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#利用完全备份和修改过的二进制日志进行还原</span></span><br><span class="line">root@ubuntu:~<span class="comment"># mysql -uroot -p</span></span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">set</span> sql_log_bin=0;</span><br><span class="line">mysql&gt; <span class="built_in">source</span> /data/backup/all-2022-02-19.sql;</span><br><span class="line">mysql&gt; <span class="built_in">source</span> /data/backup/inc.sql</span><br><span class="line">mysql&gt; <span class="built_in">set</span> sql_log_bin=1;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 完成操作后删除的表就恢复回来了</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MHA高可用架构</title>
      <link href="/post/f318704d.html"/>
      <url>/post/f318704d.html</url>
      
        <content type="html"><![CDATA[<h1 id="MHA-Master-High-Availability"><a href="#MHA-Master-High-Availability" class="headerlink" title="MHA(Master High Availability)"></a>MHA(Master High Availability)</h1><p><img src="/images/MHA.png"></p><h2 id="在管理节点上安装两个包mha4mysql-manager和mha4mysql-node并实现所有节点基于ssh-key验证"><a href="#在管理节点上安装两个包mha4mysql-manager和mha4mysql-node并实现所有节点基于ssh-key验证" class="headerlink" title="在管理节点上安装两个包mha4mysql-manager和mha4mysql-node并实现所有节点基于ssh key验证"></a>在管理节点上安装两个包mha4mysql-manager和mha4mysql-node并实现所有节点基于ssh key验证</h2><p>下面是下载两个包的路径<br><a href="https://github.com/yoshinorim/mha4mysql-manager/releases">https://github.com/yoshinorim/mha4mysql-manager/releases</a><br><a href="https://github.com/yoshinorim/mha4mysql-node/releases/tag/v0.58">https://github.com/yoshinorim/mha4mysql-node/releases/tag/v0.58</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">[root@mha-manager ~]<span class="comment"># wget https://github.com/yoshinorim/mha4mysql-manager/releases/download/v0.58/mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># wget https://github.com/yoshinorim/mha4mysql-node/releases/download/v0.58/mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># yum -y install mha4mysql-manager-0.58-0.el7.centos.noarch.rpm</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># yum -y install mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># vim ssh_key_for_linux.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">COLOR=<span class="string">&quot;echo -e \E[1;32m&quot;</span></span><br><span class="line">END=<span class="string">&quot;\E[0m&quot;</span></span><br><span class="line"></span><br><span class="line">PASSWORD=wm521314</span><br><span class="line"></span><br><span class="line">IPLIST=<span class="string">&quot;</span></span><br><span class="line"><span class="string">10.0.0.8</span></span><br><span class="line"><span class="string">10.0.0.18</span></span><br><span class="line"><span class="string">10.0.0.28</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line">[ ! -f ~/.ssh/id_rsa ] &amp;&amp; ssh-keygen -P <span class="string">&quot;&quot;</span> -f ~/.ssh/id_rsa &amp;&gt;/dev/null</span><br><span class="line">yum -y install expect &amp;&gt;/dev/null</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> <span class="variable">$IPLIST</span> ;<span class="keyword">do</span></span><br><span class="line">&#123;    </span><br><span class="line">expect &lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">set timeout 60</span></span><br><span class="line"><span class="string">spawn ssh-copy-id $ip </span></span><br><span class="line"><span class="string">expect &#123;</span></span><br><span class="line"><span class="string">        &quot;yes/no&quot; &#123; send &quot;yes\r&quot;;exp_continue &#125;</span></span><br><span class="line"><span class="string">        &quot;password:&quot;  &#123; send &quot;$PASSWORD\r&quot; &#125;</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">expect eof</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="variable">$COLOR</span><span class="string">&quot;<span class="variable">$ip</span> is  ready&quot;</span><span class="variable">$END</span></span><br><span class="line">&#125;&amp;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"><span class="built_in">wait</span></span><br><span class="line"><span class="variable">$COLOR</span><span class="string">&quot;Push ssh key is finished!&quot;</span><span class="variable">$END</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># bash ssh_key_for_linux.sh</span></span><br></pre></td></tr></table></figure><h2 id="在所有的MySQL服务器上安装mha4mysql-node包"><a href="#在所有的MySQL服务器上安装mha4mysql-node包" class="headerlink" title="在所有的MySQL服务器上安装mha4mysql-node包"></a>在所有的MySQL服务器上安装mha4mysql-node包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@Master ~]<span class="comment"># yum -y install mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span></span><br><span class="line">[root@Slave1 ~]<span class="comment"># yum -y install mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span></span><br><span class="line">[root@Slave2 ~]<span class="comment"># yum -y install mha4mysql-node-0.58-0.el7.centos.noarch.rpm</span></span><br></pre></td></tr></table></figure><h2 id="在管理节点上建立配置文件"><a href="#在管理节点上建立配置文件" class="headerlink" title="在管理节点上建立配置文件"></a>在管理节点上建立配置文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">[root@mha-manager ~]<span class="comment"># mkdir /etc/mastermha</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># vim /etc/mastermha/app1.cnf</span></span><br><span class="line">[server default]             </span><br><span class="line">user=mhauser    <span class="comment">#用于远程连接MySQL所有节点的用户,需要有管理员的权限</span></span><br><span class="line">password=zxcvbnm</span><br><span class="line">manager_workdir=/data/mastermha/app1/    <span class="comment">#目录会自动生成,无需手动创建</span></span><br><span class="line">manager_log=/data/mastermha/app1/manager.log</span><br><span class="line">remote_workdir=/data/mastermha/app1/</span><br><span class="line">ssh_user=root</span><br><span class="line">repl_user=repluser</span><br><span class="line">repl_password=zxcvbnm</span><br><span class="line">ping_interval=1    <span class="comment">#健康性检查的时间间隔</span></span><br><span class="line">master_ip_failover_script=/usr/local/bin/master_ip_failover    <span class="comment">#切换VIP的perl脚本</span></span><br><span class="line">report_script=/usr/local/bin/sendmail.sh     <span class="comment">#当执行报警脚本</span></span><br><span class="line">check_repl_delay=0    <span class="comment">#默认值为1,表示如果slave中从库落后主库relay log超过100M，主库不会选</span></span><br><span class="line">择这个从库为新的master，因为这个从库进行恢复需要很长的时间.通过设置参数check_repl_delay=0，</span><br><span class="line">mha触发主从切换时会忽略复制的延时，对于设置candidate_master=1的从库非常有用，这样确保这个从库</span><br><span class="line">一定能成为最新的master</span><br><span class="line">master_binlog_dir=/var/log/mysql/</span><br><span class="line">[server1]</span><br><span class="line">hostname=10.0.0.8</span><br><span class="line">candidate_master=1</span><br><span class="line">[server2]</span><br><span class="line">hostname=10.0.0.18</span><br><span class="line">candidate_master=1    <span class="comment">#设置为优先候选master，即使不是集群中事件最新的slave,也会优先当</span></span><br><span class="line">[server3]</span><br><span class="line">hostname=10.0.0.28</span><br></pre></td></tr></table></figure><h2 id="相关文件"><a href="#相关文件" class="headerlink" title="相关文件"></a>相关文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br></pre></td><td class="code"><pre><span class="line">[root@mha-manager ~]<span class="comment"># vim /etc/mail.rc</span></span><br><span class="line"><span class="built_in">set</span> from=1916829748@qq.com</span><br><span class="line"><span class="built_in">set</span> smtp=smtp.qq.com</span><br><span class="line"><span class="built_in">set</span> smtp-auth-user=1916829748@qq.com</span><br><span class="line"><span class="built_in">set</span> smtp-auth-password= <span class="comment"># 这里填写自己邮箱的客户端密码</span></span><br><span class="line"><span class="built_in">set</span> smtp-auth=login</span><br><span class="line"><span class="built_in">set</span> ssl-verify=ignore</span><br><span class="line"></span><br><span class="line">[root@mha-manager ~]<span class="comment"># vim /usr/local/bin/sendmail.sh</span></span><br><span class="line"><span class="comment">#!/bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;MySQL is down&quot;</span> | mail -s <span class="string">&quot;MHA Warning&quot;</span> 1916829748@qq.com</span><br><span class="line">[root@mha-manager ~]<span class="comment"># chmod +x /usr/local/bin/sendmail.sh</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># vim /usr/local/bin/master_ip_failover</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env perl</span></span><br><span class="line">use strict;</span><br><span class="line">use warnings FATAL =&gt; <span class="string">&#x27;all&#x27;</span>;</span><br><span class="line">use Getopt::Long;</span><br><span class="line">my (</span><br><span class="line"><span class="variable">$command</span>, <span class="variable">$ssh_user</span>, <span class="variable">$orig_master_host</span>, <span class="variable">$orig_master_ip</span>,</span><br><span class="line"><span class="variable">$orig_master_port</span>, <span class="variable">$new_master_host</span>, <span class="variable">$new_master_ip</span>, <span class="variable">$new_master_port</span></span><br><span class="line">);</span><br><span class="line">my <span class="variable">$vip</span> = <span class="string">&#x27;10.0.0.100/24&#x27;</span>;<span class="comment">#设置Virtual IP</span></span><br><span class="line">my <span class="variable">$gateway</span> = <span class="string">&#x27;10.0.0.2&#x27;</span>;<span class="comment">#网关Gateway IP</span></span><br><span class="line">my <span class="variable">$interface</span> = <span class="string">&#x27;eth0&#x27;</span>;<span class="comment">#指定VIP所在网卡</span></span><br><span class="line">my <span class="variable">$key</span> = <span class="string">&quot;1&quot;</span>;</span><br><span class="line">my <span class="variable">$ssh_start_vip</span> = <span class="string">&quot;/sbin/ifconfig <span class="variable">$interface</span>:<span class="variable">$key</span> <span class="variable">$vip</span>;/sbin/arping -I <span class="variable">$interface</span> -c 3 -s <span class="variable">$vip</span> <span class="variable">$gateway</span> &gt;/dev/null 2&gt;&amp;1&quot;</span>;</span><br><span class="line">my <span class="variable">$ssh_stop_vip</span> = <span class="string">&quot;/sbin/ifconfig <span class="variable">$interface</span>:<span class="variable">$key</span> down&quot;</span>;</span><br><span class="line">GetOptions(</span><br><span class="line"><span class="string">&#x27;command=s&#x27;</span> =&gt; \<span class="variable">$command</span>,</span><br><span class="line"><span class="string">&#x27;ssh_user=s&#x27;</span> =&gt; \<span class="variable">$ssh_user</span>,</span><br><span class="line"><span class="string">&#x27;orig_master_host=s&#x27;</span> =&gt; \<span class="variable">$orig_master_host</span>,</span><br><span class="line"><span class="string">&#x27;orig_master_ip=s&#x27;</span> =&gt; \<span class="variable">$orig_master_ip</span>,</span><br><span class="line"><span class="string">&#x27;orig_master_port=i&#x27;</span> =&gt; \<span class="variable">$orig_master_port</span>,</span><br><span class="line"><span class="string">&#x27;new_master_host=s&#x27;</span> =&gt; \<span class="variable">$new_master_host</span>,</span><br><span class="line"><span class="string">&#x27;new_master_ip=s&#x27;</span> =&gt; \<span class="variable">$new_master_ip</span>,</span><br><span class="line"><span class="string">&#x27;new_master_port=i&#x27;</span> =&gt; \<span class="variable">$new_master_port</span>,</span><br><span class="line">);</span><br><span class="line"><span class="built_in">exit</span> &amp;main();</span><br><span class="line">sub main &#123;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;\n\nIN SCRIPT TEST====<span class="variable">$ssh_stop_vip</span>==<span class="variable">$ssh_start_vip</span>===\n\n&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> ( <span class="variable">$command</span> eq <span class="string">&quot;stop&quot;</span> || <span class="variable">$command</span> eq <span class="string">&quot;stopssh&quot;</span> ) &#123;</span><br><span class="line">my <span class="variable">$exit_code</span> = 1;</span><br><span class="line"><span class="built_in">eval</span> &#123;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Disabling the VIP on old master: <span class="variable">$orig_master_host</span> \n&quot;</span>;</span><br><span class="line">&amp;stop_vip();</span><br><span class="line"><span class="variable">$exit_code</span> = 0;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$@</span>) &#123;</span><br><span class="line">warn <span class="string">&quot;Got Error: <span class="variable">$@</span>\n&quot;</span>;</span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$exit_code</span>; &#125;</span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$exit_code</span>; &#125;</span><br><span class="line">elsif ( <span class="variable">$command</span> eq <span class="string">&quot;start&quot;</span> ) &#123;</span><br><span class="line">my <span class="variable">$exit_code</span> = 10;</span><br><span class="line"><span class="built_in">eval</span> &#123;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Enabling the VIP - <span class="variable">$vip</span> on the new master - <span class="variable">$new_master_host</span> \n&quot;</span>;</span><br><span class="line">&amp;start_vip();</span><br><span class="line"><span class="variable">$exit_code</span> = 0;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$@</span>) &#123;</span><br><span class="line">warn <span class="variable">$@</span>;</span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$exit_code</span>; &#125;</span><br><span class="line"><span class="built_in">exit</span> <span class="variable">$exit_code</span>; &#125;</span><br><span class="line">elsif ( <span class="variable">$command</span> eq <span class="string">&quot;status&quot;</span> ) &#123;</span><br><span class="line"><span class="built_in">print</span> <span class="string">&quot;Checking the Status of the script.. OK \n&quot;</span>;</span><br><span class="line">`ssh <span class="variable">$ssh_user</span>\@<span class="variable">$orig_master_host</span> \&quot; <span class="variable">$ssh_start_vip</span> \&quot;`;</span><br><span class="line"><span class="built_in">exit</span> 0; &#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">&amp;usage();</span><br><span class="line"><span class="built_in">exit</span> 1; &#125;&#125;</span><br><span class="line"><span class="comment"># A simple system call that enable the VIP on the new master</span></span><br><span class="line">sub <span class="function"><span class="title">start_vip</span></span>() &#123;</span><br><span class="line">`ssh <span class="variable">$ssh_user</span>\@<span class="variable">$new_master_host</span> \&quot; <span class="variable">$ssh_start_vip</span> \&quot;`;</span><br><span class="line">&#125;</span><br><span class="line">sub <span class="function"><span class="title">stop_vip</span></span>() &#123;</span><br><span class="line">`ssh <span class="variable">$ssh_user</span>\@<span class="variable">$orig_master_host</span> \&quot; <span class="variable">$ssh_stop_vip</span> \&quot;`; &#125;</span><br><span class="line">sub usage &#123;</span><br><span class="line"><span class="built_in">print</span></span><br><span class="line"><span class="string">&quot;Usage: master_ip_failover --command=start|stop|stopssh|status --</span></span><br><span class="line"><span class="string">orig_master_host=host --orig_master_ip=ip --orig_master_port=port --</span></span><br><span class="line"><span class="string">new_master_host=host --new_master_ip=ip --new_master_port=port\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">[root@mha-manager ~]<span class="comment"># chmod +x /usr/local/bin/master_ip_failover</span></span><br></pre></td></tr></table></figure><h2 id="实现Master"><a href="#实现Master" class="headerlink" title="实现Master"></a>实现Master</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@Master ~]<span class="comment"># yum install -y mysql-server</span></span><br><span class="line">[root@Master ~]<span class="comment"># vim /etc/my.cnf.d/mysql-server.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">general_log_file = /var/log/mysql/mysql.log</span><br><span class="line">general_log = 1</span><br><span class="line">log_error = /var/log/mysql/error.log</span><br><span class="line">slow_query_log = 1</span><br><span class="line">slow_query_log_file = /var/log/mysql/mysql-slow.log</span><br><span class="line">long_query_time = 2</span><br><span class="line">log-queries-not-using-indexes</span><br><span class="line">server-id = 8</span><br><span class="line">log_bin = /var/log/mysql/mysql-bin.log</span><br><span class="line">expire_logs_days = 10</span><br><span class="line">max_binlog_size = 100M</span><br><span class="line">sync_binlog = 1</span><br><span class="line">binlog_cache_size = 4m</span><br><span class="line">max_binlog_cache_size = 512m</span><br><span class="line">[root@Master ~]<span class="comment">#systemctl enable --now mysqld</span></span><br><span class="line"></span><br><span class="line">mysql&gt; show master logs;</span><br><span class="line">+------------------+-----------+-----------+</span><br><span class="line">| Log_name         | File_size | Encrypted |</span><br><span class="line">+------------------+-----------+-----------+</span><br><span class="line">| mysql-bin.000001 |       369 | No        |</span><br><span class="line">| mysql-bin.000002 |       156 | No        |</span><br><span class="line">+------------------+-----------+-----------+</span><br><span class="line">2 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create user repluser@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;zxcvbnm&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant replication slave on *.* to repluser@<span class="string">&#x27;10.0.0.%&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; create user mhauser@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;zxcvbnm&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; grant all on *.* to mhauser@<span class="string">&#x27;10.0.0.%&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">[root@Master ~]<span class="comment"># ifconfig eth0:1 10.0.0.100/24    #创建VIP,也就是虚拟IP</span></span><br></pre></td></tr></table></figure><h2 id="实现Slave"><a href="#实现Slave" class="headerlink" title="实现Slave"></a>实现Slave</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">[root@Slave1 ~]<span class="comment"># yum install -y mysql-server</span></span><br><span class="line">[root@Slave1 ~]<span class="comment"># vim /etc/my.cnf.d/mysql-server.cnf</span></span><br><span class="line">character-set-server=utf8mb4</span><br><span class="line">server-id = 18</span><br><span class="line">log_bin = /var/log/mysql/mysql-bin.log</span><br><span class="line">read_only</span><br><span class="line">relay_log_purge=0</span><br><span class="line">skip_name_resolve=1</span><br><span class="line">expire_logs_days = 10</span><br><span class="line">max_binlog_size = 100M</span><br><span class="line">sync_binlog = 1</span><br><span class="line">binlog_cache_size = 4m</span><br><span class="line">max_binlog_cache_size = 512m</span><br><span class="line">general_log_file = /var/log/mysql/mysql.log</span><br><span class="line">general_log = 1</span><br><span class="line">[root@Slave1 ~]<span class="comment"># systemctl enable --now mysqld</span></span><br><span class="line"></span><br><span class="line">mysql&gt; CHANGE MASTER TO</span><br><span class="line">    -&gt; MASTER_HOST=<span class="string">&#x27;10.0.0.8&#x27;</span>,</span><br><span class="line">    -&gt; MASTER_USER=<span class="string">&#x27;repluser&#x27;</span>, </span><br><span class="line">    -&gt; MASTER_PASSWORD=<span class="string">&#x27;zxcvbnm&#x27;</span>, </span><br><span class="line">    -&gt; MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000002&#x27;</span>, </span><br><span class="line">    -&gt; MASTER_LOG_POS=156;</span><br><span class="line">Query OK, 0 rows affected, 8 warnings (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> <span class="built_in">source</span> to send event</span><br><span class="line">                  Master_Host: 10.0.0.8</span><br><span class="line">                  Master_User: repluser</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000002</span><br><span class="line">          Read_Master_Log_Pos: 1368</span><br><span class="line">               Relay_Log_File: Slave1-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 1536</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000002</span><br><span class="line">             Slave_IO_Running: Yes</span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 1368</span><br><span class="line">              Relay_Log_Space: 1746</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 8</span><br><span class="line">                  Master_UUID: d10eff23-49b4-11ec-b409-000c294b4125</span><br><span class="line">             Master_Info_File: mysql.slave_master_info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Replica has <span class="built_in">read</span> all relay <span class="built_in">log</span>; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: </span><br><span class="line">            Executed_Gtid_Set: </span><br><span class="line">                Auto_Position: 0</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">       Master_public_key_path: </span><br><span class="line">        Get_master_public_key: 0</span><br><span class="line">            Network_Namespace: </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span>, 1 warning (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#另外一台slave也按照这样配置一下就好了，不过要稍微改改配置文件server-id要改一下,server-id是要独立的</span></span><br></pre></td></tr></table></figure><h2 id="检查MHA的环境是否正常"><a href="#检查MHA的环境是否正常" class="headerlink" title="检查MHA的环境是否正常"></a>检查MHA的环境是否正常</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#检查环境</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># masterha_check_ssh --conf=/etc/mastermha/app1.cnf</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># masterha_check_repl --conf=/etc/mastermha/app1.cnf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># masterha_check_status --conf=/etc/mastermha/app1.cnf</span></span><br></pre></td></tr></table></figure><h2 id="启动MHA"><a href="#启动MHA" class="headerlink" title="启动MHA"></a>启动MHA</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#开启MHA,默认是前台运行,生产环境一般为后台执行</span></span><br><span class="line"><span class="built_in">nohup</span> masterha_manager --conf=/etc/mastermha/app1.cnf &amp;&gt; /dev/null </span><br><span class="line"></span><br><span class="line"><span class="comment">#查看状态</span></span><br><span class="line">masterha_check_status --conf=/etc/mastermha/app1.cnf</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">[root@mha-manager ~]<span class="comment"># masterha_manager --conf=/etc/mastermha/app1.cnf</span></span><br><span class="line">Wed Feb 16 20:17:33 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Wed Feb 16 20:17:33 2022 - [info] Reading application default configuration from /etc/mastermha/app1.cnf..</span><br><span class="line">Wed Feb 16 20:17:33 2022 - [info] Reading server configuration from /etc/mastermha/app1.cnf..</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看健康性检查</span></span><br><span class="line">[root@Master ~]<span class="comment"># tail -f /var/log/mysql/mysql.log</span></span><br><span class="line">2022-02-16T12:17:53.640912Z       23 QuerySELECT 1 As Value</span><br><span class="line">2022-02-16T12:17:54.641870Z       23 QuerySELECT 1 As Value</span><br><span class="line">2022-02-16T12:17:55.643530Z       23 QuerySELECT 1 As Value</span><br><span class="line">2022-02-16T12:17:56.644661Z       23 QuerySELECT 1 As Value</span><br><span class="line">2022-02-16T12:17:57.643412Z       23 QuerySELECT 1 As Value</span><br><span class="line">2022-02-16T12:17:58.644043Z       23 QuerySELECT 1 As Value</span><br><span class="line">2022-02-16T12:17:59.645780Z       23 QuerySELECT 1 As Value</span><br><span class="line">2022-02-16T12:18:00.647018Z       23 QuerySELECT 1 As Value</span><br></pre></td></tr></table></figure><h2 id="查看排错日志"><a href="#查看排错日志" class="headerlink" title="查看排错日志"></a>查看排错日志</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@Master ~]<span class="comment"># tail /data/mastermha/app1/manager.log</span></span><br></pre></td></tr></table></figure><h2 id="自己手动模拟主节点故障，查看MHA的状态"><a href="#自己手动模拟主节点故障，查看MHA的状态" class="headerlink" title="自己手动模拟主节点故障，查看MHA的状态"></a>自己手动模拟主节点故障，查看MHA的状态</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">[root@Master ~]<span class="comment"># systemctl stop mysqld</span></span><br><span class="line"><span class="comment">#当master down机后，MHA管理程序会自动退出</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># masterha_manager --conf=/etc/mastermha/app1.cnf</span></span><br><span class="line">Wed Feb 16 20:17:33 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Wed Feb 16 20:17:33 2022 - [info] Reading application default configuration from /etc/mastermha/app1.cnf..</span><br><span class="line">Wed Feb 16 20:17:33 2022 - [info] Reading server configuration from /etc/mastermha/app1.cnf..</span><br><span class="line">  Creating /data/mastermha/app1 <span class="keyword">if</span> not exists..    ok.</span><br><span class="line">  Checking output directory is accessible or not..</span><br><span class="line">   ok.</span><br><span class="line">  Binlog found at /var/log/mysql/, up to mysql-bin.000002</span><br><span class="line">Wed Feb 16 20:39:27 2022 - [warning] Global configuration file /etc/masterha_default.cnf not found. Skipping.</span><br><span class="line">Wed Feb 16 20:39:27 2022 - [info] Reading application default configuration from /etc/mastermha/app1.cnf..</span><br><span class="line">Wed Feb 16 20:39:27 2022 - [info] Reading server configuration from /etc/mastermha/app1.cnf..</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看MHA的日志，是怎么自动吧一个从节点变成新主的</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># more /data/mastermha/app1/manager.log</span></span><br><span class="line">[root@mha-manager ~]<span class="comment"># masterha_check_status --conf=/etc/mastermha/app1.cnf</span></span><br><span class="line">app1 is stopped(2:NOT_RUNNING).</span><br><span class="line"></span><br><span class="line"><span class="comment">#验证VIP漂移至新的Master上</span></span><br><span class="line">[root@Slave1 ~]<span class="comment"># ip a</span></span><br><span class="line">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class="line">    inet 127.0.0.1/8 scope host lo</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet6 ::1/128 scope host </span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc fq_codel state UP group default qlen 1000</span><br><span class="line">    <span class="built_in">link</span>/ether 00:0c:29:ed:15:c7 brd ff:ff:ff:ff:ff:ff</span><br><span class="line">    inet 10.0.0.18/24 brd 10.0.0.255 scope global noprefixroute eth0</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br><span class="line">    inet 10.0.0.100/24 brd 10.0.0.255 scope global secondary eth0:1</span><br><span class="line">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure><h2 id="如果再次运行MHA-需要先删除下面文件"><a href="#如果再次运行MHA-需要先删除下面文件" class="headerlink" title="如果再次运行MHA,需要先删除下面文件"></a>如果再次运行MHA,需要先删除下面文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root@mha-manager ~]<span class="comment"># ls /data/mastermha/app1/app1.failover.complete -l</span></span><br><span class="line">-rw-r--r-- 1 root root 0 Aug 29 21:28 /data/mastermha/app1//app1.failover.complete</span><br><span class="line">[root@mha-manager ~]<span class="comment"># rm -f /data/mastermha/app1/app1.failover.complete</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mycat实现MySQL的读写分离</title>
      <link href="/post/46c42c1.html"/>
      <url>/post/46c42c1.html</url>
      
        <content type="html"><![CDATA[<h1 id="利用Mycat工具实现MySQL的读写分离"><a href="#利用Mycat工具实现MySQL的读写分离" class="headerlink" title="利用Mycat工具实现MySQL的读写分离"></a>利用Mycat工具实现MySQL的读写分离</h1><p><img src="/images/mycat.png"></p><h2 id="首先实现主从复制"><a href="#首先实现主从复制" class="headerlink" title="首先实现主从复制"></a>首先实现主从复制</h2><h3 id="主节点配置"><a href="#主节点配置" class="headerlink" title="主节点配置"></a>主节点配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#验证selinux和防火墙是否关闭</span></span><br><span class="line">[root@master ~]<span class="comment"># systemctl status firewalld.service </span></span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line">[root@master ~]<span class="comment"># getenforce </span></span><br><span class="line">Disabled</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装mariadb-server</span></span><br><span class="line">[root@master ~]<span class="comment"># yum -y install mariadb-server</span></span><br><span class="line">[root@master ~]<span class="comment"># systemctl enable --now mariadb    #设置开机自启动并立即启动。</span></span><br><span class="line">[root@master ~]<span class="comment"># vim /etc/my.cnf.d/mariadb-server.cnf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在配置文件加上下面两行</span></span><br><span class="line">[mysqld]</span><br><span class="line">server-id=18</span><br><span class="line">log_bin=mysql_bin</span><br><span class="line"></span><br><span class="line">[root@master ~]<span class="comment"># systemctl restart mariadb    </span></span><br><span class="line">[root@master ~]<span class="comment"># systemctl status mysqld</span></span><br><span class="line">[root@master ~]<span class="comment"># mysql    #root默认是没有密码的，我这也就没去设置了，不过为了安全还是的设置的。</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection <span class="built_in">id</span> is 9</span><br><span class="line">Server version: 10.3.28-MariaDB-<span class="built_in">log</span> MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show master logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql_bin.000001 |       328 |    <span class="comment">#这行数据要保存好，等下从节点配置要用</span></span><br><span class="line">+------------------+-----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建复制账号并验证复制账号</span></span><br><span class="line">MariaDB [(none)]&gt; grant replication slave on *.* to repluser@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;wm521314&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.002 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; <span class="keyword">select</span> distinct concat(<span class="string">&#x27;User:&#x27;</span><span class="string">&#x27;&#x27;</span>,user,<span class="string">&#x27;&#x27;</span><span class="string">&#x27;@&#x27;</span><span class="string">&#x27;&#x27;</span>,host,<span class="string">&#x27;&#x27;</span><span class="string">&#x27;;&#x27;</span>) as user_info from mysql.user;</span><br><span class="line">+-----------------------------+</span><br><span class="line">| user_info                   |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| User:<span class="string">&#x27;repluser&#x27;</span>@<span class="string">&#x27;10.0.0.%&#x27;</span>; |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;127.0.0.1&#x27;</span>;    |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;::1&#x27;</span>;          |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;    |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;master&#x27;</span>;       |</span><br><span class="line">+-----------------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |<span class="built_in">exit</span></span><br><span class="line">+--------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#导入实验的hellodb库到服务器上</span></span><br><span class="line">[root@master ~]<span class="comment">#ls</span></span><br><span class="line">anaconda-ks.cfg  hellodb_innodb.sql</span><br><span class="line"></span><br><span class="line"><span class="comment">#这一步要等从节点的配置完后再导入hellodb数据库，并在从节点验证数据</span></span><br><span class="line">[root@master ~]<span class="comment"># mysql &lt; hellodb_innodb.sql </span></span><br><span class="line"></span><br><span class="line"><span class="comment">#创建用户并对mycat并授权</span></span><br><span class="line">MariaDB [(none)]&gt; grant all on *.* to <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;123456&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.001 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; <span class="keyword">select</span> distinct concat(<span class="string">&#x27;User:&#x27;</span><span class="string">&#x27;&#x27;</span>,user,<span class="string">&#x27;&#x27;</span><span class="string">&#x27;@&#x27;</span><span class="string">&#x27;&#x27;</span>,host,<span class="string">&#x27;&#x27;</span><span class="string">&#x27;;&#x27;</span>) as user_info from mysql.user;</span><br><span class="line">+-----------------------------+</span><br><span class="line">| user_info                   |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| User:<span class="string">&#x27;repluser&#x27;</span>@<span class="string">&#x27;10.0.0.%&#x27;</span>; |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;10.0.0.%&#x27;</span>;     |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;127.0.0.1&#x27;</span>;    |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;::1&#x27;</span>;          |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;    |</span><br><span class="line">| User:<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;master&#x27;</span>;       |</span><br><span class="line">+-----------------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.000 sec)</span><br></pre></td></tr></table></figure><h3 id="从节点配置"><a href="#从节点配置" class="headerlink" title="从节点配置"></a>从节点配置</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#验证selinux和防火墙是否开启</span></span><br><span class="line">[root@slave ~]<span class="comment"># systemctl status firewalld.service </span></span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line">[root@slave ~]<span class="comment"># getenforce </span></span><br><span class="line">Disabled</span><br><span class="line"></span><br><span class="line"><span class="comment">#安装mariadb-server</span></span><br><span class="line">[root@slave ~]<span class="comment"># yum -y install mariadb-server</span></span><br><span class="line">[root@slave ~]<span class="comment"># systemctl enable --now mariadb</span></span><br><span class="line">[root@slave ~]<span class="comment"># vim /etc/my.cnf.d/mariadb-server.cnf</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#在配置文件加上下面两行</span></span><br><span class="line">[mysqld]</span><br><span class="line">server-id=28</span><br><span class="line">[root@slave ~]<span class="comment"># systemctl restart mariadb</span></span><br><span class="line">[root@slave ~]<span class="comment"># systemctl status mariadb</span></span><br><span class="line">● mariadb.service - MariaDB 10.3 database server</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/mariadb.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Mon 2022-01-26 18:16:52 CST; 18s ago</span><br><span class="line">     Docs: man:mysqld(8)</span><br><span class="line">           https://mariadb.com/kb/en/library/systemd/</span><br><span class="line">  Process: 28606 ExecStartPost=/usr/libexec/mysql-check-upgrade (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 28471 ExecStartPre=/usr/libexec/mysql-prepare-db-dir mariadb.service (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 28447 ExecStartPre=/usr/libexec/mysql-check-socket (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 28574 (mysqld)</span><br><span class="line">   Status: <span class="string">&quot;Taking your SQL requests now...&quot;</span></span><br><span class="line">    Tasks: 30 (<span class="built_in">limit</span>: 4764)</span><br><span class="line">   Memory: 81.5M</span><br><span class="line">   CGroup: /system.slice/mariadb.service</span><br><span class="line">           └─28574 /usr/libexec/mysqld --basedir=/usr</span><br><span class="line"></span><br><span class="line">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: See the MariaDB Knowledgebase at http://mariadb.com/kb or the</span><br><span class="line">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: MySQL manual <span class="keyword">for</span> more instructions.</span><br><span class="line">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: Please report any problems at http://mariadb.org/jira</span><br><span class="line">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: The latest information about MariaDB is available at http://mar&gt;</span><br><span class="line">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: You can find additional information about the MySQL part at:</span><br><span class="line">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: http://dev.mysql.com</span><br><span class="line">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: Consider joining MariaDB<span class="string">&#x27;s strong and vibrant community:</span></span><br><span class="line"><span class="string">Jan 26 18:16:52 slave mysql-prepare-db-dir[28471]: https://mariadb.org/get-involved/</span></span><br><span class="line"><span class="string">Jan 26 18:16:52 slave mysqld[28574]: 2022-03-14 18:16:52 0 [Note] /usr/libexec/mysqld (mysqld 10.3.28-MariaDB) sta&gt;</span></span><br><span class="line"><span class="string">Jan 26 18:16:52 slave systemd[1]: Started MariaDB 10.3 database server.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"># 进入数据库配置复制，并验证数据</span></span><br><span class="line"><span class="string">MariaDB [(none)]&gt; CHANGE MASTER to</span></span><br><span class="line"><span class="string">    -&gt; MASTER_HOST=&#x27;</span>10.0.0.18<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    -&gt; MASTER_USER=&#x27;</span>repluser<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    -&gt; MASTER_PASSWORD=&#x27;</span>wm521314<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    -&gt; MASTER_PORT=3306,</span></span><br><span class="line"><span class="string">    -&gt; MASTER_LOG_FILE=&#x27;</span>mysql_bin.000001<span class="string">&#x27;,</span></span><br><span class="line"><span class="string">    -&gt; MASTER_LOG_POS=328;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.004 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MariaDB [(none)]&gt; start slave;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.001 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MariaDB [(none)]&gt; show slave status\G</span></span><br><span class="line"><span class="string">*************************** 1. row ***************************</span></span><br><span class="line"><span class="string">                Slave_IO_State: Waiting for master to send event</span></span><br><span class="line"><span class="string">                   Master_Host: 10.0.0.18</span></span><br><span class="line"><span class="string">                   Master_User: repluser</span></span><br><span class="line"><span class="string">                   Master_Port: 3306</span></span><br><span class="line"><span class="string">                 Connect_Retry: 60</span></span><br><span class="line"><span class="string">               Master_Log_File: mysql_bin.000001</span></span><br><span class="line"><span class="string">           Read_Master_Log_Pos: 527</span></span><br><span class="line"><span class="string">                Relay_Log_File: mariadb-relay-bin.000002</span></span><br><span class="line"><span class="string">                 Relay_Log_Pos: 754</span></span><br><span class="line"><span class="string">         Relay_Master_Log_File: mysql_bin.000001</span></span><br><span class="line"><span class="string">              Slave_IO_Running: Yes</span></span><br><span class="line"><span class="string">             Slave_SQL_Running: Yes</span></span><br><span class="line"><span class="string">               Replicate_Do_DB: </span></span><br><span class="line"><span class="string">           Replicate_Ignore_DB: </span></span><br><span class="line"><span class="string">            Replicate_Do_Table: </span></span><br><span class="line"><span class="string">        Replicate_Ignore_Table: </span></span><br><span class="line"><span class="string">       Replicate_Wild_Do_Table: </span></span><br><span class="line"><span class="string">   Replicate_Wild_Ignore_Table: </span></span><br><span class="line"><span class="string">                    Last_Errno: 0</span></span><br><span class="line"><span class="string">                    Last_Error: </span></span><br><span class="line"><span class="string">                  Skip_Counter: 0</span></span><br><span class="line"><span class="string">           Exec_Master_Log_Pos: 527</span></span><br><span class="line"><span class="string">               Relay_Log_Space: 1065</span></span><br><span class="line"><span class="string">               Until_Condition: None</span></span><br><span class="line"><span class="string">                Until_Log_File: </span></span><br><span class="line"><span class="string">                 Until_Log_Pos: 0</span></span><br><span class="line"><span class="string">            Master_SSL_Allowed: No</span></span><br><span class="line"><span class="string">            Master_SSL_CA_File: </span></span><br><span class="line"><span class="string">            Master_SSL_CA_Path: </span></span><br><span class="line"><span class="string">               Master_SSL_Cert: </span></span><br><span class="line"><span class="string">             Master_SSL_Cipher: </span></span><br><span class="line"><span class="string">                Master_SSL_Key: </span></span><br><span class="line"><span class="string">         Seconds_Behind_Master: 0</span></span><br><span class="line"><span class="string"> Master_SSL_Verify_Server_Cert: No</span></span><br><span class="line"><span class="string">                 Last_IO_Errno: 0</span></span><br><span class="line"><span class="string">                 Last_IO_Error: </span></span><br><span class="line"><span class="string">                Last_SQL_Errno: 0</span></span><br><span class="line"><span class="string">                Last_SQL_Error: </span></span><br><span class="line"><span class="string">   Replicate_Ignore_Server_Ids: </span></span><br><span class="line"><span class="string">              Master_Server_Id: 18</span></span><br><span class="line"><span class="string">                Master_SSL_Crl: </span></span><br><span class="line"><span class="string">            Master_SSL_Crlpath: </span></span><br><span class="line"><span class="string">                    Using_Gtid: No</span></span><br><span class="line"><span class="string">                   Gtid_IO_Pos: </span></span><br><span class="line"><span class="string">       Replicate_Do_Domain_Ids: </span></span><br><span class="line"><span class="string">   Replicate_Ignore_Domain_Ids: </span></span><br><span class="line"><span class="string">                 Parallel_Mode: conservative</span></span><br><span class="line"><span class="string">                     SQL_Delay: 0</span></span><br><span class="line"><span class="string">           SQL_Remaining_Delay: NULL</span></span><br><span class="line"><span class="string">       Slave_SQL_Running_State: Slave has read all relay log; waiting for the slave I/O thread to update it</span></span><br><span class="line"><span class="string">              Slave_DDL_Groups: 1</span></span><br><span class="line"><span class="string">Slave_Non_Transactional_Groups: 0</span></span><br><span class="line"><span class="string">    Slave_Transactional_Groups: 0</span></span><br><span class="line"><span class="string">1 row in set (0.000 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#这时在主节点上导入hellodb数据库，并验证是否复制成功</span></span><br><span class="line"><span class="string">MariaDB [(none)]&gt; show databases;</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| Database           |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">| hellodb            |</span></span><br><span class="line"><span class="string">| information_schema |</span></span><br><span class="line"><span class="string">| mysql              |</span></span><br><span class="line"><span class="string">| performance_schema |</span></span><br><span class="line"><span class="string">+--------------------+</span></span><br><span class="line"><span class="string">4 rows in set (0.001 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#当到上面结果表示成功复制了</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#创建用户并对mycat并授权</span></span><br><span class="line"><span class="string">MariaDB [(none)]&gt; grant all on *.* to &#x27;</span>root<span class="string">&#x27;@&#x27;</span>10.0.0.%<span class="string">&#x27; identified by &#x27;</span>123456<span class="string">&#x27;;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.000 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MariaDB [(none)]&gt; flush privileges;</span></span><br><span class="line"><span class="string">Query OK, 0 rows affected (0.000 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MariaDB [(none)]&gt; select distinct concat(&#x27;</span>User:<span class="string">&#x27;&#x27;</span><span class="string">&#x27;,user,&#x27;</span><span class="string">&#x27;&#x27;</span>@<span class="string">&#x27;&#x27;</span><span class="string">&#x27;,host,&#x27;</span><span class="string">&#x27;&#x27;</span>;<span class="string">&#x27;) as user_info from mysql.user;</span></span><br><span class="line"><span class="string">+-----------------------------+</span></span><br><span class="line"><span class="string">| user_info                   |</span></span><br><span class="line"><span class="string">+-----------------------------+</span></span><br><span class="line"><span class="string">| User:&#x27;</span>repluser<span class="string">&#x27;@&#x27;</span>10.0.0.%<span class="string">&#x27;; |</span></span><br><span class="line"><span class="string">| User:&#x27;</span>root<span class="string">&#x27;@&#x27;</span>10.0.0.%<span class="string">&#x27;;     |</span></span><br><span class="line"><span class="string">| User:&#x27;</span>root<span class="string">&#x27;@&#x27;</span>127.0.0.1<span class="string">&#x27;;    |</span></span><br><span class="line"><span class="string">| User:&#x27;</span>root<span class="string">&#x27;@&#x27;</span>::1<span class="string">&#x27;;          |</span></span><br><span class="line"><span class="string">| User:&#x27;</span>root<span class="string">&#x27;@&#x27;</span>localhost<span class="string">&#x27;;    |</span></span><br><span class="line"><span class="string">| User:&#x27;</span>root<span class="string">&#x27;@&#x27;</span>slave<span class="string">&#x27;;        |</span></span><br><span class="line"><span class="string">+-----------------------------+</span></span><br><span class="line"><span class="string">6 rows in set (0.001 sec)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#到这两台主从复制的服务器就配置好了</span></span><br></pre></td></tr></table></figure><h2 id="Mycat代理的配置"><a href="#Mycat代理的配置" class="headerlink" title="Mycat代理的配置"></a>Mycat代理的配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#查看selinux和防火墙是否开启</span></span><br><span class="line">[root@mycat ~]<span class="comment"># systemctl status firewalld.service </span></span><br><span class="line">● firewalld.service - firewalld - dynamic firewall daemon</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/firewalld.service; disabled; vendor preset: enabled)</span><br><span class="line">   Active: inactive (dead)</span><br><span class="line">     Docs: man:firewalld(1)</span><br><span class="line">[root@mycat ~]<span class="comment"># getenforce </span></span><br><span class="line">Disabled</span><br><span class="line"></span><br><span class="line"><span class="comment"># Mycat是基于java开发出来的一个工具，所以要装上java的环境</span></span><br><span class="line">[root@mycat ~]<span class="comment"># yum -y install java</span></span><br><span class="line">[root@mycat ~]<span class="comment"># java -version</span></span><br><span class="line">openjdk version <span class="string">&quot;1.8.0_312&quot;</span></span><br><span class="line">OpenJDK Runtime Environment (build 1.8.0_312-b07)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 25.312-b07, mixed mode)</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载Mycat-server并安装</span></span><br><span class="line">[root@mycat ~]<span class="comment"># wget http://dl.mycat.org.cn/1.6.7.6/20220221174943/Mycat-server-1.6.7.6-release-20220221174943-linux.tar.gz</span></span><br><span class="line">--2022-01-26 18:34:33--  http://dl.mycat.org.cn/1.6.7.6/20220221174943/Mycat-server-1.6.7.6-release-20220221174943-linux.tar.gz</span><br><span class="line">Resolving dl.mycat.org.cn (dl.mycat.org.cn)... 210.51.26.184</span><br><span class="line">Connecting to dl.mycat.org.cn (dl.mycat.org.cn)|210.51.26.184|:80... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 27568092 (26M) [application/octet-stream]</span><br><span class="line">Saving to: ‘Mycat-server-1.6.7.6-release-20220221174943-linux.tar.gz’</span><br><span class="line"></span><br><span class="line">Mycat-server-1.6.7.6-release-20220221174943-linux.t 100%[===================================================================================================================&gt;]  26.29M  3.06MB/s    <span class="keyword">in</span> 7.8s    </span><br><span class="line"></span><br><span class="line">2022-01-26 18:34:41 (3.36 MB/s) - ‘Mycat-server-1.6.7.6-release-20220221174943-linux.tar.gz’ saved [27568092/27568092]</span><br><span class="line"></span><br><span class="line">[root@mycat ~]<span class="comment"># mkdir /apps</span></span><br><span class="line">[root@mycat ~]<span class="comment"># tar xvf Mycat-server-1.6.7.6-release-20220221174943-linux.tar.gz -C /apps/</span></span><br><span class="line"><span class="comment">#查看刚刚解压的文件</span></span><br><span class="line">[root@mycat ~]<span class="comment">#ls /apps/mycat/</span></span><br><span class="line">bin catlet conf lib logs version.txt</span><br><span class="line">[root@mycat ~]<span class="comment"># tree /apps/</span></span><br><span class="line">/apps/</span><br><span class="line">└── mycat</span><br><span class="line">    ├── bin</span><br><span class="line">    │   ├── dataMigrate.sh</span><br><span class="line">    │   ├── init_zk_data.sh</span><br><span class="line">    │   ├── mycat</span><br><span class="line">    │   ├── rehash.sh</span><br><span class="line">    │   ├── startup_nowrap.sh</span><br><span class="line">    │   ├── wrapper-linux-ppc-64</span><br><span class="line">    │   ├── wrapper-linux-x86-32</span><br><span class="line">    │   └── wrapper-linux-x86-64</span><br><span class="line">    ├── catlet</span><br><span class="line">    ├── conf</span><br><span class="line">    │   ├── autopartition-long.txt</span><br><span class="line">    │   ├── auto-sharding-long.txt</span><br><span class="line">    │   ├── auto-sharding-rang-mod.txt</span><br><span class="line">    │   ├── cacheservice.properties</span><br><span class="line">    │   ├── dbseq.sql</span><br><span class="line">    │   ├── dbseq - utf8mb4.sql</span><br><span class="line">    │   ├── ehcache.xml</span><br><span class="line">    │   ├── index_to_charset.properties</span><br><span class="line">    │   ├── log4j2.xml</span><br><span class="line">    │   ├── migrateTables.properties</span><br><span class="line">    │   ├── myid.properties</span><br><span class="line">    │   ├── partition-hash-int.txt</span><br><span class="line">    │   ├── partition-range-mod.txt</span><br><span class="line">    │   ├── rule.xml</span><br><span class="line">    │   ├── schema.xml</span><br><span class="line">    │   ├── sequence_conf.properties</span><br><span class="line">    │   ├── sequence_db_conf.properties</span><br><span class="line">    │   ├── sequence_distributed_conf.properties</span><br><span class="line">    │   ├── sequence_http_conf.properties</span><br><span class="line">    │   ├── sequence_time_conf.properties</span><br><span class="line">    │   ├── server.xml</span><br><span class="line">    │   ├── sharding-by-enum.txt</span><br><span class="line">    │   ├── wrapper.conf</span><br><span class="line">    │   ├── zkconf</span><br><span class="line">    │   │   ├── autopartition-long.txt</span><br><span class="line">    │   │   ├── auto-sharding-long.txt</span><br><span class="line">    │   │   ├── auto-sharding-rang-mod.txt</span><br><span class="line">    │   │   ├── cacheservice.properties</span><br><span class="line">    │   │   ├── ehcache.xml</span><br><span class="line">    │   │   ├── index_to_charset.properties</span><br><span class="line">    │   │   ├── partition-hash-int.txt</span><br><span class="line">    │   │   ├── partition-range-mod.txt</span><br><span class="line">    │   │   ├── rule.xml</span><br><span class="line">    │   │   ├── schema.xml</span><br><span class="line">    │   │   ├── sequence_conf.properties</span><br><span class="line">    │   │   ├── sequence_db_conf.properties</span><br><span class="line">    │   │   ├── sequence_distributed_conf-mycat_fz_01.properties</span><br><span class="line">    │   │   ├── sequence_distributed_conf.properties</span><br><span class="line">    │   │   ├── sequence_time_conf-mycat_fz_01.properties</span><br><span class="line">    │   │   ├── sequence_time_conf.properties</span><br><span class="line">    │   │   ├── server-mycat_fz_01.xml</span><br><span class="line">    │   │   ├── server.xml</span><br><span class="line">    │   │   └── sharding-by-enum.txt</span><br><span class="line">    │   └── zkdownload</span><br><span class="line">    │       └── auto-sharding-long.txt</span><br><span class="line">    ├── lib</span><br><span class="line">    │   ├── annotations-13.0.jar</span><br><span class="line">    │   ├── asm-4.0.jar</span><br><span class="line">    │   ├── checker-qual-2.10.0.jar</span><br><span class="line">    │   ├── commons-cli-1.2.jar</span><br><span class="line">    │   ├── commons-collections-3.2.1.jar</span><br><span class="line">    │   ├── commons-csv-1.8.jar</span><br><span class="line">    │   ├── commons-lang-2.6.jar</span><br><span class="line">    │   ├── curator-client-4.0.1.jar</span><br><span class="line">    │   ├── curator-framework-4.0.1.jar</span><br><span class="line">    │   ├── curator-recipes-4.0.1.jar</span><br><span class="line">    │   ├── disruptor-3.3.4.jar</span><br><span class="line">    │   ├── dom4j-1.6.1.jar</span><br><span class="line">    │   ├── druid-1.2.6.jar</span><br><span class="line">    │   ├── ehcache-core-2.6.11.jar</span><br><span class="line">    │   ├── error_prone_annotations-2.3.4.jar</span><br><span class="line">    │   ├── failureaccess-1.0.1.jar</span><br><span class="line">    │   ├── fastjson-1.2.68.jar</span><br><span class="line">    │   ├── guava-28.2-jre.jar</span><br><span class="line">    │   ├── hamcrest-core-1.3.jar</span><br><span class="line">    │   ├── hamcrest-library-1.3.jar</span><br><span class="line">    │   ├── j2objc-annotations-1.3.jar</span><br><span class="line">    │   ├── joda-time-2.9.3.jar</span><br><span class="line">    │   ├── jsr305-2.0.3.jar</span><br><span class="line">    │   ├── kotlin-stdlib-1.3.50.jar</span><br><span class="line">    │   ├── kotlin-stdlib-common-1.3.50.jar</span><br><span class="line">    │   ├── kryo-2.10.jar</span><br><span class="line">    │   ├── leveldb-0.7.jar</span><br><span class="line">    │   ├── leveldb-api-0.7.jar</span><br><span class="line">    │   ├── libwrapper-linux-ppc-64.so</span><br><span class="line">    │   ├── libwrapper-linux-x86-32.so</span><br><span class="line">    │   ├── libwrapper-linux-x86-64.so</span><br><span class="line">    │   ├── listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar</span><br><span class="line">    │   ├── log4j-1.2.17.jar</span><br><span class="line">    │   ├── log4j-1.2-api-2.17.0.jar</span><br><span class="line">    │   ├── log4j-api-2.17.0.jar</span><br><span class="line">    │   ├── log4j-core-2.17.1.jar</span><br><span class="line">    │   ├── log4j-slf4j-impl-2.17.0.jar</span><br><span class="line">    │   ├── mapdb-1.0.7.jar</span><br><span class="line">    │   ├── minlog-1.2.jar</span><br><span class="line">    │   ├── mongo-java-driver-3.11.0.jar</span><br><span class="line">    │   ├── Mycat-server-1.6.7.6-release.jar</span><br><span class="line">    │   ├── mysql-binlog-connector-java-0.16.1.jar</span><br><span class="line">    │   ├── mysql-connector-java-5.1.35.jar</span><br><span class="line">    │   ├── netty-3.10.5.Final.jar</span><br><span class="line">    │   ├── netty-buffer-4.1.9.Final.jar</span><br><span class="line">    │   ├── netty-common-4.1.9.Final.jar</span><br><span class="line">    │   ├── objenesis-1.2.jar</span><br><span class="line">    │   ├── okhttp-4.2.2.jar</span><br><span class="line">    │   ├── okio-2.2.2.jar</span><br><span class="line">    │   ├── reflectasm-1.03.jar</span><br><span class="line">    │   ├── sequoiadb-driver-1.12.jar</span><br><span class="line">    │   ├── slf4j-api-1.6.1.jar</span><br><span class="line">    │   ├── univocity-parsers-2.8.4.jar</span><br><span class="line">    │   ├── velocity-1.7.jar</span><br><span class="line">    │   ├── wrapper.jar</span><br><span class="line">    │   └── zookeeper-3.5.3-beta.jar</span><br><span class="line">    ├── logs</span><br><span class="line">    └── version.txt</span><br><span class="line"></span><br><span class="line">8 directories, 108 files</span><br><span class="line"><span class="comment">#配置环境变量</span></span><br><span class="line">[root@mycat ~]<span class="comment"># echo &#x27;PATH=/apps/mycat/bin:$PATH&#x27; &gt; /etc/profile.d/mycat.sh</span></span><br><span class="line">[root@mycat ~]<span class="comment"># source /etc/profile.d/mycat.sh</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#启动mycat</span></span><br><span class="line">[root@mycat ~]<span class="comment"># file /apps/mycat/bin/mycat </span></span><br><span class="line">/apps/mycat/bin/mycat: POSIX shell script, ASCII text executable</span><br><span class="line">[root@mycat ~]<span class="comment"># mycat </span></span><br><span class="line">Usage: /apps/mycat/bin/mycat &#123; console | start | stop | restart | status | dump &#125;</span><br><span class="line"><span class="comment">#注意: 此步启动较慢,需要等一会儿,另外如果内存太小,会导致无法启动</span></span><br><span class="line">[root@mycat ~]<span class="comment"># mycat start</span></span><br><span class="line">Starting Mycat-server...</span><br><span class="line"><span class="comment">#可以看到打开多个端口,其中8066端口用于连接MyCAT，8066端口是默认端口，一般在生产环境会改成3306。</span></span><br><span class="line">[root@mycat ~]<span class="comment"># ss -tnlp</span></span><br><span class="line">State     Recv-Q    Send-Q       Local Address:Port         Peer Address:Port    Process                                                                                                                        </span><br><span class="line">LISTEN    0         1                127.0.0.1:32000             0.0.0.0:*        <span class="built_in">users</span>:((&quot;java&quot;,pid=<span class="number">1629</span>,fd=<span class="number">4</span>))                                                                                                </span><br><span class="line">LISTEN    0         80                 0.0.0.0:3306              0.0.0.0:*        <span class="built_in">users</span>:((&quot;mysqld&quot;,pid=<span class="number">1037</span>,fd=<span class="number">30</span>))                                                                                             </span><br><span class="line">LISTEN    0         128                0.0.0.0:80                0.0.0.0:*        <span class="built_in">users</span>:((&quot;nginx&quot;,pid=<span class="number">989</span>,fd=<span class="number">9</span>),(&quot;nginx&quot;,pid=<span class="number">988</span>,fd=<span class="number">9</span>),(&quot;nginx&quot;,pid=<span class="number">987</span>,fd=<span class="number">9</span>),(&quot;nginx&quot;,pid=<span class="number">985</span>,fd=<span class="number">9</span>),(&quot;nginx&quot;,pid=<span class="number">980</span>,fd=<span class="number">9</span>))    </span><br><span class="line">LISTEN    0         128                0.0.0.0:22                0.0.0.0:*        <span class="built_in">users</span>:((&quot;sshd&quot;,pid=<span class="number">864</span>,fd=<span class="number">4</span>))                                                                                                 </span><br><span class="line">LISTEN    0         50                       *:36379                   *:*        <span class="built_in">users</span>:((&quot;java&quot;,pid=<span class="number">1629</span>,fd=<span class="number">74</span>))                                                                                               </span><br><span class="line">LISTEN    0         50                       *:1984                    *:*        <span class="built_in">users</span>:((&quot;java&quot;,pid=<span class="number">1629</span>,fd=<span class="number">73</span>))                                                                                               </span><br><span class="line">LISTEN    0         128                      *:8066                    *:*        <span class="built_in">users</span>:((&quot;java&quot;,pid=<span class="number">1629</span>,fd=<span class="number">103</span>))                                                                                              </span><br><span class="line">LISTEN    0         128                      *:9066                    *:*        <span class="built_in">users</span>:((&quot;java&quot;,pid=<span class="number">1629</span>,fd=<span class="number">99</span>))                                                                                               </span><br><span class="line">LISTEN    0         50                       *:46549                   *:*        <span class="built_in">users</span>:((&quot;java&quot;,pid=<span class="number">1629</span>,fd=<span class="number">72</span>))                                                                                               </span><br><span class="line">LISTEN    0         128                   [::]:22                   [::]:*        <span class="built_in">users</span>:((&quot;sshd&quot;,pid=<span class="number">864</span>,fd=<span class="number">6</span>))                                                                                                                                                             </span><br></pre></td></tr></table></figure><h2 id="在客户端上测试"><a href="#在客户端上测试" class="headerlink" title="在客户端上测试"></a>在客户端上测试</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@client ~]<span class="comment"># mysql -uroot -p123456 -h 10.0.0.8 -P8066</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 1</span><br><span class="line">Server version: 5.6.29-mycat-1.6.7.6-release-20210303094759 MyCat Server (OpenCloudDB)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; show databases;</span><br><span class="line">+----------+</span><br><span class="line">| DATABASE |</span><br><span class="line">+----------+</span><br><span class="line">| TESTDB   |</span><br><span class="line">+----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.003 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#看到上面的数据就是测试默认配置是否正常</span></span><br></pre></td></tr></table></figure><h2 id="修改mycat服务器上的配置文件来实现读写分离"><a href="#修改mycat服务器上的配置文件来实现读写分离" class="headerlink" title="修改mycat服务器上的配置文件来实现读写分离"></a>修改mycat服务器上的配置文件来实现读写分离</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br></pre></td><td class="code"><pre><span class="line">[root@mycat ~]<span class="comment"># cp /apps/mycat/conf/server.xml /apps/mycat/conf/server.xml.bak</span></span><br><span class="line">[root@mycat ~]<span class="comment"># ll /apps/mycat/conf/</span></span><br><span class="line">total 116</span><br><span class="line">-rwxrwxrwx 1 root root   92 Jul  1  2020  autopartition-long.txt</span><br><span class="line">-rwxrwxrwx 1 root root   51 Jul  1  2020  auto-sharding-long.txt</span><br><span class="line">-rwxrwxrwx 1 root root   67 Jul  1  2020  auto-sharding-rang-mod.txt</span><br><span class="line">-rwxrwxrwx 1 root root  340 Jul  1  2020  cacheservice.properties</span><br><span class="line">-rwxrwxrwx 1 root root 3338 Jul  1  2020  dbseq.sql</span><br><span class="line">-rwxrwxrwx 1 root root 3532 Jul  1  2020 <span class="string">&#x27;dbseq - utf8mb4.sql&#x27;</span></span><br><span class="line">-rwxrwxrwx 1 root root  446 Jul  1  2020  ehcache.xml</span><br><span class="line">-rwxrwxrwx 1 root root 2454 Jul  1  2020  index_to_charset.properties</span><br><span class="line">-rwxrwxrwx 1 root root 1285 Apr 15  2020  log4j2.xml</span><br><span class="line">-rwxrwxrwx 1 root root  183 Jul  1  2020  migrateTables.properties</span><br><span class="line">-rwxrwxrwx 1 root root  271 Jul  1  2020  myid.properties</span><br><span class="line">-rwxrwxrwx 1 root root   16 Jul  1  2020  partition-hash-int.txt</span><br><span class="line">-rwxrwxrwx 1 root root  108 Jun  4  2021  partition-range-mod.txt</span><br><span class="line">-rwxrwxrwx 1 root root 5423 Jan  7 13:28  rule.xml</span><br><span class="line">-rwxrwxrwx 1 root root 3302 Feb 21 17:49  schema.xml</span><br><span class="line">-rwxrwxrwx 1 root root  440 Jul  1  2020  sequence_conf.properties</span><br><span class="line">-rwxrwxrwx 1 root root   79 Nov  2  2020  sequence_db_conf.properties</span><br><span class="line">-rwxrwxrwx 1 root root   29 Jul  1  2020  sequence_distributed_conf.properties</span><br><span class="line">-rwxrwxrwx 1 root root   28 Sep 16 15:13  sequence_http_conf.properties</span><br><span class="line">-rwxrwxrwx 1 root root   53 Jul  1  2020  sequence_time_conf.properties</span><br><span class="line">-rwxrwxrwx 1 root root 6442 Feb 21 17:49  server.xml</span><br><span class="line">-rwxr-xr-x 1 root root 6442 Mar 15 12:27  server.xml.bak</span><br><span class="line">-rwxrwxrwx 1 root root   18 Jul  1  2020  sharding-by-enum.txt</span><br><span class="line">-rwxrwxrwx 1 root root 4251 Feb 21 17:50  wrapper.conf</span><br><span class="line">drwxrwxrwx 2 root root 4096 Jan 26 18:45  zkconf</span><br><span class="line">drwxrwxrwx 2 root root   36 Jan 26 18:45  zkdownload</span><br><span class="line"></span><br><span class="line"><span class="comment">#修改/apps/mycat/conf/server.xml文件</span></span><br><span class="line">[root@mycat ~]<span class="comment"># cat /apps/mycat/conf/server.xml</span></span><br><span class="line">&lt;property name=<span class="string">&quot;serverPort&quot;</span>&gt;3306&lt;/property&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;managerPort&quot;</span>&gt;9066&lt;/property&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;idleTimeout&quot;</span>&gt;300000&lt;/property&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;authTimeout&quot;</span>&gt;15000&lt;/property&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;bindIp&quot;</span>&gt;0.0.0.0&lt;/property&gt;</span><br><span class="line">            &lt;property name=<span class="string">&quot;dataNodeIdleCheckPeriod&quot;</span>&gt;300000&lt;/property&gt;                                             </span><br><span class="line">            &lt;property name=<span class="string">&quot;frontWriteQueueSize&quot;</span>&gt;4096&lt;/property&gt; &lt;property name=<span class="string">&quot;processors&quot;</span>&gt;32&lt;/property&gt; --&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;handleDistributedTransactions&quot;</span>&gt;0&lt;/property&gt;</span><br><span class="line"></span><br><span class="line">&lt;user name=<span class="string">&quot;test&quot;</span> defaultAccount=<span class="string">&quot;true&quot;</span>&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;password&quot;</span>&gt;test1234&lt;/property&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;schemas&quot;</span>&gt;TESTDB&lt;/property&gt;</span><br><span class="line">        &lt;property name=<span class="string">&quot;defaultSchema&quot;</span>&gt;TESTDB&lt;/property&gt;</span><br><span class="line"><span class="comment">#这个文件就改这些地方，其他地方不用改</span></span><br><span class="line"><span class="comment">#修改/apps/mycat/conf/schema.xml文件来实现读写分离</span></span><br><span class="line">[root@mycat ~]<span class="comment"># cp /apps/mycat/conf/schema.xml /apps/mycat/conf/schema.xml.bak</span></span><br><span class="line">[root@mycat ~]<span class="comment"># cat /apps/mycat/conf/schema.xml</span></span><br><span class="line">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span><br><span class="line">&lt;!DOCTYPE mycat:schema SYSTEM <span class="string">&quot;schema.dtd&quot;</span>&gt;</span><br><span class="line">&lt;mycat:schema xmlns:mycat=<span class="string">&quot;http://io.mycat/&quot;</span>&gt;</span><br><span class="line">        &lt;schema name=<span class="string">&quot;TESTDB&quot;</span> checkSQLschema=<span class="string">&quot;false&quot;</span> sqlMaxLimit=<span class="string">&quot;100&quot;</span> dataNode=<span class="string">&quot;dn1&quot;</span>&gt;</span><br><span class="line">        &lt;/schema&gt;</span><br><span class="line">        &lt;dataNode name=<span class="string">&quot;dn1&quot;</span> dataHost=<span class="string">&quot;localhost1&quot;</span> database=<span class="string">&quot;hellodb&quot;</span> /&gt;</span><br><span class="line">        &lt;dataHost name=<span class="string">&quot;localhost1&quot;</span> maxCon=<span class="string">&quot;1000&quot;</span> minCon=<span class="string">&quot;10&quot;</span> balance=<span class="string">&quot;1&quot;</span></span><br><span class="line">                          writeType=<span class="string">&quot;0&quot;</span> dbType=<span class="string">&quot;mysql&quot;</span> dbDriver=<span class="string">&quot;native&quot;</span> switchType=<span class="string">&quot;1&quot;</span>  slaveThreshold=<span class="string">&quot;100&quot;</span>&gt;</span><br><span class="line">                &lt;heartbeat&gt;<span class="keyword">select</span> user()&lt;/heartbeat&gt;</span><br><span class="line">                &lt;writeHost host=<span class="string">&quot;hostM1&quot;</span> url=<span class="string">&quot;10.0.0.18:3306&quot;</span> user=<span class="string">&quot;root&quot;</span></span><br><span class="line">                                   password=<span class="string">&quot;123456&quot;</span>&gt;</span><br><span class="line">                            &lt;readHost host=<span class="string">&quot;hostM2&quot;</span> url=<span class="string">&quot;10.0.0.28:3306&quot;</span> user=<span class="string">&quot;root&quot;</span> password=<span class="string">&quot;123456&quot;</span> /&gt;                                                                                                                       &lt;/writeHost&gt;</span><br><span class="line">        &lt;/dataHost&gt;</span><br><span class="line">&lt;/mycat:schema&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment">#配置完后重启一下mycat</span></span><br><span class="line">[root@mycat ~]<span class="comment"># mycat restart</span></span><br><span class="line">[root@mycat ~]<span class="comment"># ss -tnl</span></span><br><span class="line">State                   Recv-Q                   Send-Q                                     Local Address:Port                                      Peer Address:Port                  Process                  </span><br><span class="line">LISTEN                  0                        1                                              127.0.0.1:32000                                          0.0.0.0:*                                              </span><br><span class="line">LISTEN                  0                        128                                              0.0.0.0:80                                             0.0.0.0:*                                              </span><br><span class="line">LISTEN                  0                        128                                              0.0.0.0:22                                             0.0.0.0:*                                              </span><br><span class="line">LISTEN                  0                        50                                                     *:1984                                                 *:*                                              </span><br><span class="line">LISTEN                  0                        128                                                    *:3306                                                 *:*                                              </span><br><span class="line">LISTEN                  0                        128                                                    *:9066                                                 *:*                                              </span><br><span class="line">LISTEN                  0                        50                                                     *:37163                                                *:*                                              </span><br><span class="line">LISTEN                  0                        50                                                     *:36813                                                *:*                                              </span><br><span class="line">LISTEN                  0                        128                                                 [::]:22                                                [::]:*                                                    </span><br><span class="line">[root@mycat ~]<span class="comment">#tail -6 /apps/mycat/logs/wrapper.log </span></span><br><span class="line">STATUS | wrapper  | 2022/01/26 18:53:41 | --&gt; Wrapper Started as Daemon</span><br><span class="line">STATUS | wrapper  | 2022/01/26 18:53:41 | Launching a JVM...</span><br><span class="line">INFO   | jvm 1    | 2022/01/26 18:53:41 | Wrapper (Version 3.2.3) http://wrapper.tanukisoftware.org</span><br><span class="line">INFO   | jvm 1    | 2022/01/26 18:53:41 |   Copyright 1999-2006 Tanuki Software, Inc.  All Rights Reserved.</span><br><span class="line">INFO   | jvm 1    | 2022/01/26 18:53:41 | </span><br><span class="line">INFO   | jvm 1    | 2022/01/26 18:53:42 | MyCAT Server startup successfully. see logs <span class="keyword">in</span> logs/mycat.log</span><br><span class="line"></span><br><span class="line"><span class="comment">#到此我们就通过MyCat实现了MariaDB数据库的读写分离</span></span><br></pre></td></tr></table></figure><h2 id="通过通用日志来确认是否实现读写分离"><a href="#通过通用日志来确认是否实现读写分离" class="headerlink" title="通过通用日志来确认是否实现读写分离"></a>通过通用日志来确认是否实现读写分离</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在主和从服务器分别启用通用日志，查看读写分离</span></span><br><span class="line">[root@master ~]<span class="comment"># vim /etc/my.cnf.d/mariadb-server.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">general_log=ON <span class="comment">#开启通用日志</span></span><br><span class="line">[root@master ~]<span class="comment"># systemctl restart mariadb.service </span></span><br><span class="line">[root@slave ~]<span class="comment"># vim /etc/my.cnf.d/mariadb-server.cnf</span></span><br><span class="line">[mysqld]</span><br><span class="line">general_log=ON <span class="comment">#开启通用日志</span></span><br><span class="line">[root@slave ~]<span class="comment"># systemctl restart mariadb.service</span></span><br><span class="line">[root@master ~]<span class="comment"># ll /var/lib/mysql/</span></span><br><span class="line">total 122940</span><br><span class="line">-rw-rw---- 1 mysql mysql    16384 Jan 26 19:04 aria_log.00000001</span><br><span class="line">-rw-rw---- 1 mysql mysql       52 Jan 26 19:04 aria_log_control</span><br><span class="line">drwx------ 2 mysql mysql      272 Jan 26 18:39 hellodb</span><br><span class="line">-rw-rw---- 1 mysql mysql     1300 Jan 26 19:04 ib_buffer_pool</span><br><span class="line">-rw-rw---- 1 mysql mysql 12582912 Jan 26 19:04 ibdata1</span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Jan 26 19:04 ib_logfile0</span><br><span class="line">-rw-rw---- 1 mysql mysql 50331648 Jan 26 18:30 ib_logfile1</span><br><span class="line">-rw-rw---- 1 mysql mysql 12582912 Jan 26 19:04 ibtmp1</span><br><span class="line">-rw-rw---- 1 mysql mysql     6962 Jan 26 19:21 master.log</span><br><span class="line">-rw-rw---- 1 mysql mysql        0 Jan 26 18:30 multi-master.info</span><br><span class="line">drwx------ 2 mysql mysql       20 Jan 26 18:55 mycat</span><br><span class="line">drwx------ 2 mysql mysql     4096 Jan 26 18:30 mysql</span><br><span class="line">-rw-rw---- 1 mysql mysql    10133 Jan 26 19:04 mysql_bin.000001</span><br><span class="line">-rw-rw---- 1 mysql mysql      342 Jan 26 19:04 mysql_bin.000002</span><br><span class="line">-rw-rw---- 1 mysql mysql       38 Jan 26 19:04 mysql_bin.index</span><br><span class="line">srwxrwxrwx 1 mysql mysql        0 Jan 26 19:04 mysql.sock</span><br><span class="line">-rw-rw---- 1 mysql mysql       16 Jan 26 18:30 mysql_upgrade_info</span><br><span class="line">drwx------ 2 mysql mysql       20 Jan 26 18:30 performance_schema</span><br><span class="line"></span><br><span class="line">[root@master ~]<span class="comment"># tail -f /var/lib/mysql/master.log</span></span><br><span class="line">220126 19.10:26         9 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.10:27        10 Connectroot@localhost as anonymous on </span><br><span class="line">            10 Query<span class="keyword">select</span> @@version_comment <span class="built_in">limit</span> 1</span><br><span class="line">220126 19.10:36        11 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.10:46        12 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.10:51        10 QuerySELECT DATABASE()</span><br><span class="line">            10 Init DBhellodb</span><br><span class="line">            10 Queryshow databases</span><br><span class="line">            10 Queryshow tables</span><br><span class="line">            10 Field Listclasses </span><br><span class="line">            10 Field Listcoc </span><br><span class="line">            10 Field Listcourses </span><br><span class="line">            10 Field Listscores </span><br><span class="line">            10 Field Liststudents </span><br><span class="line">            10 Field Listteachers </span><br><span class="line">            10 Field Listtoc </span><br><span class="line">220126 19.10:56        13 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.11:06        14 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.11:09        15 Connectrepluser@10.0.0.28 as anonymous on </span><br><span class="line">            15 QuerySET NAMES utf8mb4</span><br><span class="line">            15 QuerySELECT UNIX_TIMESTAMP()</span><br><span class="line">            15 QuerySHOW VARIABLES LIKE <span class="string">&#x27;SERVER_ID&#x27;</span></span><br><span class="line">            15 QuerySET @master_heartbeat_period= 30000001024</span><br><span class="line">            15 QuerySET @master_binlog_checksum= @@global.binlog_checksum</span><br><span class="line">            15 QuerySELECT @master_binlog_checksum</span><br><span class="line">            15 QuerySET @mariadb_slave_capability=4</span><br><span class="line">            15 QuerySELECT binlog_gtid_pos(<span class="string">&#x27;mysql_bin.000003&#x27;</span>,342)</span><br><span class="line">            15 Binlog DumpLog: <span class="string">&#x27;mysql_bin.000003&#x27;</span>  Pos: 342</span><br><span class="line">220126 19.11:16        16 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.11:26        17 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.11:36        18 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.11:46        19 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.11:56        20 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.11:59        10 Querycreate database db2</span><br><span class="line">220126 19.12:06        21 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.12:16        22 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">            10 Querycreate database db1</span><br><span class="line">220126 19.12:21        10 QuerySELECT DATABASE()</span><br><span class="line">            10 Init DBdb1</span><br><span class="line">            10 Queryshow databases</span><br><span class="line">            10 Queryshow tables</span><br><span class="line">220126 19.12:26        23 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.12:30        10 Querycreate table t1(<span class="built_in">id</span> int auto_increment primary key,name char(10))</span><br><span class="line">220126 19.12:36        24 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">            10 Queryinsert t1 (name) values(<span class="string">&#x27;user1&#x27;</span>)</span><br><span class="line">220126 19.12:39        10 Queryinsert t1 (name) values(<span class="string">&#x27;user2&#x27;</span>)</span><br><span class="line">220126 19.12:46        25 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.12:56        26 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19:13:06        27 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line"></span><br><span class="line">[root@slave ~]<span class="comment"># tail -f /var/lib/mysql/slave.log </span></span><br><span class="line">220126 19.14:16        11 Connectroot@localhost as anonymous on </span><br><span class="line">            11 Query<span class="keyword">select</span> @@version_comment <span class="built_in">limit</span> 1</span><br><span class="line">            12 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.14:26        13 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.14:36        14 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.14:46        15 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">            11 Queryshow databases</span><br><span class="line">220126 19.14:56        16 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:06        17 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:12        11 Query<span class="keyword">select</span> user()</span><br><span class="line">220126 19.15:16        11 Query<span class="keyword">select</span> user()</span><br><span class="line">            18 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">            11 Query<span class="keyword">select</span> user()</span><br><span class="line">220126 19.15:17        11 Query<span class="keyword">select</span> user()</span><br><span class="line">220126 19.15:26        19 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">            11 Query<span class="keyword">select</span> @@hostname</span><br><span class="line">220126 19.15:27        11 Query<span class="keyword">select</span> @@hostname</span><br><span class="line">220126 19.15:36        20 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:46        21 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:47        11 Queryupdate teachers <span class="built_in">set</span> age=99 <span class="built_in">where</span> tid=4</span><br><span class="line">220126 19.15:56        22 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:59        11 Quit</span><br><span class="line">220126 19.15:05        23 Connectroot@localhost as anonymous on </span><br><span class="line">            23 Query<span class="keyword">select</span> @@version_comment <span class="built_in">limit</span> 1</span><br><span class="line">220126 19.15:06        24 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:12        23 QuerySELECT DATABASE()</span><br><span class="line">            23 Init DBhellodb</span><br><span class="line">            23 Queryshow databases</span><br><span class="line">            23 Queryshow tables</span><br><span class="line">            23 Field Listclasses </span><br><span class="line">            23 Field Listcoc </span><br><span class="line">            23 Field Listcourses </span><br><span class="line">            23 Field Listscores </span><br><span class="line">            23 Field Liststudents </span><br><span class="line">            23 Field Listteachers </span><br><span class="line">            23 Field Listtoc </span><br><span class="line">220126 19.15:15        23 Queryupdate teachers <span class="built_in">set</span> age=99 <span class="built_in">where</span> tid=4</span><br><span class="line">220126 19.15:16        25 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:26        26 Connectroot@10.0.0.8 as anonymous on db3</span><br><span class="line">220126 19.15:36        27 Connectroot@10.0.0.8 as anonymous on db3</span><br></pre></td></tr></table></figure><h2 id="在客户端上检验"><a href="#在客户端上检验" class="headerlink" title="在客户端上检验"></a>在客户端上检验</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在主节点数据服务停止时会跳到从节点读取</span></span><br><span class="line">[root@client ~]<span class="comment"># mysql -uroot -pMysql@2022! -h10.0.0.8</span></span><br><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 1</span><br><span class="line">Server version: 5.6.29-mycat-1.6.7.6-release-20220221174943 MyCat Server (OpenCloudDB)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; show databases;</span><br><span class="line">+----------+</span><br><span class="line">| DATABASE |</span><br><span class="line">+----------+</span><br><span class="line">| TESTDB   |</span><br><span class="line">+----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.002 sec)</span><br><span class="line"></span><br><span class="line">MySQL [(none)]&gt; use TESTDB</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MySQL [TESTDB]&gt; show databases;</span><br><span class="line">+----------+</span><br><span class="line">| DATABASE |</span><br><span class="line">+----------+</span><br><span class="line">| TESTDB   |</span><br><span class="line">+----------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; show tables;</span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_hellodb |</span><br><span class="line">+-------------------+</span><br><span class="line">| classes           |</span><br><span class="line">| coc               |</span><br><span class="line">| courses           |</span><br><span class="line">| scores            |</span><br><span class="line">| students          |</span><br><span class="line">| teachers          |</span><br><span class="line">| toc               |</span><br><span class="line">+-------------------+</span><br><span class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.002 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> @@server_id;</span><br><span class="line">+-------------+</span><br><span class="line">| @@server_id |</span><br><span class="line">+-------------+</span><br><span class="line">|          28 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> @@hostname;</span><br><span class="line">+------------+</span><br><span class="line">| @@hostname |</span><br><span class="line">+------------+</span><br><span class="line">| slave      |</span><br><span class="line">+------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> * from teachers;</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">| TID | Name          | Age | Gender |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">|   1 | Song Jiang    |  45 | M      |</span><br><span class="line">|   2 | Zhang Sanfeng |  94 | M      |</span><br><span class="line">|   3 | Miejue Shitai |  77 | F      |</span><br><span class="line">|   4 | Lin Chaoying  |  99 | F      |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.003 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> * from students;</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">| StuID | Name          | Age | Gender | ClassID | TeacherID |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">|     1 | Shi Zhongyu   |  22 | M      |       2 |         3 |</span><br><span class="line">|     2 | Shi Potian    |  22 | M      |       1 |         7 |</span><br><span class="line">|     3 | Xie Yanke     |  53 | M      |       2 |        16 |</span><br><span class="line">|     4 | Ding Dian     |  32 | M      |       4 |         4 |</span><br><span class="line">|     5 | Yu Yutong     |  26 | M      |       3 |         1 |</span><br><span class="line">|     6 | Shi Qing      |  46 | M      |       5 |      NULL |</span><br><span class="line">|     7 | Xi Ren        |  19 | F      |       3 |      NULL |</span><br><span class="line">|     8 | Lin Daiyu     |  17 | F      |       7 |      NULL |</span><br><span class="line">|     9 | Ren Yingying  |  20 | F      |       6 |      NULL |</span><br><span class="line">|    10 | Yue Lingshan  |  19 | F      |       3 |      NULL |</span><br><span class="line">|    11 | Yuan Chengzhi |  23 | M      |       6 |      NULL |</span><br><span class="line">|    12 | Wen Qingqing  |  19 | F      |       1 |      NULL |</span><br><span class="line">|    13 | Tian Boguang  |  33 | M      |       2 |      NULL |</span><br><span class="line">|    14 | Lu Wushuang   |  17 | F      |       3 |      NULL |</span><br><span class="line">|    15 | Duan Yu       |  19 | M      |       4 |      NULL |</span><br><span class="line">|    16 | Xu Zhu        |  21 | M      |       1 |      NULL |</span><br><span class="line">|    17 | Lin Chong     |  25 | M      |       4 |      NULL |</span><br><span class="line">|    18 | Hua Rong      |  23 | M      |       7 |      NULL |</span><br><span class="line">|    19 | Xue Baochai   |  18 | F      |       6 |      NULL |</span><br><span class="line">|    20 | Diao Chan     |  19 | F      |       7 |      NULL |</span><br><span class="line">|    21 | Huang Yueying |  22 | F      |       6 |      NULL |</span><br><span class="line">|    22 | Xiao Qiao     |  20 | F      |       1 |      NULL |</span><br><span class="line">|    23 | Ma Chao       |  23 | M      |       4 |      NULL |</span><br><span class="line">|    24 | Xu Xian       |  27 | M      |    NULL |      NULL |</span><br><span class="line">|    25 | Sun Dasheng   | 100 | M      |    NULL |      NULL |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">25 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.002 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; create table t1(<span class="built_in">id</span> int);</span><br><span class="line">Query OK, 0 rows affected (0.006 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; create table t2(<span class="built_in">id</span> int);</span><br><span class="line">Query OK, 0 rows affected (0.004 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; show tables;</span><br><span class="line">+-------------------+</span><br><span class="line">| Tables_in_hellodb |</span><br><span class="line">+-------------------+</span><br><span class="line">| classes           |</span><br><span class="line">| coc               |</span><br><span class="line">| courses           |</span><br><span class="line">| scores            |</span><br><span class="line">| students          |</span><br><span class="line">| t1                |</span><br><span class="line">| t2                |</span><br><span class="line">| teachers          |</span><br><span class="line">| toc               |</span><br><span class="line">+-------------------+</span><br><span class="line">9 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.002 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; insert teachers (name,age,gender) values(<span class="string">&#x27;zhang&#x27;</span>,22,<span class="string">&#x27;M&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.046 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> * from teachers;</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">| TID | Name          | Age | Gender |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">|   1 | Song Jiang    |  45 | M      |</span><br><span class="line">|   2 | Zhang Sanfeng |  94 | M      |</span><br><span class="line">|   3 | Miejue Shitai |  77 | F      |</span><br><span class="line">|   4 | Lin Chaoying  |  99 | F      |</span><br><span class="line">|   5 | zhang         |  22 | M      |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#如果把从节点的服务停了，mycat会从自动转到主节点上面</span></span><br><span class="line">[root@slave ~]<span class="comment"># systemctl stop mariadb</span></span><br><span class="line">[root@client ~]<span class="comment"># mysql -uroot -pMysql@2022! -h10.0.0.8 </span></span><br><span class="line">MySQL [(none)]&gt; use TESTDB</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> @@hostname;</span><br><span class="line">+------------+</span><br><span class="line">| @@hostname |</span><br><span class="line">+------------+</span><br><span class="line">| master     |</span><br><span class="line">+------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> @@server_id;</span><br><span class="line">+-------------+</span><br><span class="line">| @@server_id |</span><br><span class="line">+-------------+</span><br><span class="line">|          18 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在主节点停掉服务的话，读和写都不行了的，读还有短暂等待时间，写立刻就报错了</span></span><br><span class="line">MySQL [TESTDB]&gt; update teachers <span class="built_in">set</span> age=122 <span class="built_in">where</span> tid=4; </span><br><span class="line">ERROR 1184 (HY000): java.net.ConnectException: Connection refused</span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> @@server_id;</span><br><span class="line">+-------------+</span><br><span class="line">| @@server_id |</span><br><span class="line">+-------------+</span><br><span class="line">|          28 |</span><br><span class="line">+-------------+</span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.001 sec)</span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> @@server_id;</span><br><span class="line">ERROR 1184 (HY000): java.net.ConnectException: Connection refused</span><br><span class="line">MySQL [TESTDB]&gt; <span class="keyword">select</span> @@server_id;</span><br><span class="line">ERROR 1184 (HY000): java.net.ConnectException: Connection refused</span><br><span class="line"></span><br><span class="line"><span class="comment">#到此就mycat实现的mysql读写分离基本上就完成了。</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Mysql的物理备份工具(xtrabackup)</title>
      <link href="/post/d88c92a0.html"/>
      <url>/post/d88c92a0.html</url>
      
        <content type="html"><![CDATA[<h1 id="xtrabackup实现全量-增量-binlog恢复库"><a href="#xtrabackup实现全量-增量-binlog恢复库" class="headerlink" title="xtrabackup实现全量+增量+binlog恢复库"></a>xtrabackup实现全量+增量+binlog恢复库</h1><p><img src="/images/xtrabackup.png"></p><p>两台服务器：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">1、源服务器：</span><br><span class="line">mysql_8</span><br><span class="line">Centos 8.5</span><br><span class="line">IP: 10.0.0.8</span><br><span class="line">MySQL 8.0.26</span><br><span class="line">percona-xtrabackup-80-8.0.27-19.1.el8.x86_64</span><br><span class="line"></span><br><span class="line">2、目标服务器：</span><br><span class="line">mysql_18</span><br><span class="line">Centos 8.5</span><br><span class="line">IP: 10.0.0.18</span><br><span class="line">MySQL 8.0.26</span><br><span class="line">percona-xtrabackup-80-8.0.27-19.1.el8.x86_64</span><br></pre></td></tr></table></figure><h2 id="源服务器的配置"><a href="#源服务器的配置" class="headerlink" title="源服务器的配置"></a>源服务器的配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装xtrabackup</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># wget https://downloads.percona.com/downloads/Percona-XtraBackup-LATEST/Percona-XtraBackup-8.0.27-19/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm</span></span><br><span class="line">--2022-01-22 15:40:15--  https://downloads.percona.com/downloads/Percona-XtraBackup-LATEST/Percona-XtraBackup-8.0.27-19/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm</span><br><span class="line">Resolving downloads.percona.com (downloads.percona.com)... 162.220.4.222, 162.220.4.221, 74.121.199.231</span><br><span class="line">Connecting to downloads.percona.com (downloads.percona.com)|162.220.4.222|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 15878040 (15M) [application/octet-stream]</span><br><span class="line">Saving to: ‘percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm’</span><br><span class="line"></span><br><span class="line">percona-xtrabackup-80-8.0.27 100%[=============================================&gt;]  15.14M   506KB/s    <span class="keyword">in</span> 32s     </span><br><span class="line"></span><br><span class="line">2022-01-22 15:40:48 (488 KB/s) - ‘percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm’ saved [15878040/15878040]</span><br><span class="line"></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># yum -y install percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装mysql-server</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># yum -y install mysql-server</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装后并设置开机自启动</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># systemctl enable --now mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#默认数据库root用户是没密码的</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line"><span class="comment">#登录进数据库，修改root账号的密&amp;码</span></span><br><span class="line">mysql&gt; alter user<span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> identified by <span class="string">&#x27;wm521314&#x27;</span>;</span><br><span class="line">Query OK, 0 rows affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line"></span><br><span class="line"><span class="comment">#在导入自己用于测试的hellodb数据库</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># mysql -uroot -pwm521314 &lt; hellodb_innodb.sql</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line"></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># mysql -uroot -pwm521314</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 13</span><br><span class="line">Server version: 8.0.26 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered tradeJank of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be tradeJanks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| hellodb            |</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| wgcloud            |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line"></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># ll /var/lib/mysql/</span></span><br><span class="line">total 189916</span><br><span class="line">-rw-r-----. 1 mysql mysql       56 Nov 20 11:49  auto.cnf</span><br><span class="line">-rw-r-----. 1 mysql mysql      179 Feb 14 20:44  binlog.000007</span><br><span class="line">-rw-r-----  1 mysql mysql      179 Feb 14 21:19  binlog.000008</span><br><span class="line">-rw-r-----  1 mysql mysql    10752 Jan 22 15:41  binlog.000009</span><br><span class="line">-rw-r-----  1 mysql mysql       48 Feb 14 21:26  binlog.index</span><br><span class="line">-rw-------. 1 mysql mysql     1676 Nov 20 11:49  ca-key.pem</span><br><span class="line">-rw-r--r--. 1 mysql mysql     1112 Nov 20 11:49  ca.pem</span><br><span class="line">-rw-r--r--. 1 mysql mysql     1112 Nov 20 11:49  client-cert.pem</span><br><span class="line">-rw-------. 1 mysql mysql     1680 Nov 20 11:49  client-key.pem</span><br><span class="line">drwxr-x---  2 mysql mysql      132 Jan 22 15:41  hellodb</span><br><span class="line">-rw-r-----. 1 mysql mysql   196608 Jan 22 15:41 <span class="string">&#x27;#ib_16384_0.dblwr&#x27;</span></span><br><span class="line">-rw-r-----. 1 mysql mysql  8585216 Nov 20 11:49 <span class="string">&#x27;#ib_16384_1.dblwr&#x27;</span></span><br><span class="line">-rw-r-----  1 mysql mysql     3472 Feb 14 21:19  ib_buffer_pool</span><br><span class="line">-rw-r-----. 1 mysql mysql 12582912 Jan 22 15:41  ibdata1</span><br><span class="line">-rw-r-----. 1 mysql mysql 50331648 Jan 22 15:41  ib_logfile0</span><br><span class="line">-rw-r-----. 1 mysql mysql 50331648 Nov 20 11:49  ib_logfile1</span><br><span class="line">-rw-r-----  1 mysql mysql 12582912 Feb 14 21:26  ibtmp1</span><br><span class="line">drwxr-x---. 2 mysql mysql      187 Feb 14 21:26 <span class="string">&#x27;#innodb_temp&#x27;</span></span><br><span class="line">drwxr-x---. 2 mysql mysql      143 Nov 20 11:49  mysql</span><br><span class="line">-rw-r-----. 1 mysql mysql 26214400 Jan 22 15:41  mysql.ibd</span><br><span class="line">srwxrwxrwx  1 mysql mysql        0 Feb 14 21:26  mysql.sock</span><br><span class="line">-rw-------  1 mysql mysql        4 Feb 14 21:26  mysql.sock.lock</span><br><span class="line">-rw-r--r--. 1 mysql mysql        7 Nov 20 11:49  mysql_upgrade_info</span><br><span class="line">srwxrwxrwx  1 mysql mysql        0 Feb 14 21:26  mysqlx.sock</span><br><span class="line">-rw-------  1 mysql mysql        5 Feb 14 21:26  mysqlx.sock.lock</span><br><span class="line">drwxr-x---. 2 mysql mysql     8192 Nov 20 11:49  performance_schema</span><br><span class="line">-rw-------. 1 mysql mysql     1676 Nov 20 11:49  private_key.pem</span><br><span class="line">-rw-r--r--. 1 mysql mysql      452 Nov 20 11:49  public_key.pem</span><br><span class="line">-rw-r--r--. 1 mysql mysql     1112 Nov 20 11:49  server-cert.pem</span><br><span class="line">-rw-------. 1 mysql mysql     1680 Nov 20 11:49  server-key.pem</span><br><span class="line">drwxr-x---. 2 mysql mysql       28 Nov 20 11:49  sys</span><br><span class="line">-rw-r-----. 1 mysql mysql 16777216 Jan 22 15:41  undo_001</span><br><span class="line">-rw-r-----. 1 mysql mysql 16777216 Jan 22 15:41  undo_002</span><br><span class="line">drwxr-x---. 2 mysql mysql     4096 Nov 20 14:17  wgcloud</span><br></pre></td></tr></table></figure><h2 id="目标服务器的配置"><a href="#目标服务器的配置" class="headerlink" title="目标服务器的配置"></a>目标服务器的配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#安装xtrabackup</span></span><br><span class="line">[root@mysql_18 ~]<span class="comment"># wget https://downloads.percona.com/downloads/Percona-XtraBackup-LATEST/Percona-XtraBackup-8.0.27-19/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm</span></span><br><span class="line">--2022-01-22 15:59:07--  https://downloads.percona.com/downloads/Percona-XtraBackup-LATEST/Percona-XtraBackup-8.0.27-19/binary/redhat/8/x86_64/percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm</span><br><span class="line">Resolving downloads.percona.com (downloads.percona.com)... 162.220.4.222, 162.220.4.221, 74.121.199.231</span><br><span class="line">Connecting to downloads.percona.com (downloads.percona.com)|162.220.4.222|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 15878040 (15M) [application/octet-stream]</span><br><span class="line">Saving to: ‘percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm’</span><br><span class="line"></span><br><span class="line">percona-xtrabackup-80-8.0.27 100%[=============================================&gt;]  15.14M   359KB/s    <span class="keyword">in</span> 35s     </span><br><span class="line"></span><br><span class="line">2022-01-22 15:59:43 (440 KB/s) - ‘percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm’ saved [15878040/15878040]</span><br><span class="line"></span><br><span class="line">[root@mysql_18 ~]<span class="comment"># yum -y install percona-xtrabackup-80-8.0.27-19.1.el8.x86_64.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#安装mysql-server</span></span><br><span class="line">[root@mysql_18 ~]<span class="comment"># yum -y install mysql-server</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#目标服务器用于恢复的数据库准备完毕，下载好mysql-server就好了，不用启动服务。</span></span><br></pre></td></tr></table></figure><h2 id="在源服务器备份全量以及两次的增量数据库文件"><a href="#在源服务器备份全量以及两次的增量数据库文件" class="headerlink" title="在源服务器备份全量以及两次的增量数据库文件"></a>在源服务器备份全量以及两次的增量数据库文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#创建备份的文件存放的目录</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># mkdir -p /data/backup</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># ll /data/backup/</span></span><br><span class="line">total 0</span><br><span class="line"><span class="comment">#首先用xtrabackup完成一次全量的数据库备份 all</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># xtrabackup -uroot -pwm521314 --backup --target-dir=/data/backup/all</span></span><br><span class="line">....................</span><br><span class="line">220122 16:19:27 completed OK!    <span class="comment">#看到备份成功提示就可以了</span></span><br><span class="line"></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># ll /data/backup/all/</span></span><br><span class="line">total 70708</span><br><span class="line">-rw-r----- 1 root root      475 Jan 22 16:20 backup-my.cnf</span><br><span class="line">-rw-r----- 1 root root      156 Jan 22 16:20 binlog.000010</span><br><span class="line">-rw-r----- 1 root root       16 Jan 22 16:20 binlog.index</span><br><span class="line">drwxr-x--- 2 root root      132 Jan 22 16:20 hellodb</span><br><span class="line">-rw-r----- 1 root root     3472 Jan 22 16:20 ib_buffer_pool</span><br><span class="line">-rw-r----- 1 root root 12582912 Jan 22 16:20 ibdata1</span><br><span class="line">drwxr-x--- 2 root root      143 Jan 22 16:20 mysql</span><br><span class="line">-rw-r----- 1 root root 26214400 Jan 22 16:20 mysql.ibd</span><br><span class="line">drwxr-x--- 2 root root     8192 Jan 22 16:20 performance_schema</span><br><span class="line">drwxr-x--- 2 root root       28 Jan 22 16:20 sys</span><br><span class="line">-rw-r----- 1 root root 16777216 Jan 22 16:20 undo_001</span><br><span class="line">-rw-r----- 1 root root 16777216 Jan 22 16:20 undo_002</span><br><span class="line">drwxr-x--- 2 root root     4096 Jan 22 16:20 wgcloud</span><br><span class="line">-rw-r----- 1 root root       18 Jan 22 16:20 xtrabackup_binlog_info</span><br><span class="line">-rw-r----- 1 root root      102 Jan 22 16:20 xtrabackup_checkpoints</span><br><span class="line">-rw-r----- 1 root root      473 Jan 22 16:20 xtrabackup_info</span><br><span class="line">-rw-r----- 1 root root     2560 Jan 22 16:20 xtrabackup_logfile</span><br><span class="line">-rw-r----- 1 root root       39 Jan 22 16:20 xtrabackup_tablespaces</span><br><span class="line"></span><br><span class="line"><span class="comment">#第一次增量（在数据库hellodb中students表中插入几行数据）</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># mysql -uroot -pwm521314 hellodb</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 17</span><br><span class="line">Server version: 8.0.26 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from students;</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">| StuID | Name          | Age | Gender | ClassID | TeacherID |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">|     1 | Shi Zhongyu   |  22 | M      |       2 |         3 |</span><br><span class="line">|     2 | Shi Potian    |  22 | M      |       1 |         7 |</span><br><span class="line">|     3 | Xie Yanke     |  53 | M      |       2 |        16 |</span><br><span class="line">|     4 | Ding Dian     |  32 | M      |       4 |         4 |</span><br><span class="line">|     5 | Yu Yutong     |  26 | M      |       3 |         1 |</span><br><span class="line">|     6 | Shi Qing      |  46 | M      |       5 |      NULL |</span><br><span class="line">|     7 | Xi Ren        |  19 | F      |       3 |      NULL |</span><br><span class="line">|     8 | Lin Daiyu     |  17 | F      |       7 |      NULL |</span><br><span class="line">|     9 | Ren Yingying  |  20 | F      |       6 |      NULL |</span><br><span class="line">|    10 | Yue Lingshan  |  19 | F      |       3 |      NULL |</span><br><span class="line">|    11 | Yuan Chengzhi |  23 | M      |       6 |      NULL |</span><br><span class="line">|    12 | Wen Qingqing  |  19 | F      |       1 |      NULL |</span><br><span class="line">|    13 | Tian Boguang  |  33 | M      |       2 |      NULL |</span><br><span class="line">|    14 | Lu Wushuang   |  17 | F      |       3 |      NULL |</span><br><span class="line">|    15 | Duan Yu       |  19 | M      |       4 |      NULL |</span><br><span class="line">|    16 | Xu Zhu        |  21 | M      |       1 |      NULL |</span><br><span class="line">|    17 | Lin Chong     |  25 | M      |       4 |      NULL |</span><br><span class="line">|    18 | Hua Rong      |  23 | M      |       7 |      NULL |</span><br><span class="line">|    19 | Xue Baochai   |  18 | F      |       6 |      NULL |</span><br><span class="line">|    20 | Diao Chan     |  19 | F      |       7 |      NULL |</span><br><span class="line">|    21 | Huang Yueying |  22 | F      |       6 |      NULL |</span><br><span class="line">|    22 | Xiao Qiao     |  20 | F      |       1 |      NULL |</span><br><span class="line">|    23 | Ma Chao       |  23 | M      |       4 |      NULL |</span><br><span class="line">|    24 | Xu Xian       |  27 | M      |    NULL |      NULL |</span><br><span class="line">|    25 | Sun Dasheng   | 100 | M      |    NULL |      NULL |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">25 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert students (name,age,gender) values(<span class="string">&#x27;xiaohong&#x27;</span>,20,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert students (name,age,gender) values(<span class="string">&#x27;xiaoyuan&#x27;</span>,25,<span class="string">&#x27;M&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert students (name,age,gender) values(<span class="string">&#x27;xiaoming&#x27;</span>,28,<span class="string">&#x27;M&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from students;</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">| StuID | Name          | Age | Gender | ClassID | TeacherID |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">|     1 | Shi Zhongyu   |  22 | M      |       2 |         3 |</span><br><span class="line">|     2 | Shi Potian    |  22 | M      |       1 |         7 |</span><br><span class="line">|     3 | Xie Yanke     |  53 | M      |       2 |        16 |</span><br><span class="line">|     4 | Ding Dian     |  32 | M      |       4 |         4 |</span><br><span class="line">|     5 | Yu Yutong     |  26 | M      |       3 |         1 |</span><br><span class="line">|     6 | Shi Qing      |  46 | M      |       5 |      NULL |</span><br><span class="line">|     7 | Xi Ren        |  19 | F      |       3 |      NULL |</span><br><span class="line">|     8 | Lin Daiyu     |  17 | F      |       7 |      NULL |</span><br><span class="line">|     9 | Ren Yingying  |  20 | F      |       6 |      NULL |</span><br><span class="line">|    10 | Yue Lingshan  |  19 | F      |       3 |      NULL |</span><br><span class="line">|    11 | Yuan Chengzhi |  23 | M      |       6 |      NULL |</span><br><span class="line">|    12 | Wen Qingqing  |  19 | F      |       1 |      NULL |</span><br><span class="line">|    13 | Tian Boguang  |  33 | M      |       2 |      NULL |</span><br><span class="line">|    14 | Lu Wushuang   |  17 | F      |       3 |      NULL |</span><br><span class="line">|    15 | Duan Yu       |  19 | M      |       4 |      NULL |</span><br><span class="line">|    16 | Xu Zhu        |  21 | M      |       1 |      NULL |</span><br><span class="line">|    17 | Lin Chong     |  25 | M      |       4 |      NULL |</span><br><span class="line">|    18 | Hua Rong      |  23 | M      |       7 |      NULL |</span><br><span class="line">|    19 | Xue Baochai   |  18 | F      |       6 |      NULL |</span><br><span class="line">|    20 | Diao Chan     |  19 | F      |       7 |      NULL |</span><br><span class="line">|    21 | Huang Yueying |  22 | F      |       6 |      NULL |</span><br><span class="line">|    22 | Xiao Qiao     |  20 | F      |       1 |      NULL |</span><br><span class="line">|    23 | Ma Chao       |  23 | M      |       4 |      NULL |</span><br><span class="line">|    24 | Xu Xian       |  27 | M      |    NULL |      NULL |</span><br><span class="line">|    25 | Sun Dasheng   | 100 | M      |    NULL |      NULL |</span><br><span class="line">|    26 | xiaohong      |  20 | F      |    NULL |      NULL |</span><br><span class="line">|    27 | xiaoyuan      |  25 | M      |    NULL |      NULL |</span><br><span class="line">|    28 | xiaoming      |  28 | M      |    NULL |      NULL |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">28 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line"><span class="comment">#第一次增量备份</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># xtrabackup -uroot -pwm521314 --backup --target-dir=/data/backup/inc1 --incremental-basedir=/data/backup/all</span></span><br><span class="line">.................</span><br><span class="line">220122 16:25:15 completed OK!    <span class="comment">#看到备份成功就可以了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看备份文件，现在多了一个inc1文件夹，这个文件夹就是放的第一次增量备份的文件</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># ll /data/backup/</span></span><br><span class="line">total 8</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:25 all</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:25 inc1</span><br><span class="line">[root@mysql_8 ~]<span class="comment"># cat /data/backup/inc1/xtrabackup_info </span></span><br><span class="line">uuid = de2cd3a3-a2dd-11ec-9cd4-000c294b4125</span><br><span class="line">name = </span><br><span class="line">tool_name = xtrabackup</span><br><span class="line">tool_command = -uroot -pwm521314 --backup --target-dir=/data/backup/inc1 --incremental-basedir=/data/backup/all</span><br><span class="line">tool_version = 8.0.27-19</span><br><span class="line">ibbackup_version = 8.0.27-19</span><br><span class="line">server_version = 8.0.26</span><br><span class="line">start_time = 2022-01-22 16:26:11</span><br><span class="line">end_time = 2022-01-22 16:26:14</span><br><span class="line">lock_time = 1</span><br><span class="line">binlog_pos = filename <span class="string">&#x27;binlog.000011&#x27;</span>, position <span class="string">&#x27;156&#x27;</span></span><br><span class="line">innodb_from_lsn = 19207519</span><br><span class="line">innodb_to_lsn = 19208665</span><br><span class="line">partial = N</span><br><span class="line">incremental = Y</span><br><span class="line">format = file</span><br><span class="line">compressed = N</span><br><span class="line">encrypted = N</span><br><span class="line"></span><br><span class="line"><span class="comment"># 第二次增量（在数据库hellodb中表中插入几行数据）</span></span><br><span class="line">root@mysql-100:~<span class="comment"># mysql -uroot -pwm521314 hellodb</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 12</span><br><span class="line">Server version: 5.7.37-0ubuntu0.18.04.1-<span class="built_in">log</span> (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2022, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; insert teachers (name,age,gender) values(<span class="string">&#x27;zhang&#x27;</span>,22,<span class="string">&#x27;M&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert teachers (name,age,gender) values(<span class="string">&#x27;wang&#x27;</span>,20,<span class="string">&#x27;F&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; insert teachers (name,age,gender) values(<span class="string">&#x27;xiao&#x27;</span>,18,<span class="string">&#x27;M&#x27;</span>);</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from teachers;</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">| TID | Name          | Age | Gender |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">|   1 | Song Jiang    |  45 | M      |</span><br><span class="line">|   2 | Zhang Sanfeng |  94 | M      |</span><br><span class="line">|   3 | Miejue Shitai |  77 | F      |</span><br><span class="line">|   4 | Lin Chaoying  |  93 | F      |</span><br><span class="line">|   5 | zhang         |  22 | M      |</span><br><span class="line">|   6 | wang          |  20 | F      |</span><br><span class="line">|   7 | xiao          |  18 | M      |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line"></span><br><span class="line"><span class="comment">#在第一次inc1增量的备份基础上完成第二次增量备份</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># xtrabackup -uroot -pwm521314 --backup --target-dir=/data/backup/inc2 --incremental-basedir=/data/backup/inc1</span></span><br><span class="line">...................</span><br><span class="line">220122 16:28:08 completed OK!    <span class="comment">##看到备份成功就可以了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看已经备份的文件，对于上次的话多了个inc2文件夹</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># ll /data/backup/</span></span><br><span class="line">total 12</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:28 all</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:30 inc1</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:32 inc2</span><br><span class="line"></span><br><span class="line"><span class="comment">#现在可以将所有的备份文件复制到目标服务器上</span></span><br><span class="line">[root@mysql_8 ~]<span class="comment"># scp -r /data/backup/ 10.0.0.18:/data/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#到此数据库的全量备份和增量备份就完成了，现在可以去目标服务器上去还原数据库了。</span></span><br></pre></td></tr></table></figure><h2 id="在目标服务器还原全量以及两次的增量数据库文件"><a href="#在目标服务器还原全量以及两次的增量数据库文件" class="headerlink" title="在目标服务器还原全量以及两次的增量数据库文件"></a>在目标服务器还原全量以及两次的增量数据库文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#确保目标服务器上数据库服务是停止的，避免生成一些文件</span></span><br><span class="line">[root@mysql_18 ~]<span class="comment"># systemctl stop mysqld</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查看在源服务器上复制过来的备份文件</span></span><br><span class="line">[root@mysql_18 ~]<span class="comment"># ll /data/backup/</span></span><br><span class="line">total 12</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:32 all</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:32 inc1</span><br><span class="line">drwxr-x--- 7 root root 4096 Jan 22 16:32 inc2</span><br><span class="line"></span><br><span class="line"><span class="comment">#确保/var/lib/mysql/目录下没有文件</span></span><br><span class="line">[root@mysql_18 ~]<span class="comment"># ll /var/lib/mysql/</span></span><br><span class="line">total 0</span><br><span class="line"></span><br><span class="line"><span class="comment">#还原过程</span></span><br><span class="line">1、预准备完成备份，此选项--apply-log-only 阻止回滚未完成的事务</span><br><span class="line">[root@mysql_18 ~]<span class="comment"># xtrabackup --prepare --apply-log-only --target-dir=/data/backup/all</span></span><br><span class="line">....................</span><br><span class="line">220122 16:34:15 completed OK!</span><br><span class="line"></span><br><span class="line">2、合并第1次增量备份到完全备份</span><br><span class="line">[root@mysql_18 ~]<span class="comment"># xtrabackup --prepare --apply-log-only --target-dir=/data/backup/all --incremental-basedir=/data/backup/inc1</span></span><br><span class="line">....................</span><br><span class="line">220122 16:34:59 completed OK!</span><br><span class="line"></span><br><span class="line">3、合并第2次增量备份到完全备份：最后一次还原不需要加选项--apply-log-only</span><br><span class="line">[root@mysql_18 ~]<span class="comment"># xtrabackup --prepare --target-dir=/data/backup/all --incremental-basedir=/data/backup/inc2</span></span><br><span class="line">....................</span><br><span class="line">220122 16:35:43 completed OK!</span><br><span class="line"></span><br><span class="line">4、复制到数据库目录</span><br><span class="line">[root@mysql_18 ~]<span class="comment"># xtrabackup --copy-back --target-dir=/data/backup/all</span></span><br><span class="line">....................</span><br><span class="line">220122 16:35:04 completed OK!</span><br><span class="line"></span><br><span class="line">5、修改目录权限</span><br><span class="line">[root@mysql_18 ~]<span class="comment"># chown -R mysql.mysql /var/lib/mysql</span></span><br><span class="line"></span><br><span class="line">6、在启动数据库服务来验证数据</span><br><span class="line">[root@mysql_18 ~]<span class="comment"># systemctl start mysql</span></span><br><span class="line">[root@mysql_18 ~]<span class="comment"># mysql -uroot -pwm521314</span></span><br><span class="line">mysql: [Warning] Using a password on the <span class="built_in">command</span> line interface can be insecure.</span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 9</span><br><span class="line">Server version: 8.0.26 Source distribution</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2021, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| hellodb            |</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| wgcloud            |</span><br><span class="line">+--------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; use hellodb</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from students;</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">| StuID | Name          | Age | Gender | ClassID | TeacherID |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">|     1 | Shi Zhongyu   |  22 | M      |       2 |         3 |</span><br><span class="line">|     2 | Shi Potian    |  22 | M      |       1 |         7 |</span><br><span class="line">|     3 | Xie Yanke     |  53 | M      |       2 |        16 |</span><br><span class="line">|     4 | Ding Dian     |  32 | M      |       4 |         4 |</span><br><span class="line">|     5 | Yu Yutong     |  26 | M      |       3 |         1 |</span><br><span class="line">|     6 | Shi Qing      |  46 | M      |       5 |      NULL |</span><br><span class="line">|     7 | Xi Ren        |  19 | F      |       3 |      NULL |</span><br><span class="line">|     8 | Lin Daiyu     |  17 | F      |       7 |      NULL |</span><br><span class="line">|     9 | Ren Yingying  |  20 | F      |       6 |      NULL |</span><br><span class="line">|    10 | Yue Lingshan  |  19 | F      |       3 |      NULL |</span><br><span class="line">|    11 | Yuan Chengzhi |  23 | M      |       6 |      NULL |</span><br><span class="line">|    12 | Wen Qingqing  |  19 | F      |       1 |      NULL |</span><br><span class="line">|    13 | Tian Boguang  |  33 | M      |       2 |      NULL |</span><br><span class="line">|    14 | Lu Wushuang   |  17 | F      |       3 |      NULL |</span><br><span class="line">|    15 | Duan Yu       |  19 | M      |       4 |      NULL |</span><br><span class="line">|    16 | Xu Zhu        |  21 | M      |       1 |      NULL |</span><br><span class="line">|    17 | Lin Chong     |  25 | M      |       4 |      NULL |</span><br><span class="line">|    18 | Hua Rong      |  23 | M      |       7 |      NULL |</span><br><span class="line">|    19 | Xue Baochai   |  18 | F      |       6 |      NULL |</span><br><span class="line">|    20 | Diao Chan     |  19 | F      |       7 |      NULL |</span><br><span class="line">|    21 | Huang Yueying |  22 | F      |       6 |      NULL |</span><br><span class="line">|    22 | Xiao Qiao     |  20 | F      |       1 |      NULL |</span><br><span class="line">|    23 | Ma Chao       |  23 | M      |       4 |      NULL |</span><br><span class="line">|    24 | Xu Xian       |  27 | M      |    NULL |      NULL |</span><br><span class="line">|    25 | Sun Dasheng   | 100 | M      |    NULL |      NULL |</span><br><span class="line">|    26 | xiaohong      |  20 | F      |    NULL |      NULL |</span><br><span class="line">|    27 | xiaoyuan      |  25 | M      |    NULL |      NULL |</span><br><span class="line">|    28 | xiaoming      |  28 | M      |    NULL |      NULL |</span><br><span class="line">+-------+---------------+-----+--------+---------+-----------+</span><br><span class="line">28 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="keyword">select</span> * from teachers;</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">| TID | Name          | Age | Gender |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">|   1 | Song Jiang    |  45 | M      |</span><br><span class="line">|   2 | Zhang Sanfeng |  94 | M      |</span><br><span class="line">|   3 | Miejue Shitai |  77 | F      |</span><br><span class="line">|   4 | Lin Chaoying  |  93 | F      |</span><br><span class="line">|   5 | zhang         |  22 | M      |</span><br><span class="line">|   6 | wang          |  20 | F      |</span><br><span class="line">|   7 | xiao          |  18 | M      |</span><br><span class="line">+-----+---------------+-----+--------+</span><br><span class="line">7 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">exit</span></span><br><span class="line">Bye</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看上面数据库表中的数据是还原过来的</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL的主从复制</title>
      <link href="/post/9ee789ff.html"/>
      <url>/post/9ee789ff.html</url>
      
        <content type="html"><![CDATA[<h1 id="MySQL5-7主从复制的实现"><a href="#MySQL5-7主从复制的实现" class="headerlink" title="MySQL5.7主从复制的实现"></a>MySQL5.7主从复制的实现</h1><p><img src="/images/%E4%B8%BB%E4%BB%8E%E5%A4%8D%E5%88%B6.png"></p><h2 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a>实验环境：</h2><table><thead><tr><th>node</th><th>Master</th><th>Slave</th></tr></thead><tbody><tr><td>System</td><td>Ubuntu18.04</td><td>Ubuntu18.04</td></tr><tr><td>MySQL</td><td>5.7</td><td>5.7</td></tr><tr><td>IP</td><td>10.0.0.100</td><td>10.0.0.102</td></tr></tbody></table><h2 id="主节点数据库的配置"><a href="#主节点数据库的配置" class="headerlink" title="主节点数据库的配置"></a>主节点数据库的配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">root@master-mysql:~<span class="comment"># apt -y install mysql-server</span></span><br><span class="line">root@master-mysql:~<span class="comment"># vim /etc/mysql/mysql.conf.d/mysqld.cnf</span></span><br><span class="line"><span class="comment">#在mysqld里面加上下面两行，定义主节点ID和开启二进制</span></span><br><span class="line">[mysqld]</span><br><span class="line">server-id       = 100</span><br><span class="line">log_bin         = /var/log/mysql/mysql-bin.log</span><br><span class="line">root@master-mysql:~<span class="comment"># systemctl restart mysql</span></span><br><span class="line">root@master-mysql:~<span class="comment"># mysql -uroot -p</span></span><br><span class="line">mysql&gt; show master logs;</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| Log_name         | File_size |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">| mysql-bin.000001 |       177 |</span><br><span class="line">| mysql-bin.000002 |       177 |</span><br><span class="line">| mysql-bin.000003 |       154 |</span><br><span class="line">+------------------+-----------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#创建复制用户并授权</span></span><br><span class="line">mysql&gt; grant replication slave on *.* to repluser@<span class="string">&#x27;10.0.0.%&#x27;</span> identified by <span class="string">&#x27;test123&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看并验证账号信息</span></span><br><span class="line">mysql&gt; SELECT DISTINCT CONCAT(<span class="string">&#x27;User: &#x27;</span><span class="string">&#x27;&#x27;</span>,user,<span class="string">&#x27;&#x27;</span><span class="string">&#x27;@&#x27;</span><span class="string">&#x27;&#x27;</span>,host,<span class="string">&#x27;&#x27;</span><span class="string">&#x27;;&#x27;</span>) AS userinfo FROM mysql.user;</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| userinfo                              |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">| User: <span class="string">&#x27;test&#x27;</span>@<span class="string">&#x27;%&#x27;</span>;                     |</span><br><span class="line">| User: <span class="string">&#x27;repluser&#x27;</span>@<span class="string">&#x27;10.0.0.%&#x27;</span>;          |</span><br><span class="line">| User: <span class="string">&#x27;debian-sys-maint&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>; |</span><br><span class="line">| User: <span class="string">&#x27;mysql.session&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;    |</span><br><span class="line">| User: <span class="string">&#x27;mysql.sys&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;        |</span><br><span class="line">| User: <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span>;             |</span><br><span class="line">+---------------------------------------+</span><br><span class="line">6 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看现有的数据库信息</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">+--------------------+</span><br><span class="line">4 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="从节点数据库的配置"><a href="#从节点数据库的配置" class="headerlink" title="从节点数据库的配置"></a>从节点数据库的配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br></pre></td><td class="code"><pre><span class="line">[root@slave-mysql ~]<span class="comment"># apt -y install mysql-server</span></span><br><span class="line">[root@slave-mysql ~]<span class="comment"># vim /etc/mysql/mysql.conf.d/mysqld.cnf</span></span><br><span class="line"><span class="comment">#在mysqld里面加上下面一行，定义主节点ID</span></span><br><span class="line">server-id       = 102</span><br><span class="line">[root@slave-mysql ~]<span class="comment"># systemctl restart mysql</span></span><br><span class="line">[root@slave-mysql ~]<span class="comment"># mysql -uroot -p</span></span><br><span class="line">Enter password: </span><br><span class="line">Welcome to the MySQL monitor.  Commands end with ; or \g.</span><br><span class="line">Your MySQL connection <span class="built_in">id</span> is 2</span><br><span class="line">Server version: 5.7.37-0ubuntu0.18.04.1-<span class="built_in">log</span> (Ubuntu)</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2022, Oracle and/or its affiliates.</span><br><span class="line"></span><br><span class="line">Oracle is a registered trademark of Oracle Corporation and/or its</span><br><span class="line">affiliates. Other names may be trademarks of their respective</span><br><span class="line">owners.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">mysql&gt; <span class="built_in">help</span> change master to    <span class="comment">#查看一下主从复制的格式的帮助</span></span><br><span class="line">Name: <span class="string">&#x27;CHANGE MASTER TO&#x27;</span></span><br><span class="line">Description:</span><br><span class="line">Syntax:</span><br><span class="line">CHANGE MASTER TO option [, option] ... [ channel_option ]</span><br><span class="line"></span><br><span class="line">option: &#123;</span><br><span class="line">    MASTER_BIND = <span class="string">&#x27;interface_name&#x27;</span></span><br><span class="line">  | MASTER_HOST = <span class="string">&#x27;host_name&#x27;</span></span><br><span class="line">  | MASTER_USER = <span class="string">&#x27;user_name&#x27;</span></span><br><span class="line">  | MASTER_PASSWORD = <span class="string">&#x27;password&#x27;</span></span><br><span class="line">  | MASTER_PORT = port_num</span><br><span class="line">  | MASTER_CONNECT_RETRY = interval</span><br><span class="line">  | MASTER_RETRY_COUNT = count</span><br><span class="line">  | MASTER_DELAY = interval</span><br><span class="line">  | MASTER_HEARTBEAT_PERIOD = interval</span><br><span class="line">  | MASTER_LOG_FILE = <span class="string">&#x27;source_log_name&#x27;</span></span><br><span class="line">  | MASTER_LOG_POS = source_log_pos</span><br><span class="line">  | MASTER_AUTO_POSITION = &#123;0|1&#125;</span><br><span class="line">  | RELAY_LOG_FILE = <span class="string">&#x27;relay_log_name&#x27;</span></span><br><span class="line">  | RELAY_LOG_POS = relay_log_pos</span><br><span class="line">  | MASTER_SSL = &#123;0|1&#125;</span><br><span class="line">  | MASTER_SSL_CA = <span class="string">&#x27;ca_file_name&#x27;</span></span><br><span class="line">  | MASTER_SSL_CAPATH = <span class="string">&#x27;ca_directory_name&#x27;</span></span><br><span class="line">  | MASTER_SSL_CERT = <span class="string">&#x27;cert_file_name&#x27;</span></span><br><span class="line">  | MASTER_SSL_CRL = <span class="string">&#x27;crl_file_name&#x27;</span></span><br><span class="line">  | MASTER_SSL_CRLPATH = <span class="string">&#x27;crl_directory_name&#x27;</span></span><br><span class="line">  | MASTER_SSL_KEY = <span class="string">&#x27;key_file_name&#x27;</span></span><br><span class="line">  | MASTER_SSL_CIPHER = <span class="string">&#x27;cipher_list&#x27;</span></span><br><span class="line">  | MASTER_SSL_VERIFY_SERVER_CERT = &#123;0|1&#125;</span><br><span class="line">  | MASTER_TLS_VERSION = <span class="string">&#x27;protocol_list&#x27;</span></span><br><span class="line">  | IGNORE_SERVER_IDS = (server_id_list)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">channel_option:</span><br><span class="line">    FOR CHANNEL channel</span><br><span class="line"></span><br><span class="line">server_id_list:</span><br><span class="line">    [server_id [, server_id] ... ]</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO changes the parameters that the replica uses <span class="keyword">for</span></span><br><span class="line">connecting to the replication <span class="built_in">source</span> server, <span class="keyword">for</span> reading the <span class="built_in">source</span><span class="string">&#x27;s</span></span><br><span class="line"><span class="string">binary log, and reading the replica&#x27;</span>s relay <span class="built_in">log</span>. It also updates the</span><br><span class="line">contents of the replication metadata repositories (see</span><br><span class="line">https://dev.mysql.com/doc/refman/5.7/en/replica-logs.html). CHANGE</span><br><span class="line">MASTER TO requires the SUPER privilege.</span><br><span class="line"></span><br><span class="line">Prior to MySQL 5.7.4, the replication threads must be stopped, using</span><br><span class="line">STOP SLAVE <span class="keyword">if</span> necessary, before issuing this statement. In MySQL 5.7.4</span><br><span class="line">and later, you can issue CHANGE MASTER TO statements on a running</span><br><span class="line">replica without doing this, depending on the states of the replication</span><br><span class="line">SQL thread and replication I/O thread. The rules governing such use are</span><br><span class="line">provided later <span class="keyword">in</span> this section.</span><br><span class="line"></span><br><span class="line">When using a multithreaded replica (<span class="keyword">in</span> other words</span><br><span class="line">slave_parallel_workers is greater than 0), stopping the replica can</span><br><span class="line">cause <span class="string">&quot;gaps&quot;</span> <span class="keyword">in</span> the sequence of transactions that have been executed</span><br><span class="line">from the relay <span class="built_in">log</span>, regardless of whether the replica was stopped</span><br><span class="line">intentionally or otherwise. When such gaps exist, issuing CHANGE MASTER</span><br><span class="line">TO fails. The solution <span class="keyword">in</span> this situation is to issue START SLAVE UNTIL</span><br><span class="line">SQL_AFTER_MTS_GAPS <span class="built_in">which</span> ensures that the gaps are closed.</span><br><span class="line"></span><br><span class="line">The optional FOR CHANNEL channel clause enables you to name <span class="built_in">which</span></span><br><span class="line">replication channel the statement applies to. Providing a FOR CHANNEL</span><br><span class="line">channel clause applies the CHANGE MASTER TO statement to a specific</span><br><span class="line">replication channel, and is used to add a new channel or modify an</span><br><span class="line">existing channel. For example, to add a new channel called channel2:</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO MASTER_HOST=host1, MASTER_PORT=3002 FOR CHANNEL <span class="string">&#x27;channel2&#x27;</span></span><br><span class="line"></span><br><span class="line">If no clause is named and no extra channels exist, the statement</span><br><span class="line">applies to the default channel.</span><br><span class="line"></span><br><span class="line">When using multiple replication channels, <span class="keyword">if</span> a CHANGE MASTER TO</span><br><span class="line">statement does not name a channel using a FOR CHANNEL channel clause,</span><br><span class="line">an error occurs. See</span><br><span class="line">https://dev.mysql.com/doc/refman/5.7/en/replication-channels.html <span class="keyword">for</span></span><br><span class="line">more information.</span><br><span class="line"></span><br><span class="line">Options not specified retain their value, except as indicated <span class="keyword">in</span> the</span><br><span class="line">following discussion. Thus, <span class="keyword">in</span> most cases, there is no need to specify</span><br><span class="line">options that <span class="keyword">do</span> not change. For example, <span class="keyword">if</span> the password to connect to</span><br><span class="line">your replication <span class="built_in">source</span> server has changed, issue this statement to</span><br><span class="line">tell the replica about the new password:</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO MASTER_PASSWORD=<span class="string">&#x27;new3cret&#x27;</span>;</span><br><span class="line"></span><br><span class="line">MASTER_HOST, MASTER_USER, MASTER_PASSWORD, and MASTER_PORT provide</span><br><span class="line">information to the replica about how to connect to its replication</span><br><span class="line"><span class="built_in">source</span> server:</span><br><span class="line"></span><br><span class="line">o MASTER_HOST and MASTER_PORT are the host name (or IP address) of the</span><br><span class="line">  master host and its TCP/IP port.</span><br><span class="line"></span><br><span class="line">  *Note*:</span><br><span class="line"></span><br><span class="line">  Replication cannot use Unix socket files. You must be able to connect</span><br><span class="line">  to the replication <span class="built_in">source</span> server using TCP/IP.</span><br><span class="line"></span><br><span class="line">  If you specify the MASTER_HOST or MASTER_PORT option, the replica</span><br><span class="line">  assumes that the <span class="built_in">source</span> is different from before (even <span class="keyword">if</span> the option</span><br><span class="line">  value is the same as its current value.) In this <span class="keyword">case</span>, the old values</span><br><span class="line">  <span class="keyword">for</span> the <span class="built_in">source</span><span class="string">&#x27;s binary log file name and position are considered no</span></span><br><span class="line"><span class="string">  longer applicable, so if you do not specify MASTER_LOG_FILE and</span></span><br><span class="line"><span class="string">  MASTER_LOG_POS in the statement, MASTER_LOG_FILE=&#x27;</span><span class="string">&#x27; and</span></span><br><span class="line"><span class="string">  MASTER_LOG_POS=4 are silently appended to it.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Setting MASTER_HOST=&#x27;</span><span class="string">&#x27; (that is, setting its value explicitly to an</span></span><br><span class="line"><span class="string">  empty string) is not the same as not setting MASTER_HOST at all.</span></span><br><span class="line"><span class="string">  Beginning with MySQL 5.5, trying to set MASTER_HOST to an empty</span></span><br><span class="line"><span class="string">  string fails with an error. Previously, setting MASTER_HOST to an</span></span><br><span class="line"><span class="string">  empty string caused START SLAVE subsequently to fail. (Bug #28796)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  Values used for MASTER_HOST and other CHANGE MASTER TO options are</span></span><br><span class="line"><span class="string">  checked for linefeed (\n or 0x0A) characters; the presence of such</span></span><br><span class="line"><span class="string">  characters in these values causes the statement to fail with</span></span><br><span class="line"><span class="string">  ER_MASTER_INFO</span></span><br><span class="line"><span class="string">  (https://dev.mysql.com/doc/mysql-errors/5.7/en/server-error-reference</span></span><br><span class="line"><span class="string">  .html#error_er_master_info). (Bug #11758581, Bug #50801)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">o MASTER_USER and MASTER_PASSWORD are the user name and password of the</span></span><br><span class="line"><span class="string">  account to use for connecting to the source. If you specify</span></span><br><span class="line"><span class="string">  MASTER_PASSWORD, MASTER_USER is also required. The password used for</span></span><br><span class="line"><span class="string">  a replication user account in a CHANGE MASTER TO statement is limited</span></span><br><span class="line"><span class="string">  to 32 characters in length; prior to MySQL 5.7.5, if the password was</span></span><br><span class="line"><span class="string">  longer, the statement succeeded, but any excess characters were</span></span><br><span class="line"><span class="string">  silently truncated. In MySQL 5.7.5 and later, trying to use a</span></span><br><span class="line"><span class="string">  password of more than 32 characters causes CHANGE MASTER TO to fail.</span></span><br><span class="line"><span class="string">  (Bug #11752299, Bug #43439)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  It is possible to set an empty user name by specifying</span></span><br><span class="line"><span class="string">  MASTER_USER=&#x27;</span><span class="string">&#x27;, but the replication channel cannot be started with an</span></span><br><span class="line"><span class="string">  empty user name. Only set an empty MASTER_USER user name if you need</span></span><br><span class="line"><span class="string">  to clear previously used credentials from the replica&#x27;</span>s repositories</span><br><span class="line">  <span class="keyword">for</span> security purposes, and <span class="keyword">do</span> not attempt to use the channel</span><br><span class="line">  afterwards.</span><br><span class="line"></span><br><span class="line">  The text of a running CHANGE MASTER TO statement, including values</span><br><span class="line">  <span class="keyword">for</span> MASTER_USER and MASTER_PASSWORD, can be seen <span class="keyword">in</span> the output of a</span><br><span class="line">  concurrent SHOW PROCESSLIST statement. (The complete text of a START</span><br><span class="line">  SLAVE statement is also visible to SHOW PROCESSLIST.)</span><br><span class="line"></span><br><span class="line">The MASTER_SSL_xxx options and the MASTER_TLS_VERSION option specify</span><br><span class="line">how the replica uses encryption and ciphers to secure the replication</span><br><span class="line">connection. These options can be changed even on replicas that are</span><br><span class="line">compiled without SSL support. They are saved to the <span class="built_in">source</span> metadata</span><br><span class="line">repository, but are ignored <span class="keyword">if</span> the replica does not have SSL support</span><br><span class="line">enabled. The MASTER_SSL_xxx and MASTER_TLS_VERSION options perform the</span><br><span class="line">same <span class="built_in">functions</span> as the --ssl-xxx and --tls-version client options</span><br><span class="line">described <span class="keyword">in</span></span><br><span class="line">https://dev.mysql.com/doc/refman/5.7/en/connection-options.html<span class="comment">#encrypt</span></span><br><span class="line">ed-connection-options. The correspondence between the two sets of</span><br><span class="line">options, and the use of the MASTER_SSL_xxx and MASTER_TLS_VERSION</span><br><span class="line">options to <span class="built_in">set</span> up a secure connection, is explained <span class="keyword">in</span></span><br><span class="line">https://dev.mysql.com/doc/refman/5.7/en/replication-solutions-encrypted</span><br><span class="line">-connections.html.</span><br><span class="line"></span><br><span class="line">As of MySQL 5.7.3, setting MASTER_SSL=1 means that the replica<span class="string">&#x27;s</span></span><br><span class="line"><span class="string">connection to the source must use SSL, or the connection attempt fails.</span></span><br><span class="line"><span class="string">Before 5.7.3, the use of an SSL connection by the replica was not</span></span><br><span class="line"><span class="string">enforced with MASTER_SSL=1. This is analogous to the client-side</span></span><br><span class="line"><span class="string">meaning of the --ssl command-line option; see</span></span><br><span class="line"><span class="string">https://dev.mysql.com/doc/refman/5.7/en/connection-options.html#encrypt</span></span><br><span class="line"><span class="string">ed-connection-options.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The MASTER_HEARTBEAT_PERIOD, MASTER_CONNECT_RETRY, and</span></span><br><span class="line"><span class="string">MASTER_RETRY_COUNT options control how the replica recognizes that the</span></span><br><span class="line"><span class="string">connection to the source has been lost and makes attempts to reconnect.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">o The slave_net_timeout system variable specifies the number of seconds</span></span><br><span class="line"><span class="string">  that the replica waits for either more data or a heartbeat signal</span></span><br><span class="line"><span class="string">  from the source, before the replica considers the connection broken,</span></span><br><span class="line"><span class="string">  aborts the read, and tries to reconnect. The default value is 60</span></span><br><span class="line"><span class="string">  seconds (one minute). Prior to MySQL 5.7.7, the default was 3600</span></span><br><span class="line"><span class="string">  seconds (one hour).</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">o The heartbeat interval, which stops the connection timeout occurring</span></span><br><span class="line"><span class="string">  in the absence of data if the connection is still good, is controlled</span></span><br><span class="line"><span class="string">  by the MASTER_HEARTBEAT_PERIOD option. A heartbeat signal is sent to</span></span><br><span class="line"><span class="string">  the replica after that number of seconds, and the waiting period is</span></span><br><span class="line"><span class="string">  reset whenever the source&#x27;</span>s binary <span class="built_in">log</span> is updated with an event.</span><br><span class="line">  Heartbeats are therefore sent by the <span class="built_in">source</span> only <span class="keyword">if</span> there are no</span><br><span class="line">  unsent events <span class="keyword">in</span> the binary <span class="built_in">log</span> file <span class="keyword">for</span> a period longer than this.</span><br><span class="line">  The heartbeat interval interval is a decimal value having the range 0</span><br><span class="line">  to 4294967 seconds and a resolution <span class="keyword">in</span> milliseconds; the smallest</span><br><span class="line">  nonzero value is 0.001. Setting interval to 0 disables heartbeats</span><br><span class="line">  altogether. The heartbeat interval defaults to half the value of the</span><br><span class="line">  slave_net_timeout system variable. It is recorded <span class="keyword">in</span> the <span class="built_in">source</span></span><br><span class="line">  metadata repository and shown <span class="keyword">in</span> the</span><br><span class="line">  replication_connection_configuration Performance Schema table.</span><br><span class="line">  Issuing RESET SLAVE resets the heartbeat interval to the default</span><br><span class="line">  value.</span><br><span class="line"></span><br><span class="line">o Prior to MySQL 5.7.4, not including MASTER_HEARTBEAT_PERIOD caused</span><br><span class="line">  CHANGE MASTER TO to reset the heartbeat interval to the default (half</span><br><span class="line">  the value of the slave_net_timeout system variable), and</span><br><span class="line">  Slave_received_heartbeats to 0. The heartbeat interval is now not</span><br><span class="line">  reset except by RESET SLAVE. (Bug <span class="comment">#18185490)</span></span><br><span class="line"></span><br><span class="line">o Note that a change to the value or default setting of</span><br><span class="line">  slave_net_timeout does not automatically change the heartbeat</span><br><span class="line">  interval, whether that has been <span class="built_in">set</span> explicitly or is using a</span><br><span class="line">  previously calculated default. A warning is issued <span class="keyword">if</span> you <span class="built_in">set</span></span><br><span class="line">  @@GLOBAL.slave_net_timeout to a value less than that of the current</span><br><span class="line">  heartbeat interval. If slave_net_timeout is changed, you must also</span><br><span class="line">  issue CHANGE MASTER TO to adjust the heartbeat interval to an</span><br><span class="line">  appropriate value so that the heartbeat signal occurs before the</span><br><span class="line">  connection <span class="built_in">timeout</span>. If you <span class="keyword">do</span> not <span class="keyword">do</span> this, the heartbeat signal has</span><br><span class="line">  no effect, and <span class="keyword">if</span> no data is received from the <span class="built_in">source</span>, the replica</span><br><span class="line">  can make repeated reconnection attempts, creating zombie dump</span><br><span class="line">  threads.</span><br><span class="line"></span><br><span class="line">o If the replica does need to reconnect, the first retry occurs</span><br><span class="line">  immediately after the <span class="built_in">timeout</span>. MASTER_CONNECT_RETRY specifies the</span><br><span class="line">  interval between reconnection attempts, and MASTER_RETRY_COUNT limits</span><br><span class="line">  the number of reconnection attempts. If both the default settings are</span><br><span class="line">  used, the replica waits 60 seconds between reconnection attempts</span><br><span class="line">  (MASTER_CONNECT_RETRY=60), and keeps attempting to reconnect at this</span><br><span class="line">  rate <span class="keyword">for</span> 60 days (MASTER_RETRY_COUNT=86400). A setting of 0 <span class="keyword">for</span></span><br><span class="line">  MASTER_RETRY_COUNT means that there is no <span class="built_in">limit</span> on the number of</span><br><span class="line">  reconnection attempts, so the replica keeps trying to reconnect</span><br><span class="line">  indefinitely. These values are recorded <span class="keyword">in</span> the <span class="built_in">source</span> metadata</span><br><span class="line">  repository and shown <span class="keyword">in</span> the replication_connection_configuration</span><br><span class="line">  Performance Schema table. MASTER_RETRY_COUNT supersedes the</span><br><span class="line">  --master-retry-count server startup option.</span><br><span class="line"></span><br><span class="line">MASTER_DELAY specifies how many seconds behind the <span class="built_in">source</span> the replica</span><br><span class="line">must lag. An event received from the <span class="built_in">source</span> is not executed <span class="keyword">until</span> at</span><br><span class="line">least interval seconds later than its execution on the <span class="built_in">source</span>. The</span><br><span class="line">default is 0. An error occurs <span class="keyword">if</span> interval is not a nonnegative <span class="built_in">integer</span></span><br><span class="line"><span class="keyword">in</span> the range from 0 to 231−1. For more information, see</span><br><span class="line">https://dev.mysql.com/doc/refman/5.7/en/replication-delayed.html.</span><br><span class="line"></span><br><span class="line">From MySQL 5.7, a CHANGE MASTER TO statement employing the MASTER_DELAY</span><br><span class="line">option can be executed on a running replica when the replication SQL</span><br><span class="line">thread is stopped.</span><br><span class="line"></span><br><span class="line">MASTER_BIND is <span class="keyword">for</span> use on replicas having multiple network interfaces,</span><br><span class="line">and determines <span class="built_in">which</span> of the replica<span class="string">&#x27;s network interfaces is chosen for</span></span><br><span class="line"><span class="string">connecting to the source.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The address configured with this option, if any, can be seen in the</span></span><br><span class="line"><span class="string">Master_Bind column of the output from SHOW SLAVE STATUS. If you are</span></span><br><span class="line"><span class="string">using a table for the source metadata repository (server started with</span></span><br><span class="line"><span class="string">master_info_repository=TABLE), the value can also be seen as the</span></span><br><span class="line"><span class="string">Master_bind column of the mysql.slave_master_info table.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The ability to bind a replica to a specific network interface is also</span></span><br><span class="line"><span class="string">supported by NDB Cluster.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">MASTER_LOG_FILE and MASTER_LOG_POS are the coordinates at which the</span></span><br><span class="line"><span class="string">replication I/O thread should begin reading from the source the next</span></span><br><span class="line"><span class="string">time the thread starts. RELAY_LOG_FILE and RELAY_LOG_POS are the</span></span><br><span class="line"><span class="string">coordinates at which the replication SQL thread should begin reading</span></span><br><span class="line"><span class="string">from the relay log the next time the thread starts. If you specify any</span></span><br><span class="line"><span class="string">of these options, you cannot specify MASTER_AUTO_POSITION = 1</span></span><br><span class="line"><span class="string">(described later in this section). If neither of MASTER_LOG_FILE or</span></span><br><span class="line"><span class="string">MASTER_LOG_POS is specified, the replica uses the last coordinates of</span></span><br><span class="line"><span class="string">the replication SQL thread before CHANGE MASTER TO was issued. This</span></span><br><span class="line"><span class="string">ensures that there is no discontinuity in replication, even if the</span></span><br><span class="line"><span class="string">replication SQL thread was late compared to the replication I/O thread,</span></span><br><span class="line"><span class="string">when you merely want to change, say, the password to use.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">From MySQL 5.7, a CHANGE MASTER TO statement employing RELAY_LOG_FILE,</span></span><br><span class="line"><span class="string">RELAY_LOG_POS, or both options can be executed on a running replica</span></span><br><span class="line"><span class="string">when the replication SQL thread is stopped. Prior to MySQL 5.7.4,</span></span><br><span class="line"><span class="string">CHANGE MASTER TO deletes all relay log files and starts a new one,</span></span><br><span class="line"><span class="string">unless you specify RELAY_LOG_FILE or RELAY_LOG_POS. In that case, relay</span></span><br><span class="line"><span class="string">log files are kept; the relay_log_purge global variable is set silently</span></span><br><span class="line"><span class="string">to 0. In MySQL 5.7.4 and later, relay logs are preserved if at least</span></span><br><span class="line"><span class="string">one of the replication SQL thread and the replication I/O thread is</span></span><br><span class="line"><span class="string">running. If both threads are stopped, all relay log files are deleted</span></span><br><span class="line"><span class="string">unless at least one of RELAY_LOG_FILE or RELAY_LOG_POS is specified.</span></span><br><span class="line"><span class="string">For the Group Replication applier channel (group_replication_applier),</span></span><br><span class="line"><span class="string">which only has an SQL thread and no I/O thread, this is the case if the</span></span><br><span class="line"><span class="string">SQL thread is stopped, but with that channel you cannot use the</span></span><br><span class="line"><span class="string">RELAY_LOG_FILE and RELAY_LOG_POS options.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">RELAY_LOG_FILE can use either an absolute or relative path, and uses</span></span><br><span class="line"><span class="string">the same base name as MASTER_LOG_FILE. (Bug #12190)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">When MASTER_AUTO_POSITION = 1 is used with CHANGE MASTER TO, the</span></span><br><span class="line"><span class="string">replica attempts to connect to the source using the auto-positioning</span></span><br><span class="line"><span class="string">feature of GTID-based replication, rather than a binary log file based</span></span><br><span class="line"><span class="string">position. From MySQL 5.7, this option can be employed by CHANGE MASTER</span></span><br><span class="line"><span class="string">TO only if both the replication SQL thread and the replication I/O</span></span><br><span class="line"><span class="string">thread are stopped. Both the replica and the source must have GTIDs</span></span><br><span class="line"><span class="string">enabled (GTID_MODE=ON, ON_PERMISSIVE, or OFF_PERMISSIVE on the replica,</span></span><br><span class="line"><span class="string">and GTID_MODE=ON on the source). MASTER_LOG_FILE, MASTER_LOG_POS,</span></span><br><span class="line"><span class="string">RELAY_LOG_FILE, and RELAY_LOG_POS cannot be specified together with</span></span><br><span class="line"><span class="string">MASTER_AUTO_POSITION = 1. If multi-source replication is enabled on the</span></span><br><span class="line"><span class="string">replica, you need to set the MASTER_AUTO_POSITION = 1 option for each</span></span><br><span class="line"><span class="string">applicable replication channel.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">With MASTER_AUTO_POSITION = 1 set, in the initial connection handshake,</span></span><br><span class="line"><span class="string">the replica sends a GTID set containing the transactions that it has</span></span><br><span class="line"><span class="string">already received, committed, or both. The source responds by sending</span></span><br><span class="line"><span class="string">all transactions recorded in its binary log whose GTID is not included</span></span><br><span class="line"><span class="string">in the GTID set sent by the replica. This exchange ensures that the</span></span><br><span class="line"><span class="string">source only sends the transactions with a GTID that the replica has not</span></span><br><span class="line"><span class="string">already recorded or committed. If the replica receives transactions</span></span><br><span class="line"><span class="string">from more than one source, as in the case of a diamond topology, the</span></span><br><span class="line"><span class="string">auto-skip function ensures that the transactions are not applied twice.</span></span><br><span class="line"><span class="string">For details of how the GTID set sent by the replica is computed, see</span></span><br><span class="line"><span class="string">https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-position</span></span><br><span class="line"><span class="string">ing.html.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If any of the transactions that should be sent by the source have been</span></span><br><span class="line"><span class="string">purged from the source&#x27;</span>s binary <span class="built_in">log</span>, or added to the <span class="built_in">set</span> of GTIDs <span class="keyword">in</span></span><br><span class="line">the gtid_purged system variable by another method, the <span class="built_in">source</span> sends the</span><br><span class="line">error ER_MASTER_HAS_PURGED_REQUIRED_GTIDS</span><br><span class="line">(https://dev.mysql.com/doc/mysql-errors/5.7/en/server-error-reference.h</span><br><span class="line">tml<span class="comment">#error_er_master_has_purged_required_gtids) to the replica, and</span></span><br><span class="line">replication does not start. Also, <span class="keyword">if</span> during the exchange of</span><br><span class="line">transactions it is found that the replica has recorded or committed</span><br><span class="line">transactions with the <span class="built_in">source</span><span class="string">&#x27;s UUID in the GTID, but the source itself</span></span><br><span class="line"><span class="string">has not committed them, the source sends the error</span></span><br><span class="line"><span class="string">ER_SLAVE_HAS_MORE_GTIDS_THAN_MASTER</span></span><br><span class="line"><span class="string">(https://dev.mysql.com/doc/mysql-errors/5.7/en/server-error-reference.h</span></span><br><span class="line"><span class="string">tml#error_er_slave_has_more_gtids_than_master) to the replica and</span></span><br><span class="line"><span class="string">replication does not start. For information on how to handle these</span></span><br><span class="line"><span class="string">situations, see</span></span><br><span class="line"><span class="string">https://dev.mysql.com/doc/refman/5.7/en/replication-gtids-auto-position</span></span><br><span class="line"><span class="string">ing.html.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">IGNORE_SERVER_IDS takes a comma-separated list of 0 or more server IDs.</span></span><br><span class="line"><span class="string">Events originating from the corresponding servers are ignored, with the</span></span><br><span class="line"><span class="string">exception of log rotation and deletion events, which are still recorded</span></span><br><span class="line"><span class="string">in the relay log.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In circular replication, the originating server normally acts as the</span></span><br><span class="line"><span class="string">terminator of its own events, so that they are not applied more than</span></span><br><span class="line"><span class="string">once. Thus, this option is useful in circular replication when one of</span></span><br><span class="line"><span class="string">the servers in the circle is removed. Suppose that you have a circular</span></span><br><span class="line"><span class="string">replication setup with 4 servers, having server IDs 1, 2, 3, and 4, and</span></span><br><span class="line"><span class="string">server 3 fails. When bridging the gap by starting replication from</span></span><br><span class="line"><span class="string">server 2 to server 4, you can include IGNORE_SERVER_IDS = (3) in the</span></span><br><span class="line"><span class="string">CHANGE MASTER TO statement that you issue on server 4 to tell it to use</span></span><br><span class="line"><span class="string">server 2 as its source instead of server 3. Doing so causes it to</span></span><br><span class="line"><span class="string">ignore and not to propagate any statements that originated with the</span></span><br><span class="line"><span class="string">server that is no longer in use.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If a CHANGE MASTER TO statement is issued without any IGNORE_SERVER_IDS</span></span><br><span class="line"><span class="string">option, any existing list is preserved. To clear the list of ignored</span></span><br><span class="line"><span class="string">servers, it is necessary to use the option with an empty list:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CHANGE MASTER TO IGNORE_SERVER_IDS = ();</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Prior to MySQL 5.7.5, RESET SLAVE ALL has no effect on the server ID</span></span><br><span class="line"><span class="string">list. In MySQL 5.7.5 and later, RESET SLAVE ALL clears</span></span><br><span class="line"><span class="string">IGNORE_SERVER_IDS. (Bug #18816897)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If IGNORE_SERVER_IDS contains the server&#x27;</span>s own ID and the server was</span><br><span class="line">started with the --replicate-same-server-id option enabled, an error</span><br><span class="line">results.</span><br><span class="line"></span><br><span class="line">The <span class="built_in">source</span> metadata repository and the output of SHOW SLAVE STATUS</span><br><span class="line">provide the list of servers that are currently ignored. For more</span><br><span class="line">information, see</span><br><span class="line">https://dev.mysql.com/doc/refman/5.7/en/replica-logs-status.html, and</span><br><span class="line">[HELP SHOW SLAVE STATUS].</span><br><span class="line"></span><br><span class="line">Invoking CHANGE MASTER TO causes the previous values <span class="keyword">for</span> MASTER_HOST,</span><br><span class="line">MASTER_PORT, MASTER_LOG_FILE, and MASTER_LOG_POS to be written to the</span><br><span class="line">error <span class="built_in">log</span>, along with other information about the replica<span class="string">&#x27;s state prior</span></span><br><span class="line"><span class="string">to execution.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CHANGE MASTER TO causes an implicit commit of an ongoing transaction.</span></span><br><span class="line"><span class="string">See https://dev.mysql.com/doc/refman/5.7/en/implicit-commit.html.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">In MySQL 5.7.4 and later, the strict requirement to execute STOP SLAVE</span></span><br><span class="line"><span class="string">prior to issuing any CHANGE MASTER TO statement (and START SLAVE</span></span><br><span class="line"><span class="string">afterward) is removed. Instead of depending on whether the replica is</span></span><br><span class="line"><span class="string">stopped, the behavior of CHANGE MASTER TO depends (in MySQL 5.7.4 and</span></span><br><span class="line"><span class="string">later) on the states of the replication SQL thread and the replication</span></span><br><span class="line"><span class="string">I/O thread; which of these threads is stopped or running now determines</span></span><br><span class="line"><span class="string">the options that can or cannot be used with a CHANGE MASTER TO</span></span><br><span class="line"><span class="string">statement at a given point in time. The rules for making this</span></span><br><span class="line"><span class="string">determination are listed here:</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">o If the SQL thread is stopped, you can execute CHANGE MASTER TO using</span></span><br><span class="line"><span class="string">  any combination that is otherwise allowed of RELAY_LOG_FILE,</span></span><br><span class="line"><span class="string">  RELAY_LOG_POS, and MASTER_DELAY options, even if the replication I/O</span></span><br><span class="line"><span class="string">  thread is running. No other options may be used with this statement</span></span><br><span class="line"><span class="string">  when the I/O thread is running.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">o If the I/O thread is stopped, you can execute CHANGE MASTER TO using</span></span><br><span class="line"><span class="string">  any of the options for this statement (in any allowed combination)</span></span><br><span class="line"><span class="string">  except RELAY_LOG_FILE, RELAY_LOG_POS, MASTER_DELAY, or</span></span><br><span class="line"><span class="string">  MASTER_AUTO_POSITION = 1 even when the SQL thread is running.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">o Both the SQL thread and the I/O thread must be stopped before issuing</span></span><br><span class="line"><span class="string">  a CHANGE MASTER TO statement that employs MASTER_AUTO_POSITION = 1.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">You can check the current state of the replication SQL thread and the</span></span><br><span class="line"><span class="string">replication I/O thread using SHOW SLAVE STATUS. Note that the Group</span></span><br><span class="line"><span class="string">Replication applier channel (group_replication_applier) has no I/O</span></span><br><span class="line"><span class="string">thread, only an SQL thread.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">For more information, see</span></span><br><span class="line"><span class="string">https://dev.mysql.com/doc/refman/5.7/en/replication-solutions-switch.ht</span></span><br><span class="line"><span class="string">ml.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">If you are using statement-based replication and temporary tables, it</span></span><br><span class="line"><span class="string">is possible for a CHANGE MASTER TO statement following a STOP SLAVE</span></span><br><span class="line"><span class="string">statement to leave behind temporary tables on the replica. From MySQL</span></span><br><span class="line"><span class="string">5.7, a warning (ER_WARN_OPEN_TEMP_TABLES_MUST_BE_ZERO</span></span><br><span class="line"><span class="string">(https://dev.mysql.com/doc/mysql-errors/5.7/en/server-error-reference.h</span></span><br><span class="line"><span class="string">tml#error_er_warn_open_temp_tables_must_be_zero)) is issued whenever</span></span><br><span class="line"><span class="string">this occurs. You can avoid this in such cases by making sure that the</span></span><br><span class="line"><span class="string">value of the Slave_open_temp_tables system status variable is equal to</span></span><br><span class="line"><span class="string">0 prior to executing such a CHANGE MASTER TO statement.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">CHANGE MASTER TO is useful for setting up a replica when you have the</span></span><br><span class="line"><span class="string">snapshot of the replication source server and have recorded the</span></span><br><span class="line"><span class="string">source&#x27;</span>s binary <span class="built_in">log</span> coordinates corresponding to the time of the</span><br><span class="line">snapshot. After loading the snapshot into the replica to synchronize it</span><br><span class="line">with the <span class="built_in">source</span>, you can run CHANGE MASTER TO</span><br><span class="line">MASTER_LOG_FILE=<span class="string">&#x27;log_name&#x27;</span>, MASTER_LOG_POS=log_pos on the replica to</span><br><span class="line">specify the coordinates at <span class="built_in">which</span> the replica should begin reading the</span><br><span class="line"><span class="built_in">source</span><span class="string">&#x27;s binary log.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">The following example changes the replication source server the replica</span></span><br><span class="line"><span class="string">uses and establishes the source&#x27;</span>s binary <span class="built_in">log</span> coordinates from <span class="built_in">which</span> the</span><br><span class="line">replica begins reading. This is used when you want to <span class="built_in">set</span> up the</span><br><span class="line">replica to replicate the <span class="built_in">source</span>:</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  MASTER_HOST=<span class="string">&#x27;source2.example.com&#x27;</span>,</span><br><span class="line">  MASTER_USER=<span class="string">&#x27;replication&#x27;</span>,</span><br><span class="line">  MASTER_PASSWORD=<span class="string">&#x27;password&#x27;</span>,</span><br><span class="line">  MASTER_PORT=3306,</span><br><span class="line">  MASTER_LOG_FILE=<span class="string">&#x27;source2-bin.001&#x27;</span>,</span><br><span class="line">  MASTER_LOG_POS=4,</span><br><span class="line">  MASTER_CONNECT_RETRY=10;</span><br><span class="line"></span><br><span class="line">The next example shows an operation that is less frequently employed.</span><br><span class="line">It is used when the replica has relay <span class="built_in">log</span> files that you want it to</span><br><span class="line">execute again <span class="keyword">for</span> some reason. To <span class="keyword">do</span> this, the <span class="built_in">source</span> need not be</span><br><span class="line">reachable. You need only use CHANGE MASTER TO and start the SQL thread</span><br><span class="line">(START SLAVE SQL_THREAD):</span><br><span class="line"></span><br><span class="line">CHANGE MASTER TO</span><br><span class="line">  RELAY_LOG_FILE=<span class="string">&#x27;replica-relay-bin.006&#x27;</span>,</span><br><span class="line">  RELAY_LOG_POS=4025;</span><br><span class="line"></span><br><span class="line">URL: https://dev.mysql.com/doc/refman/5.7/en/change-master-to.html</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">mysql&gt; CHANGE MASTER TO MASTER_HOST=<span class="string">&#x27;10.0.0.100&#x27;</span>,</span><br><span class="line">    -&gt; MASTER_USER=<span class="string">&#x27;repluser&#x27;</span>,MASTER_PASSWORD=<span class="string">&#x27;test123&#x27;</span>,MASTER_PORT=3306,</span><br><span class="line">    -&gt; MASTER_LOG_FILE=<span class="string">&#x27;mysql-bin.000003&#x27;</span>,MASTER_LOG_POS=154;</span><br><span class="line">mysql&gt; start slave;</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="验证数据库的主从复制"><a href="#验证数据库的主从复制" class="headerlink" title="验证数据库的主从复制"></a>验证数据库的主从复制</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在从数据库查看主从复制的状态</span></span><br><span class="line">mysql&gt; show slave status\G</span><br><span class="line">*************************** 1. row ***************************</span><br><span class="line">               Slave_IO_State: Waiting <span class="keyword">for</span> master to send event</span><br><span class="line">                  Master_Host: 10.0.0.100</span><br><span class="line">                  Master_User: repluser</span><br><span class="line">                  Master_Port: 3306</span><br><span class="line">                Connect_Retry: 60</span><br><span class="line">              Master_Log_File: mysql-bin.000003</span><br><span class="line">          Read_Master_Log_Pos: 448</span><br><span class="line">               Relay_Log_File: slave-mysql-relay-bin.000002</span><br><span class="line">                Relay_Log_Pos: 614</span><br><span class="line">        Relay_Master_Log_File: mysql-bin.000003</span><br><span class="line">             Slave_IO_Running: Yes   <span class="comment">#这行和下面一行都是YES，基本上就可以保证了主从复制正确配置了</span></span><br><span class="line">            Slave_SQL_Running: Yes</span><br><span class="line">              Replicate_Do_DB: </span><br><span class="line">          Replicate_Ignore_DB: </span><br><span class="line">           Replicate_Do_Table: </span><br><span class="line">       Replicate_Ignore_Table: </span><br><span class="line">      Replicate_Wild_Do_Table: </span><br><span class="line">  Replicate_Wild_Ignore_Table: </span><br><span class="line">                   Last_Errno: 0</span><br><span class="line">                   Last_Error: </span><br><span class="line">                 Skip_Counter: 0</span><br><span class="line">          Exec_Master_Log_Pos: 448</span><br><span class="line">              Relay_Log_Space: 827</span><br><span class="line">              Until_Condition: None</span><br><span class="line">               Until_Log_File: </span><br><span class="line">                Until_Log_Pos: 0</span><br><span class="line">           Master_SSL_Allowed: No</span><br><span class="line">           Master_SSL_CA_File: </span><br><span class="line">           Master_SSL_CA_Path: </span><br><span class="line">              Master_SSL_Cert: </span><br><span class="line">            Master_SSL_Cipher: </span><br><span class="line">               Master_SSL_Key: </span><br><span class="line">        Seconds_Behind_Master: 0</span><br><span class="line">Master_SSL_Verify_Server_Cert: No</span><br><span class="line">                Last_IO_Errno: 0</span><br><span class="line">                Last_IO_Error: </span><br><span class="line">               Last_SQL_Errno: 0</span><br><span class="line">               Last_SQL_Error: </span><br><span class="line">  Replicate_Ignore_Server_Ids: </span><br><span class="line">             Master_Server_Id: 100</span><br><span class="line">                  Master_UUID: 5dbf2da8-9d23-11ec-90d9-000c295e72f9</span><br><span class="line">             Master_Info_File: /var/lib/mysql/master.info</span><br><span class="line">                    SQL_Delay: 0</span><br><span class="line">          SQL_Remaining_Delay: NULL</span><br><span class="line">      Slave_SQL_Running_State: Slave has <span class="built_in">read</span> all relay <span class="built_in">log</span>; waiting <span class="keyword">for</span> more updates</span><br><span class="line">           Master_Retry_Count: 86400</span><br><span class="line">                  Master_Bind: </span><br><span class="line">      Last_IO_Error_Timestamp: </span><br><span class="line">     Last_SQL_Error_Timestamp: </span><br><span class="line">               Master_SSL_Crl: </span><br><span class="line">           Master_SSL_Crlpath: </span><br><span class="line">           Retrieved_Gtid_Set: </span><br><span class="line">            Executed_Gtid_Set: </span><br><span class="line">                Auto_Position: 0</span><br><span class="line">         Replicate_Rewrite_DB: </span><br><span class="line">                 Channel_Name: </span><br><span class="line">           Master_TLS_Version: </span><br><span class="line">1 row <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在主数据库内创建新数据库testdb,在从数据库验证正确复制</span></span><br><span class="line">mysql&gt; create database testdb;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line"></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| testdb             |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.01 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#在从数据库中查看是否复制成功</span></span><br><span class="line">mysql&gt; show databases;</span><br><span class="line">+--------------------+</span><br><span class="line">| Database           |</span><br><span class="line">+--------------------+</span><br><span class="line">| information_schema |</span><br><span class="line">| mysql              |</span><br><span class="line">| performance_schema |</span><br><span class="line">| sys                |</span><br><span class="line">| testdb             |</span><br><span class="line">+--------------------+</span><br><span class="line">5 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line"><span class="comment">#从上述查看结果MySQL5.7主从复制的配置已经成功了</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>创建私有CA</title>
      <link href="/post/fa30b568.html"/>
      <url>/post/fa30b568.html</url>
      
        <content type="html"><![CDATA[<h1 id="创建私有CA并进行证书申请"><a href="#创建私有CA并进行证书申请" class="headerlink" title="创建私有CA并进行证书申请"></a>创建私有CA并进行证书申请</h1><h2 id="创建CA相关的文件和目录"><a href="#创建CA相关的文件和目录" class="headerlink" title="创建CA相关的文件和目录"></a>创建CA相关的文件和目录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos8 ~]<span class="comment"># mkdir -pv /etc/pki/CA/&#123;certs,crl,newcerts,private&#125;</span></span><br><span class="line"><span class="built_in">mkdir</span>: created directory <span class="string">&#x27;/etc/pki/CA&#x27;</span></span><br><span class="line"><span class="built_in">mkdir</span>: created directory <span class="string">&#x27;/etc/pki/CA/certs&#x27;</span></span><br><span class="line"><span class="built_in">mkdir</span>: created directory <span class="string">&#x27;/etc/pki/CA/crl&#x27;</span></span><br><span class="line"><span class="built_in">mkdir</span>: created directory <span class="string">&#x27;/etc/pki/CA/newcerts&#x27;</span></span><br><span class="line"><span class="built_in">mkdir</span>: created directory <span class="string">&#x27;/etc/pki/CA/private&#x27;</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># tree /etc/pki/CA/</span></span><br><span class="line">/etc/pki/CA/</span><br><span class="line">├── certs</span><br><span class="line">├── crl</span><br><span class="line">├── newcerts</span><br><span class="line">└── private</span><br><span class="line"></span><br><span class="line">4 directories, 0 files</span><br><span class="line">[root@Centos8 ~]<span class="comment"># touch /etc/pki/CA/index.txt &amp;&amp; echo 0F &gt; /etc/pki/CA/serial</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># tree /etc/pki/CA/</span></span><br><span class="line">/etc/pki/CA/</span><br><span class="line">├── certs</span><br><span class="line">├── crl</span><br><span class="line">├── index.txt</span><br><span class="line">├── newcerts</span><br><span class="line">├── private</span><br><span class="line">└── serial</span><br><span class="line"></span><br><span class="line">4 directories, 2 files</span><br></pre></td></tr></table></figure><h2 id="创建CA的私钥"><a href="#创建CA的私钥" class="headerlink" title="创建CA的私钥"></a>创建CA的私钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos8 ~]<span class="comment"># cd /etc/pki/CA/</span></span><br><span class="line">[root@Centos8 CA]<span class="comment"># (umask 066; openssl genrsa -out private/cakey.pem 2048)</span></span><br><span class="line">Generating RSA private key, 2048 bit long modulus (2 primes)</span><br><span class="line">................+++++</span><br><span class="line">.....+++++</span><br><span class="line">e is 65537 (0x010001)</span><br><span class="line">[root@Centos8 CA]<span class="comment"># tree /etc/pki/CA/</span></span><br><span class="line">/etc/pki/CA/</span><br><span class="line">├── certs</span><br><span class="line">├── crl</span><br><span class="line">├── index.txt</span><br><span class="line">├── newcerts</span><br><span class="line">├── private</span><br><span class="line">│   └── cakey.pem</span><br><span class="line">└── serial</span><br><span class="line"></span><br><span class="line">4 directories, 3 files</span><br><span class="line">[root@Centos8 CA]<span class="comment"># ll private/</span></span><br><span class="line">total 4</span><br><span class="line">-rw------- 1 root root 1679 Jan 16 14:10 cakey.pem</span><br><span class="line">[root@Centos8 CA]<span class="comment"># cat private/cakey.pem </span></span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEpAIBAAKCAQEAvNrGunjAXN/YvoGRy4143YBdfvcEjc3yY/51vWIN7WgA7Xbm</span><br><span class="line">xrYhcGicdKOZhb5087fG0zM7wA4RmmmX8mVyLemonAlB/2FuXSesDYfeqmI2kb0O</span><br><span class="line">dESKWKMcPTre/MAhf15+M8bEN87/xqDWXCutKY5cjnujXmtTfX7rS4PYf/I8Jz4U</span><br><span class="line">oOPhK0dM5DFLkbjB1G8I9ffAlrPgfE6G9gkL6owrH5Tsl0WraHlq7qlf9Cz5PfDF</span><br><span class="line">rFTGc4TI6gaAT6OUmNxfprzSWJI8Nuh2EGVfXEGD0o40rwMBg/e4xeWmbTeu09kx</span><br><span class="line">lKZx5V4vCT6P4i5hdxZhZThRdZDTm8e1TCRiJwIDAQABAoIBAQCXT0HBzVVyE/b4</span><br><span class="line">S5+gUuzvqxU90HPZmZQHAa0b2yAFgjqcB5PGyc3o3ifcW+d4/Kt/SVMHjBjnO15n</span><br><span class="line">NQsErrrYhkkNG23BSzK9eDelb6K7KI1IHw0honilo6nQdQaLwvQTtIWwviQgAr1z</span><br><span class="line">SxH0LxpCHUmS7wRpddwixDmI+03O08fzTdVbIS5kvZ/8i4TtYB5sV1rMXW84dyK/</span><br><span class="line">xXaJd0IHpp5VtGsEhKT0m3r5S3NJcAUYIpsylc8pHekh6zn2Db6ApZkFSPV+Lj5D</span><br><span class="line">yo+3hOxxfPJCcd3O5AnuuyHIAWl4o1NwMD0C4tifeSJv4eIfE1TdHvU9Ov875gmw</span><br><span class="line">MQy/V2pBAoGBAPF7ooaSiTsDlefRbW1ho/3NCS11Ri2I5Qv4llHThkQqv9AdLFHA</span><br><span class="line">6c1RKIQX0QuRZyJ7JKBuhSGaWJXBqqmtvjKEEVJV4nLMGykXskaNNPH6k6QC5vWq</span><br><span class="line">BKhGzlTmr2C5AiOteCvvt0lFIP5Qws+ma05x5r8ggbWOyEIV4J09CA/vAoGBAMg1</span><br><span class="line">NB07x+j/cPAXSrwxHA91pv9jKrO6y/yYld+G9LFT1UwRyDf1bUaEXi854f/rU+Wo</span><br><span class="line">146pjbgpC/jPIuTN0MRbzHevHXIjWg3JuzWvM5sy8jWzMxefSF+VPv7gWNd9RMso</span><br><span class="line">O7WS/kZk0/gGI1HtOKGieAhSAyu2jKG32lrPzplJAoGBAN6w6kd52Q3QF6zpaCVn</span><br><span class="line">1siWDbGbJbWWOcuZWl5pV7eDSNJOJPHbmoDaKCfworotQ9P7heJhKWq8oJayO4Uw</span><br><span class="line">kWaafjLUuvismxuBG8mOLNY+A2tLtdu1B4h7i4mmFvN2ia+HKHw0G215T5zXs1+1</span><br><span class="line">E94KkgWNn7Bj1O+Ep1e50baHAoGAbpPcHc1X49u6IBFtSLYDHpLH0sSN4Ejqw6/v</span><br><span class="line">D091tL9tzp7/q9CVM16GuqTIq1Xpt63iqLwDN1UMdLbLOf5nMRzWuL/yjojyAy2J</span><br><span class="line">heQnp6+i0YARVxm1mn1PFu0IhLR+m4q0N9xhLrYf0Rxqw6Q3JCcdDtNlRu6DjAqE</span><br><span class="line">wqWGIWkCgYAMs+Dqm8Hbsp/0bBskRpVj1kFD/GU7UdoqtWga61MKkAqTN3fjim2J</span><br><span class="line">eYrK0PZmrIjBs3/35HqFqTvHNA9a6utlVxCOx+4s2ppiI7ftiZ9zvqRMmIk5Zl3s</span><br><span class="line">TcZ1bB9qgtDH9xnkt0hoAWM0cc4ZpilbuKiu0L4JaVOWLLoJsy854Q==</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br></pre></td></tr></table></figure><h2 id="给CA颁发自签名证书"><a href="#给CA颁发自签名证书" class="headerlink" title="给CA颁发自签名证书"></a>给CA颁发自签名证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos8 CA]<span class="comment"># openssl req -new -x509 -key /etc/pki/CA/private/cakey.pem -days 3650 -out /etc/pki/CA/cacert.pem</span></span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:GuangDong         </span><br><span class="line">Locality Name (eg, city) [Default City]:ShenZhen</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:StarsInfo</span><br><span class="line">Organizational Unit Name (eg, section) []:IT</span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) []:ca.starsinfo.com</span></span><br><span class="line"><span class="string">Email Address []:admin@starsinfo.com</span></span><br><span class="line"><span class="string">[root@Centos8 CA]# tree /etc/pki/CA/</span></span><br><span class="line"><span class="string">/etc/pki/CA/</span></span><br><span class="line"><span class="string">├── cacert.pem</span></span><br><span class="line"><span class="string">├── certs</span></span><br><span class="line"><span class="string">├── crl</span></span><br><span class="line"><span class="string">├── index.txt</span></span><br><span class="line"><span class="string">├── newcerts</span></span><br><span class="line"><span class="string">├── private</span></span><br><span class="line"><span class="string">│   └── cakey.pem</span></span><br><span class="line"><span class="string">└── serial</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">4 directories, 4 files</span></span><br><span class="line"><span class="string">[root@Centos8 CA]# cat cacert.pem </span></span><br><span class="line"><span class="string">-----BEGIN CERTIFICATE-----</span></span><br><span class="line"><span class="string">MIIECzCCAvOgAwIBAgIUVj7oOHDSPLFu+RzQ6tlHdgoF8KgwDQYJKoZIhvcNAQEL</span></span><br><span class="line"><span class="string">BQAwgZQxCzAJBgNVBAYTAkNOMRIwEAYDVQQIDAlHdWFuZ0RvbmcxETAPBgNVBAcM</span></span><br><span class="line"><span class="string">CFNoZW5aaGVuMRIwEAYDVQQKDAlTdGFyc0luZm8xCzAJBgNVBAsMAklUMRkwFwYD</span></span><br><span class="line"><span class="string">VQQDDBBjYS5zdGFyc2luZm8uY29tMSIwIAYJKoZIhvcNAQkBFhNhZG1pbkBzdGFy</span></span><br><span class="line"><span class="string">c2luZm8uY29tMB4XDTIyMDExNjA2MjIwN1oXDTMyMDExNDA2MjIwN1owgZQxCzAJ</span></span><br><span class="line"><span class="string">BgNVBAYTAkNOMRIwEAYDVQQIDAlHdWFuZ0RvbmcxETAPBgNVBAcMCFNoZW5aaGVu</span></span><br><span class="line"><span class="string">MRIwEAYDVQQKDAlTdGFyc0luZm8xCzAJBgNVBAsMAklUMRkwFwYDVQQDDBBjYS5z</span></span><br><span class="line"><span class="string">dGFyc2luZm8uY29tMSIwIAYJKoZIhvcNAQkBFhNhZG1pbkBzdGFyc2luZm8uY29t</span></span><br><span class="line"><span class="string">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAvNrGunjAXN/YvoGRy414</span></span><br><span class="line"><span class="string">3YBdfvcEjc3yY/51vWIN7WgA7XbmxrYhcGicdKOZhb5087fG0zM7wA4RmmmX8mVy</span></span><br><span class="line"><span class="string">LemonAlB/2FuXSesDYfeqmI2kb0OdESKWKMcPTre/MAhf15+M8bEN87/xqDWXCut</span></span><br><span class="line"><span class="string">KY5cjnujXmtTfX7rS4PYf/I8Jz4UoOPhK0dM5DFLkbjB1G8I9ffAlrPgfE6G9gkL</span></span><br><span class="line"><span class="string">6owrH5Tsl0WraHlq7qlf9Cz5PfDFrFTGc4TI6gaAT6OUmNxfprzSWJI8Nuh2EGVf</span></span><br><span class="line"><span class="string">XEGD0o40rwMBg/e4xeWmbTeu09kxlKZx5V4vCT6P4i5hdxZhZThRdZDTm8e1TCRi</span></span><br><span class="line"><span class="string">JwIDAQABo1MwUTAdBgNVHQ4EFgQUbYHI2fo+24tptt5uAWPdmk+9hBswHwYDVR0j</span></span><br><span class="line"><span class="string">BBgwFoAUbYHI2fo+24tptt5uAWPdmk+9hBswDwYDVR0TAQH/BAUwAwEB/zANBgkq</span></span><br><span class="line"><span class="string">hkiG9w0BAQsFAAOCAQEAsT0BXU/BHeKY+vHAfFKN//Iv8UiwhvtQpkkWddv50cE0</span></span><br><span class="line"><span class="string">pSPOYLCD4UGOWPa+Jg3kI92wdrouJNg3XJmYvmlBCQtYbDiDuBdm3NKrNMpjXSg7</span></span><br><span class="line"><span class="string">IJdYZhLEbCNpkFp8eh+5s3BpZMatCaBkXz4LlpMr5gilbEmRTcQFx1PVHt7/si1K</span></span><br><span class="line"><span class="string">iaDx2Zz7kO0vc3zFAbUTim8qGL31kHc2t/bL+VRj+VUbJP+gfpVPsTGTno78WMJx</span></span><br><span class="line"><span class="string">XapLKD2uVNbpts86JYp7e+CAV9ODkbGjBoDgyyIdhBXqUUV4X5IbOrktrETWDSjl</span></span><br><span class="line"><span class="string">RFOqcKH71jwioEs0yST72xapq47ZDWjZVRwEZ8vsQA==</span></span><br><span class="line"><span class="string">-----END CERTIFICATE-----</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@Centos8 CA]# openssl x509 -in /etc/pki/CA/cacert.pem -noout -text</span></span><br><span class="line"><span class="string">Certificate:</span></span><br><span class="line"><span class="string">    Data:</span></span><br><span class="line"><span class="string">        Version: 3 (0x2)</span></span><br><span class="line"><span class="string">        Serial Number:</span></span><br><span class="line"><span class="string">            56:3e:e8:38:70:d2:3c:b1:6e:f9:1c:d0:ea:d9:47:76:0a:05:f0:a8</span></span><br><span class="line"><span class="string">        Signature Algorithm: sha256WithRSAEncryption</span></span><br><span class="line"><span class="string">        Issuer: C = CN, ST = GuangDong, L = ShenZhen, O = StarsInfo, OU = IT, CN = ca.starsinfo.com, emailAddress = admin@starsinfo.com</span></span><br><span class="line"><span class="string">        Validity</span></span><br><span class="line"><span class="string">            Not Before: Jan 16 06:22:07 2022 GMT</span></span><br><span class="line"><span class="string">            Not After : Jan 14 06:22:07 2032 GMT</span></span><br><span class="line"><span class="string">        Subject: C = CN, ST = GuangDong, L = ShenZhen, O = StarsInfo, OU = IT, CN = ca.starsinfo.com, emailAddress = admin@starsinfo.com</span></span><br><span class="line"><span class="string">        Subject Public Key Info:</span></span><br><span class="line"><span class="string">            Public Key Algorithm: rsaEncryption</span></span><br><span class="line"><span class="string">                RSA Public-Key: (2048 bit)</span></span><br><span class="line"><span class="string">                Modulus:</span></span><br><span class="line"><span class="string">                    00:bc:da:c6:ba:78:c0:5c:df:d8:be:81:91:cb:8d:</span></span><br><span class="line"><span class="string">                    78:dd:80:5d:7e:f7:04:8d:cd:f2:63:fe:75:bd:62:</span></span><br><span class="line"><span class="string">                    0d:ed:68:00:ed:76:e6:c6:b6:21:70:68:9c:74:a3:</span></span><br><span class="line"><span class="string">                    99:85:be:74:f3:b7:c6:d3:33:3b:c0:0e:11:9a:69:</span></span><br><span class="line"><span class="string">                    97:f2:65:72:2d:e9:a8:9c:09:41:ff:61:6e:5d:27:</span></span><br><span class="line"><span class="string">                    ac:0d:87:de:aa:62:36:91:bd:0e:74:44:8a:58:a3:</span></span><br><span class="line"><span class="string">                    1c:3d:3a:de:fc:c0:21:7f:5e:7e:33:c6:c4:37:ce:</span></span><br><span class="line"><span class="string">                    ff:c6:a0:d6:5c:2b:ad:29:8e:5c:8e:7b:a3:5e:6b:</span></span><br><span class="line"><span class="string">                    53:7d:7e:eb:4b:83:d8:7f:f2:3c:27:3e:14:a0:e3:</span></span><br><span class="line"><span class="string">                    e1:2b:47:4c:e4:31:4b:91:b8:c1:d4:6f:08:f5:f7:</span></span><br><span class="line"><span class="string">                    c0:96:b3:e0:7c:4e:86:f6:09:0b:ea:8c:2b:1f:94:</span></span><br><span class="line"><span class="string">                    ec:97:45:ab:68:79:6a:ee:a9:5f:f4:2c:f9:3d:f0:</span></span><br><span class="line"><span class="string">                    c5:ac:54:c6:73:84:c8:ea:06:80:4f:a3:94:98:dc:</span></span><br><span class="line"><span class="string">                    5f:a6:bc:d2:58:92:3c:36:e8:76:10:65:5f:5c:41:</span></span><br><span class="line"><span class="string">                    83:d2:8e:34:af:03:01:83:f7:b8:c5:e5:a6:6d:37:</span></span><br><span class="line"><span class="string">                    ae:d3:d9:31:94:a6:71:e5:5e:2f:09:3e:8f:e2:2e:</span></span><br><span class="line"><span class="string">                    61:77:16:61:65:38:51:75:90:d3:9b:c7:b5:4c:24:</span></span><br><span class="line"><span class="string">                    62:27</span></span><br><span class="line"><span class="string">                Exponent: 65537 (0x10001)</span></span><br><span class="line"><span class="string">        X509v3 extensions:</span></span><br><span class="line"><span class="string">            X509v3 Subject Key Identifier: </span></span><br><span class="line"><span class="string">                6D:81:C8:D9:FA:3E:DB:8B:69:B6:DE:6E:01:63:DD:9A:4F:BD:84:1B</span></span><br><span class="line"><span class="string">            X509v3 Authority Key Identifier: </span></span><br><span class="line"><span class="string">                keyid:6D:81:C8:D9:FA:3E:DB:8B:69:B6:DE:6E:01:63:DD:9A:4F:BD:84:1B</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">            X509v3 Basic Constraints: critical</span></span><br><span class="line"><span class="string">                CA:TRUE</span></span><br><span class="line"><span class="string">    Signature Algorithm: sha256WithRSAEncryption</span></span><br><span class="line"><span class="string">         b1:3d:01:5d:4f:c1:1d:e2:98:fa:f1:c0:7c:52:8d:ff:f2:2f:</span></span><br><span class="line"><span class="string">         f1:48:b0:86:fb:50:a6:49:16:75:db:f9:d1:c1:34:a5:23:ce:</span></span><br><span class="line"><span class="string">         60:b0:83:e1:41:8e:58:f6:be:26:0d:e4:23:dd:b0:76:ba:2e:</span></span><br><span class="line"><span class="string">         24:d8:37:5c:99:98:be:69:41:09:0b:58:6c:38:83:b8:17:66:</span></span><br><span class="line"><span class="string">         dc:d2:ab:34:ca:63:5d:28:3b:20:97:58:66:12:c4:6c:23:69:</span></span><br><span class="line"><span class="string">         90:5a:7c:7a:1f:b9:b3:70:69:64:c6:ad:09:a0:64:5f:3e:0b:</span></span><br><span class="line"><span class="string">         96:93:2b:e6:08:a5:6c:49:91:4d:c4:05:c7:53:d5:1e:de:ff:</span></span><br><span class="line"><span class="string">         b2:2d:4a:89:a0:f1:d9:9c:fb:90:ed:2f:73:7c:c5:01:b5:13:</span></span><br><span class="line"><span class="string">         8a:6f:2a:18:bd:f5:90:77:36:b7:f6:cb:f9:54:63:f9:55:1b:</span></span><br><span class="line"><span class="string">         24:ff:a0:7e:95:4f:b1:31:93:9e:8e:fc:58:c2:71:5d:aa:4b:</span></span><br><span class="line"><span class="string">         28:3d:ae:54:d6:e9:b6:cf:3a:25:8a:7b:7b:e0:80:57:d3:83:</span></span><br><span class="line"><span class="string">         91:b1:a3:06:80:e0:cb:22:1d:84:15:ea:51:45:78:5f:92:1b:</span></span><br><span class="line"><span class="string">         3a:b9:2d:ac:44:d6:0d:28:e5:44:53:aa:70:a1:fb:d6:3c:22:</span></span><br><span class="line"><span class="string">         a0:4b:34:c9:24:fb:db:16:a9:ab:8e:d9:0d:68:d9:55:1c:04:</span></span><br><span class="line"><span class="string">         67:cb:ec:40</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">[root@Centos8 CA]# sz /etc/pki/CA/cacert.pem</span></span><br><span class="line"><span class="string">#将文件cacert.pem传到windows上，修改文件名为cacert.pem.crt，双击可以看到下面显示</span></span><br></pre></td></tr></table></figure><p><img src="/images/cacert1.png"></p><h2 id="用户生成私钥，并证书申请"><a href="#用户生成私钥，并证书申请" class="headerlink" title="用户生成私钥，并证书申请"></a>用户生成私钥，并证书申请</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos8 ~]<span class="comment"># mkdir /data/app1</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># (umask 066; openssl genrsa -out /data/app1/app1.key 2048)</span></span><br><span class="line">Generating RSA private key, 2048 bit long modulus (2 primes)</span><br><span class="line">..........................................................................+++++</span><br><span class="line">.....................................................................................................+++++</span><br><span class="line">e is 65537 (0x010001)</span><br><span class="line">[root@Centos8 ~]<span class="comment"># cat /data/app1/app1.key </span></span><br><span class="line">-----BEGIN RSA PRIVATE KEY-----</span><br><span class="line">MIIEogIBAAKCAQEAym6ZTqdjSCufNf3SLPqzJlHKMwzfffUCcXCzJ2qWsViMUgfY</span><br><span class="line">TplT1ZbETbAbbbD7bbuYaj5WWuLXqRwbJxCPhnu0dF/c2z+SFSiZwiqyONXHVvHt</span><br><span class="line">LJ/SpZkizft8r13oWtcBLTi4nXUJpObJID4JjHq3/cZcJTM4NaCpiKrt85nFldGm</span><br><span class="line">ffS9lop1wxLdx2C6T8GBwZNAeyrVy9gosk7DpG4Ua0gYB1V7NgyuACKeiSdJODb0</span><br><span class="line">xRAY9ereQqoFwRWcR6BR0th1kRP+FuYSjsLkL6hmpoQnmKY6uz3rXgTa5l3aVx6Q</span><br><span class="line">65H96fSTCpp1lbiA/jrQD/5J75B7vLs2tEogXwIDAQABAoIBAAa6OjoU8gW5/WaL</span><br><span class="line">8uovwrhpS3D64oqLE/O1LR8IOc3XBYLMY/HowpJ8mjWCvsacdR6md2BAhhorI8Oo</span><br><span class="line">/XYE5OAxSEP905ctu6scWE/Nn3KoGCHZlGpBPXznY/K4guJJGqm6L33TPr9s3k8u</span><br><span class="line">pEyAA0053td+Oh26YAnYNwoltBa+XGDpwHkQWRiKPnwyLreJvelzyQ9lVzvi1pYD</span><br><span class="line">QHgZrUVwd379s7fnMm+WG6sO3+0F4M8nEZcSbdoUIymJv6FJPcH1vK6rcXHml7Qu</span><br><span class="line">qoCaQtcN3UlAcfjm1Lfhx9x5kzC2yTmM/OxudP4Dn9/gBp7azKyMy1f1XfIeF0u8</span><br><span class="line">gtCyCeECgYEA63b867K0UV2BgRxRJ4fjL3/6ToPoxyYEFQgQBI+G5dN49XyT6DnA</span><br><span class="line">liRe+5Ez1umKcSgdt0RIXjVQQijZW2ma8Lg4NfMxm9UajjJy17sn5uNSqrvQ/P+V</span><br><span class="line">cXKZlyejC1quwreiFQFwIZnjk+qiCzS/IBwGOSSDTI0Y/xLVVVRNukcCgYEA3BYe</span><br><span class="line">JWxrMCxrGQlpNxqHeuvJuc1AYTXgpOzwhJgRSOFxmi1UMQZc6AhyT1QR7QNPDYoe</span><br><span class="line">Ux0a1qq+Mh5o29JSlY6Gl/JxeW3sjeQr67D1j1y1Ir/yflzKiud++1KoX51RTaa/</span><br><span class="line">qR4oRoM9rKvagJuTpSH5XMRfu2NnGbdR85G43SkCgYBNv9Rz32Y7F60TfM4vR2d0</span><br><span class="line">38U+9799QshGSYtAdkQMz285YBFWtPsqmIfkeWWsqSDVjHGDekCLGv+NWP+sd4p5</span><br><span class="line">wdqNtefDlPJX0cCqC1p5msZJKgsv/xTRiQ2+I5Bqx169XPVgCkGEVtQWm3s2SAx0</span><br><span class="line">BczoQW45cL24O/fFXTjtMQKBgBrJ0meJt85ISczlWVosr3rlwksMUZ7DeRF6CZiK</span><br><span class="line">DeiKEFLM26eP97UCei9vszLfKTsjqadCLqccZ0QgcXD4O7cafwV1rBw0pgtrT3FD</span><br><span class="line">u8/0X9PX+0MoNjsMDGe42uewdVn3RvLlyc8zYElpLZJj3WfHJ9wDxwc/BSibKK11</span><br><span class="line">+kNpAoGAfNTLIEk9dRZHW1RSSsIMd5Y3sj8eCtbyRC2G77ciB02VTCieCUiNVhq0</span><br><span class="line">jhHj9RE6lcRvkrCDc7lNltPsmVD3DHVI309pMQfF28wZPnaAlB4RlA69Q5wTssmg</span><br><span class="line">581NbKMN9oBa15hMtDYwsjI87Ny6+/7QDsE5WV9ONquWU1GP9fM=</span><br><span class="line">-----END RSA PRIVATE KEY-----</span><br><span class="line"></span><br><span class="line"><span class="comment">#生成申请证书文件</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># openssl req -new -key /data/app1/app1.key -out /data/app1/app1.csr</span></span><br><span class="line">You are about to be asked to enter information that will be incorporated</span><br><span class="line">into your certificate request.</span><br><span class="line">What you are about to enter is what is called a Distinguished Name or a DN.</span><br><span class="line">There are quite a few fields but you can leave some blank</span><br><span class="line">For some fields there will be a default value,</span><br><span class="line">If you enter <span class="string">&#x27;.&#x27;</span>, the field will be left blank.</span><br><span class="line">-----</span><br><span class="line">Country Name (2 letter code) [XX]:CN</span><br><span class="line">State or Province Name (full name) []:GuangDong</span><br><span class="line">Locality Name (eg, city) [Default City]:ShenZhen</span><br><span class="line">Organization Name (eg, company) [Default Company Ltd]:StarsInfo</span><br><span class="line">Organizational Unit Name (eg, section) []:IT</span><br><span class="line">Common Name (eg, your name or your server<span class="string">&#x27;s hostname) []:ca.starsinfo.com</span></span><br><span class="line"><span class="string">Email Address []:app1@starsinfo.com</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Please enter the following &#x27;</span>extra<span class="string">&#x27; attributes</span></span><br><span class="line"><span class="string">to be sent with your certificate request</span></span><br><span class="line"><span class="string">A challenge password []:  </span></span><br><span class="line"><span class="string">An optional company name []:</span></span><br><span class="line"><span class="string">[root@Centos8 ~]# ll /data/app1/</span></span><br><span class="line"><span class="string">total 8</span></span><br><span class="line"><span class="string">-rw-r--r-- 1 root root 1066 Jan 16 14:50 app1.csr</span></span><br><span class="line"><span class="string">-rw------- 1 root root 1675 Jan 16 14:46 app1.key</span></span><br><span class="line"><span class="string">[root@Centos8 ~]# ll /etc/pki/CA</span></span><br><span class="line"><span class="string">total 8</span></span><br><span class="line"><span class="string">-rw-r--r-- 1 root root 1464 Jan 16 14:22 cacert.pem</span></span><br><span class="line"><span class="string">drwxr-xr-x 2 root root    6 Jan 16 13:50 certs</span></span><br><span class="line"><span class="string">drwxr-xr-x 2 root root    6 Jan 16 13:50 crl</span></span><br><span class="line"><span class="string">-rw-r--r-- 1 root root    0 Jan 16 13:51 index.txt</span></span><br><span class="line"><span class="string">drwxr-xr-x 2 root root    6 Jan 16 13:50 newcerts</span></span><br><span class="line"><span class="string">drwxr-xr-x 2 root root   23 Jan 16 14:10 private</span></span><br><span class="line"><span class="string">-rw-r--r-- 1 root root    3 Jan 16 14:01 serial</span></span><br></pre></td></tr></table></figure><h2 id="CA颁发证书"><a href="#CA颁发证书" class="headerlink" title="CA颁发证书"></a>CA颁发证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos8 ~]<span class="comment"># openssl ca -in /data/app1/app1.csr -out /etc/pki/CA/certs/app1.crt -days 2000</span></span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">Check that the request matches the signature</span><br><span class="line">Signature ok</span><br><span class="line">Certificate Details:</span><br><span class="line">        Serial Number: 0 (0x0)</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Jan 16 06:56:54 2022 GMT</span><br><span class="line">            Not After : Jul  9 06:56:54 2027 GMT</span><br><span class="line">        Subject:</span><br><span class="line">            countryName               = CN</span><br><span class="line">            stateOrProvinceName       = GuangDong</span><br><span class="line">            organizationName          = StarsInfo</span><br><span class="line">            organizationalUnitName    = IT</span><br><span class="line">            commonName                = ca.starsinfo.com</span><br><span class="line">            emailAddress              = app1@starsinfo.com</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:FALSE</span><br><span class="line">            Netscape Comment: </span><br><span class="line">                OpenSSL Generated Certificate</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                78:E6:6E:3B:63:62:B0:14:30:57:AE:CB:62:DD:EE:B6:8C:EE:36:94</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:6D:81:C8:D9:FA:3E:DB:8B:69:B6:DE:6E:01:63:DD:9A:4F:BD:84:1B</span><br><span class="line"></span><br><span class="line">Certificate is to be certified <span class="keyword">until</span> Jul  9 06:56:54 2027 GMT (2000 days)</span><br><span class="line">Sign the certificate? [y/n]:y</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">1 out of 1 certificate requests certified, commit? [y/n]y</span><br><span class="line">Write out database with 1 new entries</span><br><span class="line">Data Base Updated</span><br><span class="line">[root@Centos8 ~]<span class="comment"># tree /etc/pki/CA/</span></span><br><span class="line">/etc/pki/CA/</span><br><span class="line">├── cacert.pem</span><br><span class="line">├── certs</span><br><span class="line">│   └── app1.crt</span><br><span class="line">├── crl</span><br><span class="line">├── index.txt</span><br><span class="line">├── index.txt.attr</span><br><span class="line">├── index.txt.old</span><br><span class="line">├── newcerts</span><br><span class="line">│   └── 00.pem</span><br><span class="line">├── private</span><br><span class="line">│   └── cakey.pem</span><br><span class="line">├── serial</span><br><span class="line">└── serial.old</span><br><span class="line"></span><br><span class="line">4 directories, 9 files</span><br></pre></td></tr></table></figure><h2 id="查看和验证证书"><a href="#查看和验证证书" class="headerlink" title="查看和验证证书"></a>查看和验证证书</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br></pre></td><td class="code"><pre><span class="line">[root@Centos8 ~]<span class="comment"># cat /etc/pki/CA/certs/app1.crt </span></span><br><span class="line">Certificate:</span><br><span class="line">    Data:</span><br><span class="line">        Version: 3 (0x2)</span><br><span class="line">        Serial Number: 0 (0x0)</span><br><span class="line">        Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">        Issuer: C=CN, ST=GuangDong, L=ShenZhen, O=StarsInfo, OU=IT, CN=ca.starsinfo.com/emailAddress=admin@starsinfo.com</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Jan 16 06:56:54 2022 GMT</span><br><span class="line">            Not After : Jul  9 06:56:54 2027 GMT</span><br><span class="line">        Subject: C=CN, ST=GuangDong, O=StarsInfo, OU=IT, CN=ca.starsinfo.com/emailAddress=app1@starsinfo.com</span><br><span class="line">        Subject Public Key Info:</span><br><span class="line">            Public Key Algorithm: rsaEncryption</span><br><span class="line">                RSA Public-Key: (2048 bit)</span><br><span class="line">                Modulus:</span><br><span class="line">                    00:ca:6e:99:4e:a7:63:48:2b:9f:35:fd:d2:2c:fa:</span><br><span class="line">                    b3:26:51:ca:33:0c:<span class="built_in">df</span>:7d:f5:02:71:70:b3:27:6a:</span><br><span class="line">                    96:b1:58:8c:52:07:d8:4e:99:53:d5:96:c4:4d:b0:</span><br><span class="line">                    1b:6d:b0:fb:6d:bb:98:6a:3e:56:5a:e2:d7:a9:1c:</span><br><span class="line">                    1b:27:10:8f:86:7b:b4:74:5f:dc:db:3f:92:15:28:</span><br><span class="line">                    99:c2:2a:b2:38:d5:c7:56:f1:ed:2c:9f:d2:a5:99:</span><br><span class="line">                    22:<span class="built_in">cd</span>:fb:7c:af:5d:e8:5a:d7:01:2d:38:b8:9d:75:</span><br><span class="line">                    09:a4:e6:c9:20:3e:09:8c:7a:b7:fd:c6:5c:25:33:</span><br><span class="line">                    38:35:a0:a9:88:aa:ed:f3:99:c5:95:d1:a6:7d:f4:</span><br><span class="line">                    bd:96:8a:75:c3:12:<span class="built_in">dd</span>:c7:60:ba:4f:c1:81:c1:93:</span><br><span class="line">                    40:7b:2a:d5:cb:d8:28:b2:4e:c3:a4:6e:14:6b:48:</span><br><span class="line">                    18:07:55:7b:36:0c:ae:00:22:9e:89:27:49:38:36:</span><br><span class="line">                    f4:c5:10:18:f5:ea:de:42:aa:05:c1:15:9c:47:a0:</span><br><span class="line">                    51:d2:d8:75:91:13:fe:16:e6:12:8e:c2:e4:2f:a8:</span><br><span class="line">                    66:a6:84:27:98:a6:3a:bb:3d:eb:5e:04:da:e6:5d:</span><br><span class="line">                    da:57:1e:90:eb:91:fd:e9:f4:93:0a:9a:75:95:b8:</span><br><span class="line">                    80:fe:3a:d0:0f:fe:49:ef:90:7b:bc:bb:36:b4:4a:</span><br><span class="line">                    20:5f</span><br><span class="line">                Exponent: 65537 (0x10001)</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:FALSE</span><br><span class="line">            Netscape Comment: </span><br><span class="line">                OpenSSL Generated Certificate</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                78:E6:6E:3B:63:62:B0:14:30:57:AE:CB:62:DD:EE:B6:8C:EE:36:94</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:6D:81:C8:D9:FA:3E:DB:8B:69:B6:DE:6E:01:63:DD:9A:4F:BD:84:1B</span><br><span class="line"></span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">         17:36:d3:c1:f3:8d:b1:c0:29:a6:a1:ca:7a:97:da:ef:00:46:</span><br><span class="line">         f0:c5:96:45:65:bf:cb:95:6c:02:75:01:f5:85:4f:17:b5:e4:</span><br><span class="line">         ef:08:91:0e:04:55:ec:a4:4a:08:fe:a3:83:f8:de:6f:9f:97:</span><br><span class="line">         48:14:46:87:7e:3f:bd:3b:fb:b5:87:8c:24:c3:47:75:4e:f0:</span><br><span class="line">         ca:d2:a1:83:4a:27:b0:21:13:f2:90:8d:b4:85:a7:51:fd:ed:</span><br><span class="line">         4a:4e:81:6e:a4:11:2e:55:10:28:7e:8e:fa:e6:2a:84:51:16:</span><br><span class="line">         57:52:5d:cf:80:a9:5f:d2:af:cc:8b:65:f6:5b:56:72:39:aa:</span><br><span class="line">         bf:c3:41:09:f6:4f:ec:a3:ce:b2:46:91:11:d2:43:27:8d:20:</span><br><span class="line">         d7:72:9b:78:54:95:48:11:c3:81:87:d7:1a:3c:3c:9c:c0:db:</span><br><span class="line">         91:65:cb:f5:5a:5f:99:3e:08:79:6f:8e:78:34:67:d3:5a:b8:</span><br><span class="line">         d0:69:57:40:3f:6f:5b:39:62:a8:52:29:8b:4c:<span class="built_in">fc</span>:f6:0e:bd:</span><br><span class="line">         b2:82:06:b1:8b:38:b7:b8:46:8f:08:a4:ec:c4:8e:ec:2f:57:</span><br><span class="line">         53:2f:71:1c:dc:fb:7d:47:a1:eb:4e:25:e9:1d:99:10:2d:87:</span><br><span class="line">         0e:f9:4c:eb:bc:90:6a:8d:5d:d0:33:b2:99:16:4c:43:91:41:</span><br><span class="line">         f4:40:05:16</span><br><span class="line">-----BEGIN CERTIFICATE-----</span><br><span class="line">MIIEDDCCAvSgAwIBAgIBADANBgkqhkiG9w0BAQsFADCBlDELMAkGA1UEBhMCQ04x</span><br><span class="line">EjAQBgNVBAgMCUd1YW5nRG9uZzERMA8GA1UEBwwIU2hlblpoZW4xEjAQBgNVBAoM</span><br><span class="line">CVN0YXJzSW5mbzELMAkGA1UECwwCSVQxGTAXBgNVBAMMEGNhLnN0YXJzaW5mby5j</span><br><span class="line">b20xIjAgBgkqhkiG9w0BCQEWE2FkbWluQHN0YXJzaW5mby5jb20wHhcNMjIwMTE2</span><br><span class="line">MDY1NjU0WhcNMjcwNzA5MDY1NjU0WjCBgDELMAkGA1UEBhMCQ04xEjAQBgNVBAgM</span><br><span class="line">CUd1YW5nRG9uZzESMBAGA1UECgwJU3RhcnNJbmZvMQswCQYDVQQLDAJJVDEZMBcG</span><br><span class="line">A1UEAwwQY2Euc3RhcnNpbmZvLmNvbTEhMB8GCSqGSIb3DQEJARYSYXBwMUBzdGFy</span><br><span class="line">c2luZm8uY29tMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAym6ZTqdj</span><br><span class="line">SCufNf3SLPqzJlHKMwzfffUCcXCzJ2qWsViMUgfYTplT1ZbETbAbbbD7bbuYaj5W</span><br><span class="line">WuLXqRwbJxCPhnu0dF/c2z+SFSiZwiqyONXHVvHtLJ/SpZkizft8r13oWtcBLTi4</span><br><span class="line">nXUJpObJID4JjHq3/cZcJTM4NaCpiKrt85nFldGmffS9lop1wxLdx2C6T8GBwZNA</span><br><span class="line">eyrVy9gosk7DpG4Ua0gYB1V7NgyuACKeiSdJODb0xRAY9ereQqoFwRWcR6BR0th1</span><br><span class="line">kRP+FuYSjsLkL6hmpoQnmKY6uz3rXgTa5l3aVx6Q65H96fSTCpp1lbiA/jrQD/5J</span><br><span class="line">75B7vLs2tEogXwIDAQABo3sweTAJBgNVHRMEAjAAMCwGCWCGSAGG+EIBDQQfFh1P</span><br><span class="line">cGVuU1NMIEdlbmVyYXRlZCBDZXJ0aWZpY2F0ZTAdBgNVHQ4EFgQUeOZuO2NisBQw</span><br><span class="line">V67LYt3utozuNpQwHwYDVR0jBBgwFoAUbYHI2fo+24tptt5uAWPdmk+9hBswDQYJ</span><br><span class="line">KoZIhvcNAQELBQADggEBABc208HzjbHAKaahynqX2u8ARvDFlkVlv8uVbAJ1AfWF</span><br><span class="line">Txe15O8IkQ4EVeykSgj+o4P43m+fl0gURod+P707+7WHjCTDR3VO8MrSoYNKJ7Ah</span><br><span class="line">E/KQjbSFp1H97UpOgW6kES5VECh+jvrmKoRRFldSXc+AqV/Sr8yLZfZbVnI5qr/D</span><br><span class="line">QQn2T+yjzrJGkRHSQyeNINdym3hUlUgRw4GH1xo8PJzA25Fly/VaX5k+CHlvjng0</span><br><span class="line">Z9NauNBpV0A/b1s5YqhSKYtM/PYOvbKCBrGLOLe4Ro8IpOzEjuwvV1MvcRzc+31H</span><br><span class="line">oetOJekdmRAthw75TOu8kGqNXdAzspkWTEORQfRABRY=</span><br><span class="line">-----END CERTIFICATE-----</span><br><span class="line"></span><br><span class="line">[root@Centos8 ~]<span class="comment"># openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -text</span></span><br><span class="line">Certificate:</span><br><span class="line">    Data:</span><br><span class="line">        Version: 3 (0x2)</span><br><span class="line">        Serial Number: 0 (0x0)</span><br><span class="line">        Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">        Issuer: C = CN, ST = GuangDong, L = ShenZhen, O = StarsInfo, OU = IT, CN = ca.starsinfo.com, emailAddress = admin@starsinfo.com</span><br><span class="line">        Validity</span><br><span class="line">            Not Before: Jan 16 06:56:54 2022 GMT</span><br><span class="line">            Not After : Jul  9 06:56:54 2027 GMT</span><br><span class="line">        Subject: C = CN, ST = GuangDong, O = StarsInfo, OU = IT, CN = ca.starsinfo.com, emailAddress = app1@starsinfo.com</span><br><span class="line">        Subject Public Key Info:</span><br><span class="line">            Public Key Algorithm: rsaEncryption</span><br><span class="line">                RSA Public-Key: (2048 bit)</span><br><span class="line">                Modulus:</span><br><span class="line">                    00:ca:6e:99:4e:a7:63:48:2b:9f:35:fd:d2:2c:fa:</span><br><span class="line">                    b3:26:51:ca:33:0c:<span class="built_in">df</span>:7d:f5:02:71:70:b3:27:6a:</span><br><span class="line">                    96:b1:58:8c:52:07:d8:4e:99:53:d5:96:c4:4d:b0:</span><br><span class="line">                    1b:6d:b0:fb:6d:bb:98:6a:3e:56:5a:e2:d7:a9:1c:</span><br><span class="line">                    1b:27:10:8f:86:7b:b4:74:5f:dc:db:3f:92:15:28:</span><br><span class="line">                    99:c2:2a:b2:38:d5:c7:56:f1:ed:2c:9f:d2:a5:99:</span><br><span class="line">                    22:<span class="built_in">cd</span>:fb:7c:af:5d:e8:5a:d7:01:2d:38:b8:9d:75:</span><br><span class="line">                    09:a4:e6:c9:20:3e:09:8c:7a:b7:fd:c6:5c:25:33:</span><br><span class="line">                    38:35:a0:a9:88:aa:ed:f3:99:c5:95:d1:a6:7d:f4:</span><br><span class="line">                    bd:96:8a:75:c3:12:<span class="built_in">dd</span>:c7:60:ba:4f:c1:81:c1:93:</span><br><span class="line">                    40:7b:2a:d5:cb:d8:28:b2:4e:c3:a4:6e:14:6b:48:</span><br><span class="line">                    18:07:55:7b:36:0c:ae:00:22:9e:89:27:49:38:36:</span><br><span class="line">                    f4:c5:10:18:f5:ea:de:42:aa:05:c1:15:9c:47:a0:</span><br><span class="line">                    51:d2:d8:75:91:13:fe:16:e6:12:8e:c2:e4:2f:a8:</span><br><span class="line">                    66:a6:84:27:98:a6:3a:bb:3d:eb:5e:04:da:e6:5d:</span><br><span class="line">                    da:57:1e:90:eb:91:fd:e9:f4:93:0a:9a:75:95:b8:</span><br><span class="line">                    80:fe:3a:d0:0f:fe:49:ef:90:7b:bc:bb:36:b4:4a:</span><br><span class="line">                    20:5f</span><br><span class="line">                Exponent: 65537 (0x10001)</span><br><span class="line">        X509v3 extensions:</span><br><span class="line">            X509v3 Basic Constraints: </span><br><span class="line">                CA:FALSE</span><br><span class="line">            Netscape Comment: </span><br><span class="line">                OpenSSL Generated Certificate</span><br><span class="line">            X509v3 Subject Key Identifier: </span><br><span class="line">                78:E6:6E:3B:63:62:B0:14:30:57:AE:CB:62:DD:EE:B6:8C:EE:36:94</span><br><span class="line">            X509v3 Authority Key Identifier: </span><br><span class="line">                keyid:6D:81:C8:D9:FA:3E:DB:8B:69:B6:DE:6E:01:63:DD:9A:4F:BD:84:1B</span><br><span class="line"></span><br><span class="line">    Signature Algorithm: sha256WithRSAEncryption</span><br><span class="line">         17:36:d3:c1:f3:8d:b1:c0:29:a6:a1:ca:7a:97:da:ef:00:46:</span><br><span class="line">         f0:c5:96:45:65:bf:cb:95:6c:02:75:01:f5:85:4f:17:b5:e4:</span><br><span class="line">         ef:08:91:0e:04:55:ec:a4:4a:08:fe:a3:83:f8:de:6f:9f:97:</span><br><span class="line">         48:14:46:87:7e:3f:bd:3b:fb:b5:87:8c:24:c3:47:75:4e:f0:</span><br><span class="line">         ca:d2:a1:83:4a:27:b0:21:13:f2:90:8d:b4:85:a7:51:fd:ed:</span><br><span class="line">         4a:4e:81:6e:a4:11:2e:55:10:28:7e:8e:fa:e6:2a:84:51:16:</span><br><span class="line">         57:52:5d:cf:80:a9:5f:d2:af:cc:8b:65:f6:5b:56:72:39:aa:</span><br><span class="line">         bf:c3:41:09:f6:4f:ec:a3:ce:b2:46:91:11:d2:43:27:8d:20:</span><br><span class="line">         d7:72:9b:78:54:95:48:11:c3:81:87:d7:1a:3c:3c:9c:c0:db:</span><br><span class="line">         91:65:cb:f5:5a:5f:99:3e:08:79:6f:8e:78:34:67:d3:5a:b8:</span><br><span class="line">         d0:69:57:40:3f:6f:5b:39:62:a8:52:29:8b:4c:<span class="built_in">fc</span>:f6:0e:bd:</span><br><span class="line">         b2:82:06:b1:8b:38:b7:b8:46:8f:08:a4:ec:c4:8e:ec:2f:57:</span><br><span class="line">         53:2f:71:1c:dc:fb:7d:47:a1:eb:4e:25:e9:1d:99:10:2d:87:</span><br><span class="line">         0e:f9:4c:eb:bc:90:6a:8d:5d:d0:33:b2:99:16:4c:43:91:41:</span><br><span class="line">         f4:40:05:16</span><br><span class="line"></span><br><span class="line"><span class="comment">#查看证书编号</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -serial</span></span><br><span class="line">serial=00</span><br><span class="line"><span class="comment">#查看证书的信息</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -issuer</span></span><br><span class="line">issuer=C = CN, ST = GuangDong, L = ShenZhen, O = StarsInfo, OU = IT, CN = ca.starsinfo.com, emailAddress = admin@starsinfo.com</span><br><span class="line">[root@Centos8 ~]<span class="comment"># openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -subject</span></span><br><span class="line">subject=C = CN, ST = GuangDong, O = StarsInfo, OU = IT, CN = ca.starsinfo.com, emailAddress = app1@starsinfo.com</span><br><span class="line">[root@Centos8 ~]<span class="comment"># openssl x509 -in /etc/pki/CA/certs/app1.crt -noout -dates </span></span><br><span class="line">notBefore=Jan 16 06:56:54 2022 GMT</span><br><span class="line">notAfter=Jul  9 06:56:54 2027 GMT</span><br><span class="line"><span class="comment">#查看证书的有效性</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># openssl ca -status 00</span></span><br><span class="line">Using configuration from /etc/pki/tls/openssl.cnf</span><br><span class="line">00=Valid (V)</span><br><span class="line">[root@Centos8 ~]<span class="comment"># cat /etc/pki/CA/index.txt</span></span><br><span class="line">V   270709065654Z       00  unknown /C=CN/ST=GuangDong/O=StarsInfo/OU=IT/CN=ca.starsinfo.com/emailAddress=app1@starsinfo.com</span><br><span class="line"><span class="comment">#将证书传到Windows上面，查看验证</span></span><br><span class="line">[root@Centos8 ~]<span class="comment"># sz /etc/pki/CA/certs/app1.crt</span></span><br></pre></td></tr></table></figure><p><img src="/images/cacert1.png"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
